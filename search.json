[{"title":"通过ZeroTier内网穿透连接软路由","url":"/posts/b3b6660f.html","content":"\n想要在外面随时可以查看路由器，就需要启用软路由的 ZeroTier 功能，经过配置后就可以在任何安装了 ZeroTier 的设备上直接访问内网。\n\n- 路由器启用 ZeroTier\n- 登录 ZeroTier 网站，创建 Network，获取 NetworkId。\n\n在任何安装 ZeroTier 的设备上通过 NetworkId 加入该网络，即形成了一个 ZeroTier 打造的局域网。\n\n- 软路由/电脑/移动设备 ZeroTier 界面通过输入 NetworkId 加入网络。\n- 登录 ZeroTier 网站，在 Members 下通过地址确认各设备并授予权限，ZeroTier 会自动分配一个 ip 地址，形成一个局域网。\n- 如果想要保持软路由的地址一致，在 ZeroTier 网站界面 Managed Routes 添加一个跳转，Destination 为目标软路由地址，via 为 ZeroTier 为软路由设备自动分配的地址。\n","tags":["路由器"]},{"title":"红米AX6000刷OpenWrt","url":"/posts/64b870d7.html","content":"\n网上给红米 AX6000 刷 OpenWrt 的内容多如牛毛，我也是参考了恩山论坛的帖子，期间也用小米路由器救砖工具重置过几次路由器，在此记录一下参考的网站和遇到的问题。\n\n#### 刷机步骤\n\n在[红米 AX6000 闭源驱动 op](https://www.right.com.cn/forum/forum.php?mod=viewthread&tid=8261104&page=1&authorid=364126)下载作者编译的 ImmortalWrt 固件，参考[红米 AX6000 X-WRT 固件刷机教程](https://www.right.com.cn/forum/thread-8255378-1-1.html)刷入 X-Wrt 底包，之后在 X-wrt web 界面刷入下载好的 ImmortalWrt。\n\n#### 遇到的问题\n\n- 按教程刷入 X-Wrt 或者 OpenWrt stack 底包重启后没有 Wifi 信号，导致无法连接路由器登陆后台。\n\n  这是因为底包默认关闭了 Wifi 功能，将路由器通过网线连接电脑，在控制面板/网络和 Internet/查看网络信息，找到设备查看详细信息就可以看到电脑自动分配的 IP 地址了。如果自动分配的 IP 地址打不开，可以点击属性，在 IPv4 设置里手动设置 IPv4 地址。\n\n  根据 Ip 地址登录之后可以在菜单栏无线里面打开 Wifi 功能。\n\n- 底包 Web 页面刷入 ImmortalWrt 有警告提示。\n\n  不慌，大胆刷。\n\n- PassWall TCP 节点分流无效，指定单个节点却正常。\n\n  先选择单个节点确保网络正常翻墙，选择规则管理，checkbox 勾选 geoip geosite 规则并且手动更新。\n","tags":["路由器"]},{"title":"更新.gitignore","url":"/posts/efc43189.html","content":"如何应用.gitignore文件的更新。\n\n```bash\ngit rm -r --cached .  #清除缓存\ngit add . #重新trace file\ngit commit -m \"update .gitignore\" #提交和注释\ngit push origin master #可选，如果需要同步到remote上的话\n\n```\n","tags":["git"]},{"title":"n1盒子设置","url":"/posts/e5530a2c.html","content":"\n记录一下 n1 盒子刷上 OpenWrt 之后的一些问题。\n\n#### n1 盒子作旁路由\n\n- n1 盒子与主路由保持同一网段，譬如主路由是 192.168.0.1，则 n1 盒子 ip 是 192.168.0.x，x!=1。\n\n- 主路由\n  打开 dhcp\n\n- n1 盒子\n  设置网关为主路由的地址 192.168.0.1\n  关闭 dhcp 服务\n\n#### passwall\n\n- 如果想针对特定设备能够翻墙，则需要在对应设备设置网关和 dns 为 n1 盒子的 ip 地址\n\n- 如果想要不区分设备，则要在主路由 dhcp 设置网关和 dns 为 n1 盒子的 ip 地址，这样就相当于为每个设备自动下发了对应的网关和 dns 设置\n\n这种方式旁路由和主路由都能够实现翻墙，所有的链接会经过 passwall 的分流处理交由主路由。\n\n#### openClash\n\n这种方式只要 openClash 配置好就能上网，无需操作主路由，而且连接主路由正常上网，链接 n1 盒子翻墙上网，分配明确。\n","tags":["路由器"]},{"title":"WSL打开VSCode出错","url":"/posts/966fb4be.html","content":"在WSL命令行中输入命令`code .`应该会呼出Windows的VSCode,但是却提示错误\n\n```bash\nSetting up server environment: Looking for /home/xxx/.vscode-server/server-env-setup. Not found.\n```\n可以手动删除`/home/xxx/.vscode-server`，此时运行`code .`会重新安装VSCode。","tags":["vscode"]},{"title":"HTML原生input标签实现调色板功能","url":"/posts/a8dd745b.html","content":"\n使用 input 标签 type=‘color'属性调出浏览器的调色板，监听 input 事件实时获取取色值，将 input 标签隐藏以应用自定义样式。\n\n```html\n<style>\n  .palette {\n    width: 30px;\n    height: 30px;\n    border-radius: 9999px;\n    background-color: #000;\n  }\n  input {\n    opacity: 0;\n    position: absolute;\n    overflow: hidden;\n    height: 30px;\n    width: 30px;\n  }\n</style>\n\n<div class=\"palette\">\n  <input\n    type=\"color\"\n    onChange=\"handleChange(event)\"\n    onInput=\"handleInput(event)\"\n  />\n</div>\n\n<script>\n  const handleChange = (e) => {\n    // 监听调色板展示/关闭\n    console.log(e.target.value)\n  }\n\n  const handleInput = (e) => {\n    // 监听颜色选择\n    const color = e.target.value\n    document\n      .querySelector('.palette')\n      .setAttribute('style', `background-color:${color}`)\n  }\n</script>\n```\n"},{"title":"通过Chrome Devtool在PC端调试安卓设备网页","url":"/posts/9f6a5371.html","content":"\n开发过程中需要使用移动设备测试页面，为了方便调试，可以通过 PC 连接移动设备(Android)，使用 Chrome 浏览器 Devtool 像调试 PC 页面一样调试移动设备。\n\n- 电脑连接手机\n\n  手机开发者模式打开 usb 调试；或者无线调试，使用 adb 命令连接设备。\n\n- 导航栏地址 `chrome://inspect/#devices`\n\n  允许浏览器通过 usb 或者 network 查找连接的手机\n\n以上操作完成后，会在 Remote Target 下看到自己的手机型号，此时在手机浏览器打开任意页面都会反映在当前页面，通过 inspect 调试相应页面即可。\n"},{"title":"扁平化嵌套数组-flat方法","url":"/posts/e26bf268.html","content":"\n当需要把嵌套数组转成扁平数组时可以使用 flat 方法，arr.flat(depth) depth 指的是需要拍平的深度。\n\n```javascript\nconst arr = [1, 2, 3, [4, 5], [[6, 7], 8], 9]\n\narr.flat() // [ 1, 2, 3, 4, 5, [ 6, 7 ], 8, 9 ]\narr.flat(1) // [ 1, 2, 3, 4, 5, [ 6, 7 ], 8, 9 ]\narr.flat(2) // [ 1, 2, 3, 4, 5,6, 7, 8, 9]\n```\n","tags":["JavaScript"]},{"title":"使用Object.entries循环对象","url":"/posts/282cecd0.html","content":"\n平时循环对象一直使用 Object.keys(),最近学到了用 Object.entries()感觉更方便。\n\n```javascript\nconst obj = [\n  {\n    name: 'wang',\n    age: 38,\n  },\n]\nfor (const [name, age] of obj.entries(obj)) {\n  console.log(name, age)\n}\n```\n","tags":["JavaScript"]},{"title":"前端批量下载遇到的问题","url":"/posts/fb7bfada.html","content":"\n在需要批量下载文件时，总是最后一个文件能够下载成功，在 Chrome Devtool 的网络请求里可以看到前面的文件请求状态是 canceled，代码如下。\n\n```js\nconst saveFile = (url, filename) => {\n  const link = document.createElement('a')\n  link.href = url\n  link.download = filename\n  link.click()\n}\n\nfileList.forEach((file) => {\n  saveFile(file.url, file.filename)\n})\n```\n\n- 原因：把 a 链接当成一次网页导航，当点击 a 链接跳转时又重复点击该链接，浏览器此时会重置之前的跳转并重新计算，这就导致了之前的网络请求都被 canceled。\n\n- 解决方法：使用 iframe 隐藏下载，但是缺点是会在 body 里面嵌入多个 iframe。\n\n  ```js\n  const saveFile = (url: string) => {\n    const iframe = document.createElement('iframe')\n    iframe.setAttribute('sandbox', 'allow-downloads allow-scripts')\n    iframe.src = url\n    iframe.setAttribute('style', 'display: none')\n    document.body.appendChild(iframe)\n\n    setTimeout(() => {\n      iframe.remove()\n    }, 1000)\n  }\n  ```\n\n---\n\n参考链接:[Browser is cancelling multiple file download requests](https://stackoverflow.com/questions/52051330/browser-is-cancelling-multiple-file-download-requests)\n"},{"title":"VSCode编写gql语句时根据GraphQL Schema自动补全","url":"/posts/ce03c2ea.html","content":"\n在使用 postman 测试 GraphQL 接口时发现 postman 有个 auto-fetch 的功能，可以自动拉取 GraphQL Schema 帮助补全 gql 语句。既然 postman 能够实现这个功能，那么 VSCode 一定有现成的对应方案，为什么我还要手动写 gql 语句呢。\n\n- VSCode 安装插件[GraphQL: Language Feature Support](https://marketplace.visualstudio.com/items?itemName=GraphQL.vscode-graphql)\n\n- 在项目根目录添加配置文件.graphqlrc，添加 schema 地址\n  ```json\n  {\n    \"schema\": \"http://10.10.0.30:3007/graphql\"\n  }\n  ```\n"},{"title":"jsPdf中文乱码的问题","url":"/posts/9d248dda.html","content":"\n需求是 前端将通过富文本编辑器产生的 rawHtml 发给后端，在展示的时候需要将后端此时传过来的 rawHtml 直接转化成 pdf 下载查看。这里选择使用 jsPdf 在前端利用 html()方法生成 pdf 文件，但是遇到了中文乱码以及在同时使用 TailwindCSS 导致的标签默认样式被覆盖的问题。\n\n<!-- more -->\n\n#### 字体乱码\n\n- 通过翻阅官方文档，找到了关于字体乱码的解决方法--手动添加字体。\n\n  > Use of Unicode Characters / UTF-8:  \n  > The 14 standard fonts in PDF are limited to the ASCII-codepage. If you want to use UTF-8 you have to integrate a custom font, which provides the needed glyphs. jsPDF supports .ttf-files. So if you want to have for example Chinese text in your pdf, your font has to have the necessary Chinese glyphs. So, check if your font supports the wanted glyphs or else it will show garbled characters instead of the right text.  \n  > To add the font to jsPDF use our fontconverter in /fontconverter/fontconverter.html. The fontconverter will create a js-file with the content of the provided ttf-file as base64 encoded string and additional code for jsPDF. You just have to add this generated js-File to your project. You are then ready to go to use setFont-method in your code and write your UTF-8 encoded text.  \n  > Alternatively you can just load the content of the \\*.ttf file as a binary string using fetch or XMLHttpRequest and add the font to the PDF file:\n  >\n  > ```js\n  > const doc = new jsPDF()\n  > const myFont = ... // load the \\*.ttf font file as binary string\n  >  // add the font to jsPDF\n  > doc.addFileToVFS(\"MyFont.ttf\", myFont);\n  > doc.addFont(\"MyFont.ttf\", \"MyFont\", \"normal\");\n  > doc.setFont(\"MyFont\");\n  > ```\n\n- 方法\n\n  下载中文 ttf 字体(思源宋体)，通过插件提供的[转换工具](https://rawgit.com/MrRio/jsPDF/master/fontconverter/fontconverter.html)将 ttf 字体文件转成 base64 编码.\n\n  **将要输出为 pdf 文件 的 dom 元素设置 font-family 为下载的字体。**\n\n  - html 页面引入 将上面官方生成的 js 文件通过 script 标签引入\n\n  - 手动导入\n    用记事本打开生成的 js 文件，将变量 font 导出，删除 font 变量外无用的代码，在需要的地方引入该变量。\n\n    ```ts\n    import { font } from '../assets/SourceHanSansCN'\n\n    const doc = new jsPDF('p', 'pt', 'a4')\n    const rawHtml=\"<div style='font-family:MyFont;'>你好</div>\"\n    // add the font to jsPDF\n    doc.addFileToVFS('MyFont.ttf', font)\n    doc.addFont('MyFont.ttf', 'MyFont', 'normal')\n    doc.setFont('MyFont')\n    doc.html(rawHtml, { callback: (doc) => doc.save(’test‘), x: 10, y: 10 })\n    ```\n\n#### TailwindCSS 显示 vanilla HTML 排版\n\n在使用 TailwindCSS 时，它会修改并覆盖标签的默认样式，如 h1/h2 标签默认样式被取消，这会导致在将需要以正常 html 格式排版时(如富文本编辑器里面标题)样式被 TailwindCSS 覆盖。所以 TailwindCSS 官方提供了排版插件，只需要正确安装插件，使用 prose 样式类即可还原默认 HTML 样式。\n\n```bash\nnpm install -D @tailwindcss/typography\n```\n\n```js\nmodule.exports = {\n  theme: {\n    // ...\n  },\n  plugins: [\n    require('@tailwindcss/typography'),\n    // ...\n  ],\n}\n```\n\n```html\n<!-- 添加prose -->\n<h1 class=\"prose\">I Have A Dream</h1>\n```\n"},{"title":".eslintrc、.bashrc等配置文件的后缀rc是什么意思","url":"/posts/3c3241df.html","content":"\nrc 是 run commands 的缩写，通常用来表示初始化项目或者程序的配置信息。\n\n> The term rc stands for the phrase \"run commands\". It is used for any file that contains startup information for a command. It is believed to have originated somewhere in 1965 from a runcom facility from the MIT Compatible Time-Sharing System (CTSS).\n","categories":["notes"]},{"title":"test","url":"/posts/d87f7e0c.html","content":"\nhello this is test\n","categories":["notes"]},{"title":"Windows配置记录","url":"/posts/23b5217.html","content":"\n前段时间把电脑重置了，于是电脑也需要重新配置一下，特在此记录一下电脑环境配置和一些好用的软件，以及终端美化方案。\n\n<!-- more -->\n\n#### Windows Linux/Android 子系统\n\n- 安装 wsl `wsl --install`\n\n- 安装 woa ([Windows Subsystem for Android 自定义安装](https://github.com/LSPosed/MagiskOnWSALocal))\n\n  因为微软官方 woa 是基于亚马逊商店，没有 Google 框架，所有这里选择自定义安装带 Goolge 框架和面具的 woa。\n\n  ```bash\n    ./run.sh #1.安装必须的库文件，图形界面自定义选择内容\n\n    # 如OpenGapps下载出错，可以选择自定义安装\n\n    ./build.sh --gapps-brand none #不安装google框架打包，方便下载必要的文件, 此步会生成 download和output文件夹\n\n    #将下载好的OpenGapps放在download文件夹下,命名格式 OpenGApps-{arch}-{variant}.zip\n\n    ./build.sh --offline --gapps-brand OpenGApps --gapps-variant pico --remove-amazon # 以离线方式重新打包，\n\n    #2.找到output文件夹，双击执行Run.bat\n\n  ```\n\n#### Windows 终端\n\n- 安装[PowerShell](https://learn.microsoft.com/en-us/powershell/)\n\n  自 Windows PowerShell 5.1 之后，微软停止了 Windows PowerShell 维护，并且推出新的跨平台终端 PowerShell 以替代 Windows PowerShell，于是在启动 Windows PowerShell 时总能收到官方的 PowerShell 推广。\n\n- 取消启动 Windows PowerShell 时的官方提示\n\n  ```bash\n    #powershell启动\n    powershell.exe -nologo\n  ```\n\n  ```json\n    <!-- vscode集成终端 -->\n    \"PowerShell\": {\n      \"source\": \"PowerShell\",\n      \"args\": [\"-nologo\"],\n      \"icon\": \"terminal-powershell\"\n    }\n  ```\n\n- 安装 [starship](https://starship.rs/)\n\n  starship 是跨平台的终端美化工具，可以很方便地通过配置文件.toml 做一些自定义修改。\n\n  ```bash\n\n    #windows 安装\n    winget install --id Starship.Starship\n\n    # windows 启动\n    Invoke-Expression (&starship init powershell) #notepad $PROFILE\n\n    # 生成配置文件\n    mkdir -p ~/.config && touch ~/.config/starship.toml\n\n  ```\n\n- [Windows 终端 历史自动补全等功能](https://learn.microsoft.com/en-us/powershell/module/psreadline/about/about_psreadline?view=powershell-7.3)\n\n  PowerShell 7.3 包括默认启用预测性 IntelliSense 的 PSReadline 2.2.6\n\n- [Windows 终端文件图标包-Terminal-icons](https://github.com/devblackops/Terminal-Icons)\n\n  Windows $PROFILE 追加 `Import-Module -Name Terminal-Icons`\n\n- [Windows 终端 git 自动补全-poshgit](https://github.com/dahlbyk/posh-git)\n\n#### Linux 终端\n\n- 安装 zsh 终端\n\n  ```bash\n  sudo apt install zsh # 安装zsh\n\n  zsh --version # 查看zsh版本\n\n  chsh -s $(which zsh) # 设置zsh为默认终端\n  ```\n\n- 安装 [ohmyzsh](https://github.com/ohmyzsh/ohmyzsh)\n\n  ohmyzsh 为 zsh 终端提供了大量插件，例如历史命令补全/快速跳转最近目录等，而且还提供了许多 zsh 终端主题。\n\n  配置插件 [plugins wiki](https://github.com/ohmyzsh/ohmyzsh/wiki/Plugins)\n\n  ```bash\n  # Which plugins would you like to load?\n  # Standard plugins can be found in $ZSH/plugins/\n  # Custom plugins may be added to $ZSH_CUSTOM/plugins/\n  # Example format: plugins=(rails git textmate ruby lighthouse)\n  # Add wisely, as too many plugins slow down shell startup.\n\n  plugins=(\n    adb\n    git\n    z\n    docker\n    nvm\n    pip\n    sudo\n    safe-paste\n    zsh-autosuggestions\n    zsh-syntax-highlighting\n    )\n\n  ```\n\n  配置主题\n\n  ```bash\n  # Set name of the theme to load --- if set to \"random\", it will\n  # load a random theme each time oh-my-zsh is loaded, in which case,\n  # to know which specific one was loaded, run: echo $RANDOM_THEME\n  # See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes\n\n  ZSH_THEME=\"robbyrussell\"\n\n  ```\n\n- zsh 插件\n\n  - [z-jump around](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/z) 可以通过`z + 路径关键词`跳转到最近访问过的相关路径下面。\n  - [sudo](https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins/sudo) 执行命令忘记添加 sudo 时，通过按下两次 esc 键快速添加 sudo 前缀\n\n- 安装 [starship](https://starship.rs/)\n\n  因为 starship 配置文件简单，主题风格也比较干净，所以在这里使用 starship 主题，不使用 ohmyzsh 的主题，需要将`ZSH_THEME=\"robbyrussell\"`注释掉。\n\n  ```bash\n  curl -sS https://starship.rs/install.sh | sh # linux bash 启动\n\n  eval \"$(starship init bash)\" #~/.zshrc 添加命令\n\n  mkdir -p ~/.config && touch ~/.config/starship.toml # 生成配置文件\n  ```\n\n- zsh 命令 not found 的问题\n\n  因为之前是从 bash 转过来的，bash 安装的 nvm 在 zsh 里面提示 not found，需要在 bash 配置文件.bashrc 将 nvm 导出的环境变量复制粘贴到.zshrc 下面。\n\n  ```bash\n  # User configuration\n\n  export NVM_DIR=\"$HOME/.nvm\"\n  [ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"  # This loads nvm\n  [ -s \"$NVM_DIR/bash_completion\" ] && \\. \"$NVM_DIR/bash_completion\"  # This loads nvm bash_completion\n  ```\n\n#### 软件\n\n- [网易云音乐 UWP 简洁版本](https://github.com/JasonWei512/NetEase-Cloud-Music-UWP-Repack)\n\n- Windows11 沙箱功能\n\n  电子洁癖者福利，可以在不污染主系统的情况下，在沙盒里独立运行一些垃圾软件，关闭沙盒后销毁所有内容，通过与主系统共享粘贴板完成内容交换。\n\n- PowerToys - 微软推出的 Windows 工具箱\n\n#### 开发工具\n\n- [nvm Node 版本管理软件](https://github.com/nvm-sh/nvm)\n\n  ```bash\n  # 安装\n  curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n\n  wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.3/install.sh | bash\n\n  ```\n\n- tldr Linux 命令行帮助\n","tags":["Windows"],"categories":["Program"]},{"title":"Windows PC安装ChromeOS","url":"/posts/fc1b1c9c.html","content":"\n记录一下我老旧的联想小新 air13 安装 ChromeOS 的过程.\n\n#### ChromeOS\n\nChromeOS 以 Google Chrome 为主要的用户界面，是由 Google 推出运行在 Chromebook 上面，满足基于浏览器的工作需求，现在也支持 Android 和 Linux，可以直接安装 Android 和 Linux 应用。相应地，国内有 FydeOS，是基于 ChromeOS 的本土化改造。\n\n<!-- more -->\n\n#### Brunch Framework\n\nBrunch 根据官方 recovery 用来制作 ChromeOS 镜像，以支持在 Windows/Linux 机器上安装 ChormeOS。\n\n#### 安装准备\n\n1.  需要一个最小 16G 的 u 盘 / Linux 环境 (Windows 10/11 可以安装 wsl)\n\n2.  下载[官方 recovery](https://chromiumdash.appspot.com/serving-builds?deviceCategory=Chrome%20OS)\n\n    - Intel 1st gen -> 9th gen 网站页面搜索 rammus\n    - Intel 10th & 11th gen 网站页面搜索 volteer\n    - AMD Ryzen 页面搜索 zork\n\n3.  下载 [Brunch 工具](https://github.com/sebanc/brunch/releases/latest)\n\n4.  Linux 需要更新或安装必需的软件\n\n    `sudo apt update && sudo apt -y install pv cgpt tar unzip`\n\n5.  解压刚才下载的两个文件\n\n    ```bash\n    #将filename 替换成自己的文件名称\n    tar zxvf brunch_filename.tar.gz\n    unzip chromeos_filename.bin.zip\n    ```\n\n6.  利用 Brunch 生成镜像文件\n\n    ```bash\n    # 将filename替换成自己的文件名称\n    sudo bash chromeos-install.sh -src chromeos_filename.bin -dst chromeos.img\n    ```\n\n7.  使用[Rufus](https://rufus.ie/)制作 U 盘启动盘\n\n#### 安装过程\n\n1. 将 U 盘插到电脑，以 U 盘启动电脑会出现 Brunch 安装画面，不出意外的话，之后就成功地将 ChromeOS 安装到了 U 盘上\n\n2. 如果想要将 ChromeOS 彻底安装到电脑上需要在 U 盘启动的 ChromeOS 上进一步操作\n\n3. 以匿名用户跳过 ChromeOS 登录，Ctrl + Alt + T 启动 Crosh Shell，输入 shell，回车\n\n4. 确定自己要安装到的硬盘名称 disk `lsblk -e7`\n\n5. 命令行输入\n\n   ```bash\n   # 替换disk为自己的硬盘名称，如nvme0n1\n   sudo chromeos-install -dst /dev/disk\n   ```\n\n6. 安装成功之后，拔掉 U 盘重启电脑\n\n---\n\n[到底什么是 ChromeOS](https://zhuanlan.zhihu.com/p/169828368)\n[Brunch Framework](https://github.com/sebanc/brunch)\n","tags":["ChromeOS"],"categories":["Program"]},{"title":"HTML属性分类","url":"/posts/6fe05aac.html","content":"\n#### 内容属性和 IDL 属性\n\n- 内容属性\n\n  在 HTML 代码中声明的属性是内容属性，也可以通过 element.setAttribute() 或 element.getAttribute() 来设置。内容属性的值是一个字符串，即使其值是数字或者布尔值，都使用字符串的形式传递。\n\n  ```HTML\n    <input type=\"text\" maxlength=\"5\" />\n  ```\n\n  <!-- more -->\n\n- IDL(Interface Definition Language) 属性\n\n  在 JavaScript 中获取的 HTML 元素，可以直接获取其属性，该属性即是 IDL 属性。使用 IDL 属性时，你读取或设置值的类型都是要求的类型，不再像内容属性一样统统以字符串的形式传递。例如，input 的 maxLength 值会返回一个数字类型，设置 maxLength 的值时也需要使用数字，如果传递了其它类型的值，会根据标准 JavaScript 的类型转换规则被转换为数字。\n\n  另外，在 JavaScript 中属性名称以驼峰形式命名。\n\n  ```JS\n    const input = document.querySelector('input')\n    console.log(input.maxLength) //input.maxLength => IDL属性\n    console.log(typeof input.maxLength) //number\n  ```\n\n#### 枚举属性和布尔属性\n\n- 枚举属性\n\n  属性取值由若干的关键词组成的枚举集合就是枚举属性。例如，input type 属性由'button' 'text' 'number'等若干值组成。\n\n  > contenteditable 属性允许设定的值包括 true 和 false，但该属性仍是一个枚举属性而非布尔属性。\n  > 如果属性值是 true 或空字符串，表示该元素是可编辑的，false 表示元素不可编辑，如果只声明了属性而没有取值则视为空字符串。\n\n- 布尔属性\n\n  一些内容属性（例如 required, readonly, disabled）是布尔值属性。如果一个布尔值属性存在，则其值是 true，如果不存在，其值是 false。\n\n  HTML5 定义了布尔值属性允许的取值：如果属性存在，其值必须是一个**空字符串**（即该属性的值未分配），或者是一个**大小写无关，且与属性名严格相同，前后都没有空格的字符串**。下述例子是为一个布尔值属性取值的几个有效方式。\n\n  ```HTML\n    <div itemscope>This is valid HTML but invalid XML.</div>\n    <div itemscope=\"itemscope\">This is also valid HTML but invalid XML.</div>\n    <div itemscope=\"\">This is valid HTML and also valid XML.</div>\n    <div itemscope=\"itemscope\">This is also valid HTML and XML, but perhaps a bit verbose.</div>\n  ```\n\n  除了以上的有效取值方式，赋予其他的任意值也会被解读成 true，这是因为符合属性存在即为 true 的条件。\n\n  > 布尔值属性不能取值为 \"true\" 和 \"false\"。如果需要表示 false 值，布尔值属性需要整个忽略不写。\n","tags":["HTML"],"categories":["program"]},{"title":"使用superagent获取豆瓣信息","url":"/posts/32164ea2.html","content":"\n想到在博客上插入一个豆瓣卡片以显示豆瓣主页信息，记得在 Hexo 插件库里面有这种功能的插件，但仔细看了看发现它们又太复杂，于是对照着一个插件的源码自己试着写了一下。  \n我的目的是想获取我的豆瓣上面书影音数量，使用 superagent 发起网络请求，cheerio 解析页面获取数据，这两个包我之前也没有了解过，于是在这里记录一下。\n\n<!-- more -->\n\n- BaseSpider.js\n\n  ```JS\n    const superagent = require('superagent');\n    const cheerio = require('cheerio');\n    class BaseSpider {\n        constructor(id) {\n            this.superagent = superagent;\n            this.cheerio = cheerio;\n            this.DOUBAN_PAGE = `douban.com/people/${id}`;\n        }\n\n        crawl() {}\n\n        parsePlainText(plainText) {}\n    }\n    module.exports.BaseSpider = BaseSpider;\n  ```\n\n- DoubanSpider.js\n\n  ```JS\n    const { BaseSpider } = require('./baseSpider');\n    class IndexSpider extends BaseSpider {\n        constructor(id) {\n            super(id);\n        }\n        crawl() {\n            return new Promise((resolve, reject) => {\n            this.superagent\n                .get(this.DOUBAN_PAGE)\n                .set({\n                'User-Agent':\n                    'Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:39.0) Gecko/20100101 Firefox/39.0',\n                })\n                .then((res) => {\n                const indexInfo = this.parsePlainText(res.text);\n                resolve(indexInfo);\n                })\n                .catch((err) => {\n                reject(err);\n                });\n            });\n        }\n\n        parsePlainText(plainText) {\n            const $ = this.cheerio.load(plainText);\n            const content = {\n                movies: ['在看', '看过', '想看'],\n                books: ['在读', '读过', '想读'],\n            };\n            let info = {\n                movies: {},\n                books: {},\n            };\n            const movies = $('#content #movie').find('.pl a').toArray();\n            const books = $('#content #book').find('.pl a').toArray();\n            Object.keys(content).map((key) => {\n                if (key === 'movies') {\n                    movies.forEach((item) => {\n                        const text = $(item).text();\n                        content[key].map((cate) => {\n                            if (text.indexOf(cate) !== -1) info[key][cate] = text.replace(/\\D/g, '');\n                        });\n                    });\n                }\n                if (key === 'books') {\n                    books.forEach((item) => {\n                    const text = $(item).text();\n                        content[key].map((cate) => {\n                            if (text.indexOf(cate) !== -1) info[key][cate] = text.replace(/\\D/g, '');\n                        });\n                    });\n                }\n            });\n            return info;\n        }\n    }\n    module.exports.IndexSpider = IndexSpider;\n  ```\n\n- index.js\n\n  ```JS\n  const { IndexSpider } = require('./indexSpider');\n\n  const id = 161208120;\n  const doubanSpider = new IndexSpider(id);\n  doubanSpider\n    .crawl()\n    .then((res) => {\n        console.log(res);\n    })\n    .catch((err) => {\n        console.log(err);\n    });\n  ```\n\n- 最终输出结果\n\n  ```bash\n      info:{\n          movies: { '在看': '5', '已看': '871', '想看': '268' },\n          books: { '在读': '3', '已读': '89', '想读': '34' }\n      }\n  ```\n\n  暂时还没有想到怎么合理地嵌到我的博客里面，先做出这个 demo，待日后再作研究。\n","tags":["JavaScript"],"categories":["program"]},{"title":"Angular与Vue的语法比较","url":"/posts/956d8401.html","content":"\n最近在看 Vue 文档，发现 Vue 与我现在使用的 Angular 在语法上有许多相似之处，于是决定对照着 Vue 官方文档，比较一下两个框架的语法结构。\n\n#### 模版语法\n\n- 插值\n  Vue 与 Angular 的模版数据绑定都是使用“Mustache” (双大括号) 语法的文本插值。\n\n  ```HTML\n    <div> {{ message }} </div>\n    <div> {{ message.split('').reverse().join('') }} </div>\n  ```\n\n  <!-- more -->\n\n  对于在模版中插入 HTML 代码时，Vue 使用 v-html 指令，而 Angular 使用 innerHTML 属性。\n\n  ```HTML\n  <!-- Vue -->\n  <span v-html=\"rawHtml\"></span>\n\n  <!-- Angular -->\n  <span [innerHTML]=\"rawHtml\"></span>\n  ```\n\n  对于属性绑定 Vue 通过 v-bind 指令绑定，Angular 通过 [属性名]=\"值\" 绑定。\n\n  ```HTML\n  <!-- Vue -->\n  <button v-bind:disabled=\"isDisabled\">click</button>\n\n  <!-- Angular -->\n  <button [disabled]=\"isDisabled\">click</button>\n  ```\n\n- 指令\n  Vue 的指令是带有 v- 前缀的特殊 attribute，例如 _v-if_ _v-bind_ _v-on_ _v-for_ _v-model_ 等。其中 v-bind:attibute 可以缩写为:attibute,v-on:event 可以缩写为@event。\n\n  Angular 的内置指令也是带有标志性字符 ng 前缀的 attribute，例如 _ngIf_ _ngFor_ _ngStyle_ _ngModel_ 等。但是在使用时需要通过[ngIf]=\"condition\"的形式，对于结构性指令 _ngIf_ _ngFor_ _ngSwitch_ 也可以通过\\*ngIf=\"condition\"的语法糖表示。\n\n  ```HTML\n  <!-- Vue -->\n  <div v-if=\"isShow\">{{ message }}</div>\n  <a :href=\"url\"> ... </a>\n  <a @click=\"doSomething\"> ... </a>\n\n  <!-- Angular -->\n  <div *ngIf=\"isShow\">{{ message }}</div>\n  <a [href]=\"url\"> ... </a>\n  <a (click)=\"doSomething\"> ... </a>\n  ```\n\n#### Class 与 Style 绑定\n\n因为 class 列表和内联样式都是元素的 attribute，在 Vue 中绑定 Class 和 Style 只需要通过 v-bind 指令绑定 class 和 style 属性即可，Vue 对此做了专门的增强，表达式结果的类型除了字符串之外，还可以是对象或数组。  \n而在 Angular 中，可以通过[class]=\"className\" [style]=\"styleObject\"的形式绑定，也可以利用 ngClass 和 ngStyle 指令绑定。但是前者(属性绑定方法)只能接受字符串，ngClass 可以接受对象或数组，ngStyle 可以接受对象表达式。\n\n```HTML\n<!-- const isActive = true; -->\n<!-- const styleObject = { color: 'red' }; -->\n<!-- const styleArr =[ {color: 'red'}, { background: 'blue'}]; -->\n\n<!-- Vue -->\n<div :class=\"{ active: isActive}\"> ... </div>\n<div :class=\"['classA','classB']\"></div>\n\n<div :style=\"styleObject\"> ... </div>\n<div :style=\"styleArr\"> ... </div>\n\n\n<!-- Angular -->\n<div [class]=\"isActive ? 'active' : ''\"> ... </div>\n\n<div [ngClass]=\"{ active: isActive }\"> ... </div>\n<div [ngClass]=\"['classA','classB']\"> ... </div>\n\n<div [style]=\"styleObject\"> ... </div>\n<div [style]=\"{ color: isValid ? '' : 'blue' }\"> ... </div>\n\n<div [ngStyle]=\"styleObject\"> ... </div>\n<div [ngStyle]=\"{ color: isValid ? '' : 'blue' }\"> ... </div>\n```\n\n#### 条件渲染\n\nVue 中\\<template>元素可以包含任意的 HTML，并且最终渲染结果不会包括在 DOM 中。同样，在 Angular 中，\\<ngTemplate> 元素也有相同的作用。\n\n```HTML\n<!-- Vue -->\n<div v-if=\"isShow\"> ... </div>\n<div v-else-if=\"isShow\"> ... </div>\n<div v-else> ... </div>\n<div v-show=\"isShow\">...</div>\n\n<!-- Angular -->\n<div *ngIf=\"isShow; else others\"></div>\n<ng-template #others>...</ng-template>\n```\n\n#### 列表渲染\n\nVue 与 Angular 都可以对数组和对象的内容进行渲染，但是二者对索引的处理不同，并且 Angular 对于对象内容的渲染需要使用 Angular keyvalue 管道。\n\n```HTML\n<!-- const list=[ {name: 'zhangsan'}, {name: 'lisi'} ]; -->\n<!-- const book={name:'hello world', price: 100, author:'zhangsan'}; -->\n\n<!-- Vue -->\n<ul>\n  <li v-for=\"(item, index) in list\">{{ index }} - {{ item.name }}</li>\n</ul>\n\n<ul>\n  <li v-for=\"(value, name, index) in book\">{{ index }} - {{ name }} - {{value}}</li>\n</ul>\n\n<!-- Angular -->\n<ul>\n  <li *ngFor=\"let item of list; index as i\">{{i}} - {{ item.name }}</li>\n</ul>\n\n<ul>\n  <li *ngFor=\"let item of book | keyvalue; index as i\">{{i}} - {{ item.key }} - {{item.value}}</li>\n</ul>\n\n```\n\n#### 事件处理\n\nVue 对于事件使用@修饰，即@click=\"doSomething\"，Angular 使用(click)=\"doSomething\"的形式。但是 Vue 有许多事件修饰符要比 Angular 灵活一些。\n\n```HTML\n<!-- Vue -->\n<a @click=\"doSomething($event)\"> ... </a>\n\n<!-- Angular -->\n<a (click)=\"doSomething($event)\"> ... </a>\n```\n\n#### 表单绑定\n\nVue 使用 v-model 指令在表单元素上创建双向数据绑定，Angular 使用 ngModel 指令与表单元素进行绑定，其中[ngModel]='modelValue'属于单向绑定，[(ngModel)]='modelValue'属于双向绑定。\n\n```HTML\n<!-- Vue -->\n<input v-model=\"name\">\n\n<!-- Angular -->\n<input [(ngModel)]=\"name\">\n```\n\n#### 组件基础\n\n二者父组件向子组件传值时都以数据绑定的形式 _:posts=\"blogs\"_ _[posts]=\"blogs\"_，属性名为子组件的变量名，属性值为父组件的变量名。在向子组件监听事件时，都是以事件处理的方式 _@delete=\"removeBlog(index)\"_ _(deleteEvent)=\"removeBlog(index)\"_，事件名为子组件定义的 emit 事件名称。\n二者的子组件在接受父组件的传值以及向父组件发送事件时都需要在组件前面声明一下，Vue 为 _props:[\\]_ 和 _emits:[\\]_，Angular 为 _@Input()_ 和 _@Output()_。\n\n```JS\n//Vue父组件传递数据以及监听子组件事件\nconst app = Vue.createApp({\n  data(){\n    return{\n      blogs:[...]\n    }\n  }\n  methods: {\n    removeBlog(index) {},\n  },\n  template:`\n    <blog-post :posts=\"blogs\" @delete=\"removeBlog(index)\"></blog-post>\n  `\n});\n\n// Vue子组件获取数据以及事件的语法\napp.component('blog-post', {\n  props: ['posts'],\n  emits: ['delete'],\n  methods: {\n    remove(index) {\n      this.$emit('delete', index);\n    },\n  },\n  template: `\n    <div v-for='(post,index) of posts'>\n        <h3>{{post.title}}</h3>\n        <p>{{post.content}}</p>\n        <button @click=\"remove(index)\">click</button>\n    </div>\n  `,\n});\n\n\n//Angular父组件传递参数以及监听子组件事件\n@Component({\n  selector: 'app-root',\n  template: `\n  <blog-post [posts]=\"blogs\" (deleteEvent)=\"removeBlog(index)\"></blog-post>\n  `,\n  styleUrls:'',\n})\nexport class AppCom{\n  blogs=[]\n  removeBlog(index){}\n}\n\n//Angular子组件传递数据以及事件的语法\n@Component({\n  selector: 'blog-post',\n  template: `\n  <div *ngFor=\"let post of posts\">\n      <h3>{{post.title}}</h3>\n      <p>{{post.content}}</p>\n      <button (click)=\"remove(index)\">click</button>\n  </div>\n  `,\n  styleUrls:'',\n})\nexport class childCom{\n  @Input() posts: Array<any>;\n  @Output() deleteEvent = new EventEmitter<number>();\n  remove(){\n    this.deleteEvent.emit(index);\n  }\n}\n\n```\n","tags":["Angular","Vue"],"categories":["program"]},{"title":"代码记录","url":"/posts/82ad0ff2.html","content":"\n这里准备记录一些急中生智的代码，方便日后总结回顾。\n\n- promise 的用法\n\n```JavaScript\nasync function addContactSubmit() {\n  const value = contactForm.value;\n  const verify = await checkContactPhone(value.f_tel_a, value.f_tel_b);\n  if (!verify) return;\n  //continue...\n}\n\n/**\n * 添加订单时检查手机号重复\n * @param f_tel_a 手机号\n * @param f_tel_b 其他电话\n * @returns {Promise<boolean>}\n */\nfunction checkContactPhone(f_tel_a, f_tel_b) {\n  if (this.foreign_key !== 'f_order_id') return true;\n  const params = { f_tel_a, f_tel_b };\n  return new Promise((resolve) => {\n    this.apiService.post('/order/verifyOnlyContact', params).subscribe((res) => {\n      const status = this.statusReport.getStatus(res);\n      resolve(status);\n    });\n  });\n}\n\n```\n","tags":["备忘录"],"categories":["program"]},{"title":"逻辑谬误","url":"/posts/815988a8.html","content":"\n逻辑推理指从已知前提推出未知结论的思维活动，当推理出现错误时，其论证就称为“谬误”。谬误可发生在三个地方：一是陈述了错误的事实(实质谬误)，二是使用了不恰当的词语(言词谬误)；三是使用了不恰当的推理结构(形式谬误)。其中一与二合称非形式谬误，而二与三合称逻辑谬误。\n\n<!-- more -->\n\n#### 谬误分类\n\n形式谬误：形式谬误是因不恰当的推论结构所造成的谬误，可借由符号化的逻辑系统揭露此类谬误。\n言词谬误：泛指各种因自然语言语意不明确而形成的推理谬误，可借由语义、语用分析及符号化揭露此类谬误。\n实质谬误：泛指各种推理结构正确，但论证前提不能恰当支持结论所造成的谬误。\n逻辑谬误：逻辑谬误包括了形式谬误及言词谬误，可借由语义、语用分析及符号化揭露此类谬误。“逻辑谬误”有时亦可广义泛指所有的谬误。\n非形式谬误：形式谬误以外的其他谬误统称非形式谬误，含括了所有不能纯粹由符号化逻辑系统揭露的谬误，这些谬误需要关于现实世界的背景知识与常识才能揭露出来。\n\n#### 常见的逻辑谬误\n\n- 诉诸权威 (appeal to authority)\n  诉诸权威是一种由于论证的前提和结论没有逻辑关系而产生的推论失效的不相干的谬误（fallacies of irrelevance）。当权威的主张不在其合法领域内时，该主张不具有可靠性。即便权威的主张在其合法领域内，但该主张正确与否，仍须取决于该主张是否证据充分，而不能取决于它是由该主张的所在领域的权威提出来的。\n\n  > 科学的伟大之处就是其对“权威的不信任”…… 就算是权威，他们很多的论点并非基于事实与观察，最后仍然被证明是错误的。权威和普通的科学研究者一样，都需要以同样的手法以证明一件事情的对错。\n\n- 诉诸纯洁(appeal to purity)\n  没有真正的苏格兰人(No true Scotsman)或诉诸纯洁(appeal to purity)是一种非形式谬误，系指在原来的普遍宣称遇到反例时，提出一个理想、纯净的标准以为其辩护的论证方式。\n\n  > 甲：没有注重人权的民主国家会继续维持死刑。\n  > 乙：日本高度民主也注重人权，但日本依旧判处杀人犯死刑。\n  > 甲：显然日本不是“真正”注重人权的民主国家。\n\n- 诉诸无知(appeal to purity)\n  主张由于一件事未被证明是假的，因此它是真的；或者，主张由于一件事未被证明是真的，因此它是假的。\n\n  > 证据不存在不代表不存在的证据。\n\n- 诉诸伪善(appeal to hypocrisy)\n  试图通过指出对方言行不一之处，削弱其可信度，但不反驳对方的论点。“那又怎么说”论(whataboutism)应对指控时，反指控对方或提出其他问题的一种技巧或行为，属于诉诸伪善的臭虫论。\n\n  > 外国人：中国臭虫真多！\n  > 中国人：西洋也有臭虫！\n\n  > React.js Github 成员 回应援助乌克兰\n  > It is true that we have not responded to every humanitarian disaster. There is no single objective threshold of scale, and we’ve only started doing these banners recently. However, this is not a zero-sum activity. First, we are only a single project, and there are other projects which may choose different causes (or not support any causes at all). Second, getting the message out about one crisis does not hurt people affected by a different crisis. This is why the “whataboutism” is mostly a distraction, and we will not spend time seriously entertaining it.\n\n- 诉诸自然(appeal to nature)\n  先验地认为天然的就是好的，人工的（特别是化学合成和基因工程改造的）就是坏的。这种自然崇拜也是很多人推崇「古法」「秘制」「有机」食品，而对工业食品和基因修饰食品怀有病态恐惧的原因。\n\n- 诉诸成就(appeal to accomplishment)\n  主张由于某人或某人的团队没有达成某项成就，因而其针对某事的主张不可信。\n\n  > 等你读完法学著作和犯罪学的研究，再来说你绝对支持杀人死刑吧！\n\n- 诉诸人身(ad hominem)\n  借由与当前论题无关之个人特质，如人格、动机、态度、地位、阶级或处境等，作为驳斥对方或支持己方论证的理据，是一种不相干的谬误和红鲱鱼。诉诸人身又称作“对人不对事”、“因人废言”或“因人设事”、“以人废言”。\n\n- 诉诸传统(appeal to tradition)\n\n  认为传统一定是正当的、合理的。\n\n  > 从来如此，便对么？\n\n- 诉诸群众\n  是一种社会心理的状态、一种宣传的技巧、在逻辑学上也被认为是一种谬误，常被称为“从众”，代表人类害怕在社会中被孤立，因而向社会其他多数靠拢的一种过程，主张将许多人或所有人所相信的事情视为真实。\n  诉诸群众尚有许多称呼，如诉诸多数(appeal to the majority)、诉诸大数(Argumentum ad numerum)、诉诸民主(appeal to the democracy)、诉诸信念(appeal to belief)、共识谬误(consensus fallacy)、乐队花车谬误(bandwagon fallacy)等等。\n\n- 因果谬误(Causal Fallacy)\n  泛指各种未有充分证据便轻率断定因果关系的不当推论。\n\n- 诉诸恐惧(appeal to fear)\n  诉诸情感谬误的一种，企图让对方因为害怕而放弃立论。\n\n  > 有本事你一辈子别用中医！\n\n- 诉诸怜悯(appeal to pity)\n  诉诸情感谬误的一种，系透过挑起对方的同情与愧疚，以博取他人支持自己的想法。\n\n  > 那么多农民靠种中药脱贫致富，你就没想过他们挣不到钱怎么办？\n\n- 偶例谬误(accident fallacy)\n  是一种「通则凌驾例外」的非形式谬误，基于某个通则的存在，而否定例外的存在或正当性，即不恰当地以一个普遍原则来解释一个特殊事例。\n\n  > 超速是不对的，所以救护车不应该超速。\n\n- 合成谬误(fallacy of composition)\n  对局部说来是对的东西，仅仅由于它对局部而言是对的，便说它对总体而言也必然是对的。\n\n  > 萨缪尔森举了一个很生动的例子，他让我们想象一个非常简陋的露天剧场，大家可以坐在地上看，但是坐在后面的人觉得看得不够清楚，为了比别人看得更清楚一些，他们就会站起来。他们一站起来，更后面的人也会站起来，结果大家就都站起来了。站起来以后还是看不清楚，成本增加了，福利却没有增加。聪明人又会想出一些办法来，站着不行就踮着脚，结果全场的人都会踮着脚看，整体的福利又下降了。如此循环往复，整体福利一直在下降，个人成本不断在上升，这就是“合成谬误”。\n\n- 红鲱鱼谬误(red herring)\n  抛出与对方观点毫无关联的话题，从而转移争论焦点。\n\n- 轶事谬误(anecdotal fallacy)\n  用个人经验或者单独事例来取代逻辑论述或者有力的证据做出一般化的推论。\n\n  > 轶事谬误是人类先天心智欠缺统计学思维的主要表现。在科学上，个案在绝大多数情况下不能说明问题，只有一定数量的样本的统计结果才可能有意义。\n\n- 稻草人谬误(straw man)\n  即歪曲对方的论点，树立一个对方并不支持的主张作为靶子(稻草人)来攻击。\n  稻草人论证有时会和“偷换主题”、“偷换概念”混称，但严格而言未必相等：后二者是蓄意扭曲原论点，而稻草人论证可能是攻击者有心扭曲对方论点以达贬低效果，也可能是攻击者无心地误解了对方论点，或对方论述不清致使攻击者误会。\n\n  > 甲：“我认为孩童不应该往大街上乱跑。”\n  > 乙：“把小孩关起来，不让他们呼吸新鲜空气，那真是太愚蠢了。”\n\n- 滑坡谬误(slippery slope)\n  使用连串的因果推论，用一大串概率非常小的因果关系引出一个令人恐惧或厌恶的最终结果，从而否定对方的立论。\n\n  > 甲：“小华临时打电话没钱，为什么你不愿意借他十元呢？”\n  > 乙：“如果我借了，他明天又会跟我借一百元，接下来就借一千元、一万元，我岂不破产？”\n\n- 虚假两难(false dilemma)\n  又称非黑即(black-or-white)、二极管思维等，提出少数选项（一般是两个，但有可能是三个或更多）要人从中择一，但这些选择并未涵盖所有的可能性。\n\n  > 要么人类是上帝创造的，要么人是从猴子变成的。\n\n- 负负得正\n  通过寻找乙的缺陷，试图抵消掉与乙对立的甲的缺陷，进而企图表明甲的正当性。在社会热点事件舆论中常见的苛求「完美受害者」的思维犯的也是同样的谬误。\n\n- 中间立场\n  认为两个对立观点之间的妥协，或中间立场，肯定是真理所在。\n\n  > 什么中医西医，什么传统现代，分那么清干吗？只要能治病不就行了。\n\n- 个人怀疑(personal incredulity)\n  受自身水平所限，无法或很难理解某件事，由此得出这件事可能是错的、假的这样的结论。\n\n- 关联谬误(association fallacy)\n  把本不相关的事，赋予某种荒唐的关联。借由利用实质上不相关的论述，主张说某事物持有的性质也存在于另一种事物之上。包括罪恶关联(guilt by association)和荣誉关联(honor by association)两种形式。\n\n  罪恶关联是指攻击说持有某主张的人和其他持有类似观点的人之间有相似之处。\n  荣誉关联是指支持与某种事物相关的人或组织的缘故，而主张这种事物是可取的、可敬的。\n\n- 虚假类比(false analog)\n  借由比较两件本质不同的事物在某些方面的共同点，来推论这两件不同事物在另外一些方面也必然相同。\n\n  > 屠夫屠杀动物就和纳粹党屠杀犹太人一样邪恶，因此我们应该禁止屠宰。\n\n- 谬误论证(argument from fallacy)\n  又称争论逻辑、诉诸逻辑(argument to logic)、谬误谬误(fallacy fallacy)，是一种形式谬误，主张由于某论证无效，因而其结论为假。\n\n  > 当我们宣称一个论证有谬误时，我们是宣称其前提与其结论无法合理地连结，因此谬误与否和结论的真假值并无关系。\n\n---\n\n参考链接:\n[Wiki-谬误](https://zh.wikipedia.org/zh-my/%E8%AC%AC%E8%AA%A4)\n[中医逻辑扑克](https://github.com/benjaminsliu/logiccards/)\n","tags":["逻辑"],"categories":["记录"]},{"title":"HTML头部标签解析","url":"/posts/3fe2c575.html","content":"\n1. `<!DOCTYPE html>`\n   简化后的文档类型声明标签，告知浏览器以 HTML5 规范渲染该页面。\n\n2. `<html lang=\"zh\">`\n   文档语言\n\n3. `<meta charset=\"utf-8\">`\n   文档字符编码，utf-8 是一个通用的字符集，它包含了任何人类语言中的大部分的字符，意味着该 web 页面可以显示任意的语言。\n\n<!-- more -->\n\n#### meta 标签\n\n4. `<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\">`\n\n   ```HTML\n   <!-- 以下两种方式都可以防止画面缩放，维持缩放比例100% -->\n   <meta name=\"viewport\" content=\"width=device-width,initial-scale=1,maximum-scale=1,user-scalable=0,viewport-fit=cover\">\n   <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1\" >\n   ```\n\n5. `<meta property=\"og:site_name\" content=\"Twitter\">`\n   Open Graph 协议标签，Facebook 发起 Open Graph 协议以便在社交网站分享页面时能更优雅地以卡片呈现网页信息。\n   常用的 og 标签\n\n   ```HTML\n   <meta property=\"og:image\" content=\"\">\n   <meta property=\"og:url\" content=\"\">\n   <meta property=\"og:description\" content=\"\">\n   <meta property=\"og:title\" content=\"\">\n   <meta property=\"og:locale\" content=\"zh-CN\">\n   ```\n\n6. 苹果 Safari 浏览器属性标签\n\n   ```HTML\n   <!-- 删除默认的苹果工具栏和菜单栏，全屏显示页面。默认值为 no，即显示工具栏和菜单栏 -->\n   <meta name=\"mobile-web-app-capable\" content=\"yes\">\n   <!-- 设置苹果状态栏颜色，只有在全屏模式下才会生效，可供设置的值black、white、translucent black，translucent black 会将状态栏设置成黑色透明，网页内容占据整块屏幕，会出现状态栏覆盖的情景。 -->\n   <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"black\">\n   <!-- 将网页添加到主屏后名称 -->\n   <meta name=\"apple-mobile-web-app-title\" content=\"Twitter\">\n   ```\n\n7. `<meta name=\"theme-color\" content=\"##1f1f1f\">`\n   设置移动设备用户界面主题色\n\n8. seo 优化标签\n\n   ```HTML\n   <meta name=\"keywords\" content=\"your keywords\">\n   <meta name=\"description\" content=\"your description\">\n   <meta name=\"author\" content=\"author,email address\">\n   ```\n\n#### link 标签\n\n9. `<link rel=\"canonical\" href=\"https://babybluue.github.io/\">`\n   seo 优化，帮助搜索引擎理解相似链接是否来自同一个网站的内容\n\n10. `<link rel=\"manifest\" href=\"/manifest.webmanifest\">`\n    指定提供 Web 应用程序信息的 JSON 清单文件，以方便将 Web 应用程序安装到设备的主屏幕\n\n11. `<link rel=\"apple-touch-icon\" sizes=\"192x192\" href=\"/images/app-icon\">`\n    苹果设备将 Web 应用添加到桌面时显示的图标\n\n12. `<link rel=\"apple-touch-startup-image\" href=\"/launch.png\">`\n    苹果设备桌面 Web 应用打开时的启动图\n\n13. `<link rel=\"icon\" href=\"/images/favicon.ico\">`\n    网站图标，不需要 shortcut\n\n14. `<link rel=\"alternate\" title=\"MDN\" href=\"https://developer.mozilla.org/\" hreflang=\"zh\">`\n    告知浏览器页面的其他语言版本\n\n15. `<link rel=\"search\" type=\"application/opensearchdescription+xml\" href=\"/opensearch.xml\" title=\"Twitter\">`\n    将页面作为搜索引擎，可以通过浏览器地址栏找到标记的页面搜索引擎\n\n---\n\n参考链接:\n[OpenGraph 协议](https://ogp.me/)\n[Explain the First 10 Lines of Twitter’s Source Code to Me](https://css-tricks.com/explain-the-first-10-lines-of-twitter-source-code/)\n[HTML 基本的头部标签](https://vincentcwlove.github.io/2016/11/30/HTML%E5%9F%BA%E6%9C%AC%E7%9A%84%E5%A4%B4%E9%83%A8%E6%A0%87%E7%AD%BE/)\n[6 Tips to make your iOS PWA feel like a native app](https://www.netguru.com/blog/pwa-ios)\n[apple-developer:Configuring Web Applications](https://developer.apple.com/library/archive/documentation/AppleApplications/Reference/SafariWebContent/ConfiguringWebApplications/ConfiguringWebApplications.html#//apple_ref/doc/uid/TP40002051-CH3-SW1)\n","tags":["备忘录","HTML"],"categories":["program"]},{"title":"Windows前端电脑环境配置","url":"/posts/1d173f48.html","content":"\n- #### 删除 360\n\n- #### 设置 Windows 环境变量\n\n  在桌面快捷方式*电脑*或者文件管理*此电脑*右键选择属性，找到高级系统设置，选择最下方的环境变量，在系统变量或者用户变量的 Path 里面追加要添加的变量路径。\n\n- #### Node.js 环境配置\n\n  [Node.js 官方网址](https://nodejs.org/zh-cn/)下载长期维护版,在安装过程中，Node.js 会自动将 npm 和 node 添加到环境变量中，安装完成后打开命令行测试 npm 和 node 能否被识别。  \n  如果没有被识别，可以找到 Node.js 安装目录，复制含有 node.exe 的文件夹路径，追加到环境变量中。  \n  设置 cnpm `$ npm install cnpm -g --registry=https://registry.npmmirror.com`\n\n<!-- more -->\n\n- #### Git 环境配置\n\n  [Git 工具官网](https://git-scm.com/downloads)下载 Git 命令行工具，安装完成后打开命令行测试 git 命令是否可用。\n  [Git 基本命令](https://training.github.com/downloads/zh_CN/github-git-cheat-sheet/)\n\n  ```bash\n    # 查看当前git配置\n    git config --list\n    # 设置git用户名\n    git config --global user.name \"Your Name\"\n    # 设置git账户邮箱\n    git config --global user.email \"abc@qq.com\"\n    # 设置git免密码登录\n    git config --global credential.helper store\n    # 删除远程分支\n    git push origin --D bug-57 bug-34 bug-84\n    # 删除本地分支\n    git branch -D bug-57 bug-34 bug-56\n    #设置git代理\n    git config --global http.proxy 127.0.0.1:8087\n    #取消git代理\n    git config --global --unset http.proxy\n  ```\n\n  > Git and GitHub\n  > A quick aside: git and GitHub are not the same thing. Git is an open-source, version control tool created in 2005 by developers working on the Linux operating system; GitHub is a company founded in 2008 that makes tools which integrate with git. You do not need GitHub to use git, but you cannot use GitHub without using git. There are many other alternatives to GitHub, such as GitLab, BitBucket, and “host-your-own” solutions such as gogs and gittea. All of these are referred to in git-speak as “remotes”, and all are completely optional. You do not need to use a remote to use git, but it will make sharing your code with others easier.\n\n- #### 命令行 CLI 安装 Vue\n\n  ```bash\n    # 安装Vue命令行\n    npm install -g @vue/cli\n    # 更新Vue命令行\n    npm update -g @vue/cli\n    # 创建一个Vue项目\n    vue create hello-world\n    # 打开Vue的图形管理界面\n    vue ui\n  ```\n\n  在`vue create projtct`命令里可以通过 Manually select features 手动选择项目配置，比如给项目配置 Vue 版本、路由管理 Router、状态管理 Vuex、使用 TypeScript 语言、代码格式化工具等等(使用空格键做选择)。\n\n- #### Vscode 插件\n\n  Github Copilot、Live Server、One Dark Pro、Prettier\n\n- #### 浏览器插件\n\n  Just a clock、SimpleUndoClose、Minimal Theme for Twitter\n\n  油猴插件:在 Chrome 插件应用里搜索 Tampermonkey 安装。然后在[Greasy Fork](https://greasyfork.org/zh-CN) 或者[Userscript.Zone Search](https://www.userscript.zone/)网站里搜索查找需要的插件点击安装。  \n  插件推荐：AC-baidu-重定向优化百度、全网 VIP 视频免费破解去广告、CSDN 广告完全过滤\n","tags":["备忘录"],"categories":["program"]},{"title":"CSS备忘录","url":"/posts/4e8da565.html","content":"\n#### CSS 样式\n\n- position:fixed 在页面里不起作用\n\n  position:fixed 元素会被移出正常文档流，并不为元素预留空间，而是通过指定元素相对于屏幕视口（viewport）的位置来指定元素位置。元素的位置在屏幕滚动时不会改变。打印时，元素会出现在的每页的固定位置。fixed 属性会创建新的层叠上下文。_当元素祖先的 transform, perspective 或 filter 属性非 none 时，容器由视口改为该祖先。_\n\n<!-- more -->\n\n- position:sticky\n\n  一个 sticky 元素会“固定”在离它最近的一个拥有“滚动机制”的祖先上（当该祖先的 overflow 是 hidden, scroll, auto, 或 overlay 时），即便这个祖先不是最近的真实可滚动祖先。同时，sticky 元素效果完全受制于其父元素，其位置也不会脱离其父元素。\n\n  ```html\n  <style>\n    body {\n      height: 200vh;\n    }\n    div {\n      height: 100px;\n      margin-top: 50px;\n      border: solid deepskyblue;\n    }\n    nav {\n      position: sticky;\n      top: 20px;\n      background: lightskyblue;\n    }\n  </style>\n  <body>\n    <div>\n      <nav>导航</nav>\n    </div>\n  </body>\n  ```\n\n  对于 nav 当前可滚动的祖先为 body 元素，它应该保持与 body top:20px 的定位，然而由于它的父元素 div 的 margin-top:100px,它的位置将受限于 div 中最顶部，直到在滚动过程中它逐步满足 top20:20px,最终又被父元素 div 带走。\n\n  ```html\n  <!-- 由于sticky元素会受限于其父元素，可以用来实现标题轮换置顶的效果 -->\n  <style>\n    .container {\n      height: 100px;\n      overflow: scroll;\n    }\n    h1 {\n      position: sticky;\n      top: 0;\n      background-color: black;\n      color: white;\n    }\n  </style>\n\n  <div class=\"container\">\n    <section>\n      <h1>caption1</h1>\n      <div>\n        Lorem ipsum dolor sit amet consectetur adipisicing elit. Autem maiores tempore dolores doloribus labore\n        aspernatur provident nihil distinctio! Voluptates dolor consequatur expedita sequi, pariatur\n      </div>\n    </section>\n    <section>\n      <h1>caption2</h1>\n      <div>\n        voluptates labore quidem. Architecto debitis sed quasi. Corrupti sequi voluptas itaque! Dolorum, similique\n        minima. Aspernatur. Sunt ea officia accusantium ducimus sint dolorum adipisci cupiditate numquam harum tempore\n      </div>\n    </section>\n    <section>\n      <h1>caption3</h1>\n      <div>\n        Lorem ipsum dolor sit, amet consectetur adipisicing elit. Ipsa dolorem nemo necessitatibus! Non exercitationem a\n        quis excepturi fugiat officiis repellat unde delectus repudiandae qui consequatur similique quia, laudantium\n      </div>\n    </section>\n  </div>\n  ```\n\n- position:sticky 在 safari 浏览器里不起作用`position: -webkit-sticky;`\n\n- 在 safari 浏览器里，部分元素中的字体 font-size 要大于正常设定字体。`-webkit-text-size-adjust: 100%;`\n\n  因为许多网站还没有适配屏幕较小的设备，移动设备的浏览器和桌面浏览器在渲染网页时可能会有不同。他们不是以设备屏幕宽度布局网页，而是用比屏幕宽一些的 视窗 去布局网页，通常是 800 到 1000 像素。为了将视窗上的布局映射到原始设备屏幕上，手机浏览器要么只渲染整个页面的一部分，要么将视窗缩放至原始屏幕大小。\n\n  因为缩放适配小屏幕而导致文字会变得很小，许多手机浏览器会使用文本溢出算法放大文本，改善可读性。当一个包含文本的元素使用了 100% 的屏幕宽度，该算法会增加文本大小，但是不会修改布局。text-size-adjust 这个属性允许开发者去除或者修改浏览器的这种行为，比如，当网页已经适配了小屏幕之后，就不需要这么做了。[webkit-text-size-adjust](https://developer.mozilla.org/zh-CN/docs/Web/CSS/text-size-adjust)\n\n- pre 和 code 标签内容在网页中默认为等宽字体\n\n- box-sizing 应该如何计算一个元素的总宽度和总高度。\n\n  content-box 默认值，width 与 height 只包括内容的宽和高，不包括边框(border)，内边距(padding)，外边距(margin)。注意：内边距、边框和外边距都在这个盒子的外部。`盒子宽度 = width(内容的宽度) + border + padding`\n\n  border-box width 和 height 属性包括内容，内边距和边框，但不包括外边距。`盒子宽度 = width = border + padding + 内容的宽度`\n\n#### 伪类和伪元素\n\n- CSS 伪类(pseudo-classes)\n  伪类是选择器的一种，它用于选择处于特定状态的元素，比如当它们是这一类型的第一个元素时，或者是当鼠标指针悬浮在元素上面的时候(动态伪类)。它们表现得会像是你向你的文档的某个部分应用了一个类一样，帮你在你的标记文本中减少多余的类，让你的代码更灵活、更易于维护。\n\n  语法`:pseudo-class-name`\n\n  :root 匹配文档树的根元素，在 html 中比 html 优先级更高，通常用来声明全局 CSS 变量。\n\n  :not() 用来匹配不符合一组选择器的元素。\n\n  ```CSS\n  /*非dark模式下的input*/\n  html:not(html[data-theme=\"dark\"]) input {\n    background: var(--background-primary-color)\n  }\n\n  /* 既不是 <div> 也不是 <span> 的元素 */\n  body :not(div):not(span) {\n    font-weight: bold;\n  }\n\n  /* 类名不是 `.crazy` 或 `.fancy` 的元素 */\n  /* 注意，此语法尚未获广泛支持。 */\n  body :not(.crazy, .fancy) {\n    font-family: sans-serif;\n  }\n  ```\n\n  :is() 将选择器列表作为参数，并选择该列表中任意一个选择器可以选择的元素。\n\n  ```CSS\n  :is(header, main) p:hover {\n    color: red;\n    cursor: pointer;\n  }\n  /*等同于*/\n  header p:hover,\n  main p:hover{\n    color: red;\n    cursor: pointer;\n  }\n  /*light模式下的input*/\n  :is(html[data-theme=\"light\"]) input{\n    background: var(--background-primary-color)\n  }\n  ```\n\n- CSS 伪元素(pseudo-element)\n  伪元素以类似方式表现，不过表现得是像你往标记文本中加入全新的 HTML 元素一样，而不是向现有的元素上应用类。\n\n  语法`::pseudo-element-name`\n\n  早期的伪元素曾使用单冒号的语法，所以浏览器支持带有单双冒号语法的伪元素\n  ::after 匹配出现在原有元素的实际内容之后的一个可样式化元素。\n  ::before 匹配出现在原有元素的实际内容之前的一个可样式化元素。\n  ::first-letter 匹配元素的第一个字母。\n  ::first-line 匹配包含此伪元素的元素的第一行。\n  ::selection 匹配文档中被选择的那部分。\n\n---\n\n参考链接:\n[深入理解 position sticky 粘性定位的计算规则-张鑫旭](https://www.zhangxinxu.com/wordpress/?p=9291)\n[CSS Tip](https://markodenic.com/css-tips/)\n","tags":["备忘录","CSS"],"categories":["program"]},{"title":"页面增加dark/light模式","url":"/posts/6f92f412.html","content":"\n一直想着给 babyblue 添加黑夜模式，终于拖延到今天动手，在未开始之前总觉得修改东西会很麻烦，真正做起来倒觉得事情都很简单，还学到了新东西，趁此总结一下。\n\n<!-- more -->\n\n#### CSS 一键反转\n\n```CSS\nhtml{\n    filter: invert(1) hue-rotate(180deg);\n}\n```\n\n- filter\n  CSS 属性 filter 将模糊或颜色偏移等图形效果应用于元素。滤镜通常用于调整图像、背景和边框的渲染。\n  **blur(1px) 函数**用于模糊图像；**brightness(0.5)函数** 用于调整图像的亮度；**contrast(2) 函数**用于调整图像的对比度；**grayscale(1) 函数**用于调整图像的灰度；**hue-rotate() 函数**用于旋转图像的色相；**invert(1) 函数**用于反转图像的颜色；**opacity(0.5) 函数**用于调整图像的不透明度；**saturate(100) 函数**用于调整图像的饱和度；**sepia(0.5) 函数**用于调整图像的褐色；**drop-shadow(x 偏移, y 偏移, 模糊大小, 色值) 函数**用于为图像添加阴影。\n\n#### @media 查询\n\nprefers-color-scheme CSS 媒体特性用于检测用户是否有将系统的主题色设置为亮色或者暗色。\n\n- no-preference 表示系统未得知用户在这方面的选项。在布尔值上下文中，其执行结果为 false。\n- light 表示用户已告知系统他们选择使用浅色主题的界面。\n- dark 表示用户已告知系统他们选择使用暗色主题的界面。\n\n```CSS\n@media (prefers-color-scheme: dark){\n    .theme-icon\n         background-image: url('/images/dark.png')\n}\n@media (prefers-color-scheme: light) {\n     .theme-icon\n        background-image: url('/images/light.png')\n }\n\n```\n\n如上，可以将媒体查询放在一个 CSS 样式文件里。\n\n为了更好的修改和维护，也可以分别设置 dark.css、light.css 文件，style.css 存放为其他通用的样式，使用 CSS 变量定义不同的主题颜色。\n\n```CSS\n/* dark.css */\n:root {\n    --background-color:#1f1f1f;\n    --text-color: #ccc;\n    --link-color: #ececec;\n}\n\n/* light.css */\n:root {\n    --background-color: #fff;\n    --text-color: #404040;\n    --link-color:#2196f3;\n}\n\n/* style.css */\nbody {\n    background-color: var(--background-color);\n    color:var(--text-color);\n}\na {\n    color: var(--link-color);\n}\n```\n\n```HTML\n<!-- 引入样式 -->\n<link rel=\"stylesheet\" href=\"/style.css\">\n<link rel=\"stylesheet\" href=\"/dark.css\" media=\"(prefers-color-scheme: dark)\">\n<link rel=\"stylesheet\" href=\"/light.css\" media=\"(prefers-color-scheme: no-preference),(prefers-color-scheme: light)\"\n```\n\n> :root 这个 CSS 伪类匹配文档树的根元素。对于 HTML 来说，:root 表示 \\<html> 元素，除了优先级更高之外，与 html 选择器相同，通常用来声明全局 CSS 变量。\n\n#### 通过 JS 控制主题\n\n通过媒体查询系统的主题色决定网页的主题很方便，但是想要用户能够主动交互切换主题时，媒体查询就无能为力了，这个时候就要靠 JS 操作。\n\n前面分别为 light/dark 模式设置了不同颜色的变量，为了控制在不同模式下响应的变量，可以通过属性选择器控制根节点 CSS 变量。\n\n```CSS\nhtml[data-theme=\"dark\"]:root {\n    --progress-color:linear-gradient(to right, #c2e59c, #64b3f4)\n    --background-color:#1f1f1f\n    --text-color: #ccc;\n}\n\nhtml[data-theme=\"light\"]:root{\n    --progress-color:linear-gradient(to right, #c2e59c, #64b3f4)\n    --background-color: #fff;\n    --text-color: #404040;\n}\n\n```\n\n在页面初始化时通过 JS 获取系统的主题方案以修改 data-theme 的值，同时也可以响应用户的点击切换 light/dark 模式\n\n```HTML\n<script>\n  //切换主题\n  const toggleTheme = (isDarkMode) => {\n    document.documentElement.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');\n  };\n  const theme = localStorage.getItem('theme');\n  //获取系统的主题方案\n  const themeMedia = window.matchMedia('(prefers-color-scheme: dark)');\n  if (theme) {\n    toggleTheme(theme === 'dark');\n  } else {\n    // 页面初始化切换\n    toggleTheme(themeMedia.matches);\n  }\n  //监听系统主题切换\n  themeMedia.addEventListener('change', (e) => {\n      toggleTheme(e.matches);\n  });\n</script>\n```\n\n- matchMedia()\n  Window 的 matchMedia() 方法返回一个新的 MediaQueryList 对象，表示指定的媒体查询字符串解析后的结果。返回的 MediaQueryList 可被用于判定 Document 是否匹配媒体查询，或者监控一个 document 来判定它匹配了或者停止匹配了此媒体查询。  \n  当 document 满足此次媒体查询条件的时候，MediaQueryList 对象的 matches 属性将返回 true，否则返回 false，如果需要在系统切换主题色后，页面也能跟随立即切换，就需要监听 MediaQueryList 对象的 change 事件，它会在媒体查询发生变化时响应。\n\n  ```JS\n  window.matchMedia('(max-width: 600px)').addEventListener('change', (e) => {\n    console.log('execute');\n  });\n  ```\n\n现在可以通过监听用户点击事件交互切换 dark/light 模式。\n\n```JS\nconst htmlEl = document.documentElement;\nconst buttonEl = document.getElementById(\"btn\");\nbuttonEl.addEventListener(\"click\", () => {\n  const currentTheme = htmlEl.getAttribute(\"data-theme\");\n  const nextTheme = currentTheme === \"dark\" ? \"light\" : \"dark\";\n  htmlEl.setAttribute(\"data-theme\", nextTheme);\n});\n\n```\n\n#### JS 操作与媒体查询\n\n鉴于能用 CSS 解决的问题咱就不用 JS 原则，在站点初次加载时，可以优先使用媒体查询的方式获取系统的主题，设置页面的 light/dark 模式，在用户未主动交互前将一直使用这种方式，直到用户主动选择了页面的 light/dark 模式。  \n用户作出主题选择之后，将为 html 设置 data-theme 属性，此后页面的 light/dark 模式将根据该属性设置。\n\n```HTML\n<script>\n  //获取localStorage检查用户是否主动选择了light/dark\n  const theme = localStorage.getItem('theme');\n  if (theme) {\n    document.documentElement.setAttribute('data-theme', theme);\n  }\n</script>\n```\n\n```CSS\n/* theme-data 判断 */\nhtml[data-theme=\"dark\"]:root {\n    --progress-color:linear-gradient(to right, #c2e59c, #64b3f4);\n    --background-color:#1f1f1f;\n    --text-color: #ccc;\n}\nhtml[data-theme=\"light\"]:root {\n    --progress-color:linear-gradient(to right, #c2e59c, #64b3f4);\n    --background-color: #fff;\n    --text-color: #404040;\n}\n/* 媒体查询判断 */\n@media (prefers-color-scheme: dark) {\n    :root{\n        --progress-color:linear-gradient(to right, #c2e59c, #64b3f4);\n        --background-color:#1f1f1f;\n        --text-color: #ccc;\n    }\n}\n@media (prefers-color-scheme: light) {\n    :root{\n        --progress-color:linear-gradient(to right, #c2e59c, #64b3f4);\n        --background-color: #fff;\n        --text-color: #404040;\n    }\n}\n\n```\n\n#### 其他\n\n- theme-color 移动设备浏览器将根据所设定的建议颜色来改变用户界面。\n\n```HTML\n    <meta name=\"theme-color\" media=\"(prefers-color-scheme: light)\" content=\"#fff\" />\n    <meta name=\"theme-color\" media=\"(prefers-color-scheme: dark)\" content=\"#1f1f1f\" />\n```\n\n- color-scheme 当用户选择其中一种配色方案时，操作系统会对用户界面进行调整。这包括表单控件、滚动条和 CSS 系统颜色的使用值。\n  如果用户样式表里已经设定了相应的颜色，则会优先应用用户的样式表设置。\n\n```HTML\n    <meta name=\"color-scheme\" content=\"dark light\" />\n```\n\n---\n\n参考链接:  \n[一文搞懂前端多主题适配方案](https://juejin.cn/post/7049384448256639006)\n","tags":["JavaScript","CSS","HTML"],"categories":["program"]},{"title":"Python课程作业-简单爬虫和数据分析","url":"/posts/406600f.html","content":"\n女朋友的弟弟向她请教 Python 课程作业，一是利用 Requests 和 BeautifulSoup 爬取网页数据并导出，二是给出学生成绩表利用 Pandas 进行数据分析，感觉这两次作业的目的性很强，很好地体现了 Python 的作用，便在此梳理总结一下，方便日后快速回顾和学习。\n\n<!-- more -->\n\n#### 创建虚拟环境\n\n```bash\npython -m venv virtual-env\n```\n\n命令会创建一个 virtual-enviroment 的文件夹，里面包含 python 编译器、标准库和其他一些文件,其中在 Scripts 文件夹下包含激活虚拟环境的执行文件。\n\n#### 安装第三方库\n\n```bash\npip install requests # 安装requests库，用于爬取网页\n\npip install beautifulsoup4 # 安装beautifulsoup4库，用于解析网页\n\npip install pandas # 安装pandas库，用于数据分析\n```\n\n#### 爬取豆瓣电影 op250\n\n```python\nimport requests\nimport csv\nfrom bs4 import BeautifulSoup\n\nheaders = {\n    \"User-Agent\": \"Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36\"\n}\ntop_250 = []\ncsv_header = [\"排名\", \"电影名称\", \"评分\"]\n# 获取网页源码\ndef getHTMLText():\n    page = requests.get(URL, headers=headers)\n    soup = BeautifulSoup(page.content, \"html.parser\")\n    movie_list = soup.find_all(\"div\", class_=\"item\")\n    for movie in movie_list:\n        movie_rank = movie.find(\"em\").string\n        movie_name = movie.find(\"span\", class_=\"title\").string\n        movie_score = movie.find(\"span\", class_=\"rating_num\").string\n        fillUnivList(movie_rank, movie_name, movie_score)\n\n# 填充数据\ndef fillUnivList(rank, name, score):\n    top_250.append({\"排名\": rank, \"电影名称\": name, \"评分\": score})\n\n# 向csv写入数据\ndef writeUListfile():\n    with open(\"top_250.csv\", \"w\", newline=\"\") as f:\n        f_csv = csv.DictWriter(f, csv_header)\n        f_csv.writeheader()\n        f_csv.writerows(top_250)\n\n# 从csv读取数据\ndef printUniverList():\n    with open(\"top_250.csv\", \"r\", newline=\"\") as fin:\n        reader = csv.reader(fin)\n        for row in reader:\n            print(row)\n\n# 循环读取豆瓣网页数据\nfor i in range(0, 226, 25):\n    URL = f\"https://movie.douban.com/top250?start={i}&filter=\"\n    getHTMLText()\n    writeUListfile()\n\nprintUniverList()\n```\n\n#### 学生成绩分析\n\n```python\nimport pandas as pd\n\ndata = pd.DataFrame(\n    {\n        \"学号\": [\"19000\",\"19001\",\"19002\",\"19003\",\"19004\", \"19005\",\"19006\",\"19007\",\"19008\",\"19009\"],\n        \"姓名\": [\"Johnny\",\"Mary\", \"Sara\", \"Micky\",\"Jerry\",\"Sunny\",\"Sherry\",\"Alice\",\"Nala\",\"Anna\"],\n        \"程序设计\": [88, 75, 95, 85, 58, 78, 56, 68, 73, 63],\n        \"体育\": [91, 80, 90, 80, 76, 74, 70, 96, 86, 69],\n        \"英语\": [76, 93, 89, 90, 86, 57, 76, 67, 64, 85],\n        \"高数\": [67, 85, 91, 78, 89, 64, 67, 70, 91, 93],\n    }\n)\n\n# 1.查询英语成绩不及格同学数据\nnData = data[data[\"英语\"] < 60]\nprint(nData)\n\n# 2.增加一列数据，计算每个同学4门课程成绩总分\ndata[\"总分\"] = data[\"程序设计\"] + data[\"体育\"] + data[\"英语\"] + data[\"高数\"]\nprint(data)\n\n# 3.将程序设计课不及格的同学成绩改为60分\ndata.loc[data[\"程序设计\"] < 60, \"程序设计\"] = 60\nprint(data)\n\n# 4.采用基本统计函数计算并输出每门课程的平均分\nprint(data.loc[:, data.columns != \"学号\"].mean())\n\n# 5.按总分从高到低排序，若总分相同，则按英语从高到低排序\ndata.sort_values(by=[\"总分\", \"英语\"], ascending=[False, False], inplace=True)\nprint(data)\n\n# 6.查程序设计成绩为优秀，同时高数也为优秀的学生数据\nnData = data[(data[\"程序设计\"] >= 90) & (data[\"高数\"] >= 90)]\nprint(nData)\n\n# 7.将程序设计成绩离散化处理，分成标签 不及格、及格、中、良、优秀，并增加一新列为程序设计分级\ndata[\"程序设计分级\"] = pd.cut(\n    data[\"程序设计\"], [0, 59, 70, 80, 90, 100], labels=[\"不及格\", \"及格\", \"中\", \"良\", \"优秀\"]\n)\nprint(data)\n\n# 8.在第（7）操作基础上，统计程序设计课 各分级人数\nprint(data[\"程序设计分级\"].value_counts())\n\n# 9.查英语成绩为良的学生学号、姓名、英语和高数几列数据\nnData = data[(data[\"英语\"] >= 80)]\nprint(nData[[\"学号\", \"姓名\", \"英语\", \"高数\"]])\n\n# 10.查姓名里包含大写字母S的学生数据。\nnData = data[data[\"姓名\"].str.contains(\"S\")]\nprint(nData)\n```\n","tags":["Python"],"categories":["program"]},{"title":"青蛙先生去看心理医生","url":"/posts/a640ea13.html","content":"\n◆ 第六章 探索童年\n\n你肯定不喜欢，可如果你要更好地理解自己，就需要跟自己的情绪做联结，并理解这些情绪。如果你否认它们，不论是用无视还是压抑的方式，结果都像是做了截肢，就如身体的重要部位被切掉了一样，你在某种程度上成了一个残缺的人。\n\n<!-- more -->\n\n◆ 第九章 秘密协议\n\n“不过，我说的‘不诚实’和平时的意思有些不同，我是说，你可能对自己不诚实。为什么你总是遇到类似的事情？这些事情最后都让你显得很蠢，让对方占了上风，让你感觉又变回小时候那个可怜弱小的自己，到底是纯属倒霉，还是因为你用某种方式和对方共谋了这件倒霉事儿？”\n“‘共谋’是什么意思？”蛤蟆问。\n“意思是达成一种秘密协议。我用‘共谋’是想说，你偷偷地或无意识地配合对方，来给自己制造不快，这就是在玩心理游戏，而且在游戏里输的人才算是赢家。”苍鹭的话听着有些高深莫测。\n\n没有一种批判比自我批判更强烈，也没有一个法官比我们自己更严苛。\n\n◆ 第十一章 蛤蟆先生的选择\n\n‘成人自我状态’指我们用理性而不是情绪化的方式来行事。它让我们能应对此时此地正在发生的现实状况。\n\n在这个状态下，我们能计划、考虑、决定、行动，我们能理性而合理地行事。处于这个状态时，我们所有的知识和技能都能为自己所用，而不再被脑子里父母过去的声音所驱使，也不会被童年的情绪所围困。相反，我们能思考当下的状况，基于事实来决定要怎么做。\n\n我认为没有人能‘让’我们产生什么感受，除非他们用蛮力胁迫你。说到底，是我们‘选择’了自己的感受。我们‘选择’了愤怒，我们‘选择’了悲伤。”\n\n以往的经历教会我们在相似情境下不经大脑就能自动做出反应，可以说，就像实验里的狗一样，我们无法避免这种反应。\n\n◆ 第十三章 人生坐标与心理游戏\n\n一旦我们在童年决定用哪种态度和观点，我们就会在随后的人生里始终坚持自己的选择。这些态度和观点，变成我们存在的底层架构。从那以后，我们便建构出一个世界，不断确认和支持这些信念和预期。换一个词来说，我们把自己的人生变成了一个‘自证预言’。\n\n假如你认为生活让你不快乐，不善待你，那么今天喝醉就是你用的某种方法，它可以印证明天你会感觉悲惨的预期。换句话说，你创造了一个‘自证预言’。\n\n◆ 第十四章 赢了游戏 输了自己\n\n因为愤怒能够非常有效地抵抗抑郁。愤怒的人从不觉得内疚，因为他们总在怪罪别人。他们自卫的方式，是把自己内在的恐惧对外投射到别人身上，这样就能把对自己的怒火转向别人。\n\n◆ 第十五章 最后一次面谈\n\n他们都有强大的自我意识，了解自己的情感。他们能管理情绪，能从悲伤和不幸中重新振作。但也许最重要的是，他们能控制冲动，也懂得延迟满足，从而避免轻率的决定和不妥的行为。\n\n◆ 第十六章 道别与新生\n\n人们太容易让重要的事件就这么过去，忘记关注或为它们庆祝，也许是因为我们通常都只在事后才明白它们有多重要\n","tags":["读书","心理"],"categories":["记录"]},{"title":"被讨厌的勇气","url":"/posts/bc644448.html","content":"\n◆ 引言\n\n人并不是住在客观的世界，而是住在自己营造的主观世界里。你所看到的世界不同于我所看到的世界，而且恐怕是不可能与任何人共有的世界。\n\n◆ 再怎么“找原因”，也没法改变一个人\n\n如果一味地关注过去的原因，企图仅仅靠原因去解释事物，那就会陷入“决定论”。也就是说，最终会得出这样的结论：我们的现在甚至未来全部都由过去的事情所决定，而且根本无法改变。是这样吧？\n\n<!-- more -->\n\n◆ 心理创伤并不存在\n\n阿德勒心理学明确否定心理创伤，这一点具有划时代的创新意义。弗洛伊德的心理创伤学说的确很有趣。他认为心灵过去所受的伤害（心理创伤）是引起目前不幸的罪魁祸首。当我们把人生看作一幕大型戏剧的时候，它那因果规律的简单逻辑和戏剧性的发展进程自然而然地就会散发出摄人心魄的魅力。但是，阿德勒在否定心理创伤学说的时候说了下面这段话：“任何经历本身并不是成功或者失败的原因。我们并非因为自身经历中的刺激——所谓的心理创伤——而痛苦，事实上我们会从经历中发现符合自己目的的因素。决定我们自身的不是过去的经历，而是我们自己赋予经历的意义。”\n\n阿德勒说，决定我们自己的不是“经验本身”而是“赋予经验的意义”。请你注意这一点。并不是说遭遇大的灾害或者幼年受到虐待之类的事件对人格形成毫无影响。相反，影响会很大。但关键是经历本身不会决定什么。我们给过去的经历“赋予了什么样的意义”，这直接决定了我们的生活。人生不是由别人赋予的，而是由自己选择的，是自己选择自己如何生活。\n\n◆ 愤怒都是捏造出来的\n\n难道你还不明白吗？所谓愤怒其实只是可放可收的一种“手段”而已。它既可以在接电话的瞬间巧妙地收起，也可以在挂断电话之后再次释放出来。这位母亲并不是因为怒不可遏而大发雷霆，她只不过是为了用高声震慑住女儿，进而使其听自己的话才采用了愤怒这种感情。\n\n◆ 弗洛伊德说错了\n\n无论过去发生了什么样的事情，现在的状态取决于你赋予既有事件的意义。\n\n◆ 人们常常下定决心“不改变”\n\n某人如何看“世界”，又如何看“自己”，把这些“赋予意义的方式”汇集起来的概念就可以理解为生活方式。从狭义上来讲可以理解为性格；从广义上来说，这个词甚至包含了某人的世界观或人生观。\n\n时常在选择着自己的生活方式，即使像现在这样促膝而谈的瞬间也在进行着选择。你把自己说成不幸的人，还说想要马上改变，甚至说想要变成别人。尽管如此还是没能改变，这是为什么呢？那是因为你在不断地下着不改变自己生活方式的决心。\n\n◆ 为什么讨厌自己？\n\n就像有脸红恐惧症的她害怕被男性拒绝一样，你也很害怕被他人否定。害怕被别人轻视或拒绝、害怕心灵受伤。你认为与其陷入那种窘境倒还不如一开始就不与任何人有关联。也就是说，你的“目的”是“避免在与他人的关系中受伤”。\n\n◆ 自卑感来自主观的臆造\n\n我对自己身高的感觉终究还是在与他人的比较——也就是人际关系——中产生的一种主观上的“自卑感”。如果没有可以比较的他人存在，我也就不会认为自己太矮。你现在也有各种“自卑感”并深受其苦吧？但是，那并不是客观上的“劣等性”，而是主观上的“自卑感”。即使像身高这样的问题也可以进行主观性的还原。\n\n◆ 自卑情结只是一种借口\n\n哲人：在这里，你可以简单将其理解为“希望进步”或者“追求理想状态”。例如，蹒跚学步的孩子学会独自站立；他们学会语言，可以与周围的人自由沟通。我们都有想要摆脱无力状态、追求进步的普遍欲求。人类史上的科学进步也是“追求优越性”的结果。\n青年：确实如此。那么？\n哲人：与此相对应的就是自卑感。人都处于追求优越性这一“希望进步的状态”之中，树立某些理想或目标并努力为之奋斗。同时，对于无法达成理想的自己就会产生一种自卑感。例如，越是有远大志向的厨师也许就越会产生“还很不熟练”或者“必须做出更好的料理”之类的自卑感。\n\n自卑感本身并不是坏事。这一点你能够理解吧？就像阿德勒说过的那样，自卑感也可以成为促成努力和进步的契机。例如，虽然对学历抱有自卑感，但若是正因为如此，才下定“我学历低所以更要付出加倍的努力”之类的决心，那反而成了好事。\n而另一方面，自卑情结是指把自己的自卑感当作某种借口使用的状态。具体就像“我因为学历低所以无法成功”或者“我因为长得不漂亮所以结不了婚”之类的想法。像这样在日常生活中大肆宣扬“因为有 A 所以才做不到 B”这样的理论，这已经超出了自卑感的范畴，它是一种自卑情结。\n\n关于你所说的因果关系，阿德勒用“外部因果律”一词来进行说明。意思就是：将原本没有任何因果关系的事情解释成似乎有重大因果关系一样。例如，前几天就有人说：“自己之所以始终无法结婚，就是因为幼时父母离婚的缘故。”从弗洛伊德的原因论来看，父母离婚对其造成了极大的精神创伤，与自己的婚姻观有着很大的因果关系。但是，阿德勒从目的论的角度出发把这种论调称为“外部因果律”。\n\n简单地说就是害怕向前迈进或者是不想真正地努力。不愿意为了改变自我而牺牲目前所享受的乐趣——比如玩乐或休闲时间。也就是拿不出改变生活方式的“勇气”，即使有些不满或者不自由，也还是更愿意维持现状。\n\n◆ 越自负的人越自卑\n\n例如大力宣扬自己是权力者——可以是班组领导，也可以是知名人士，其实就是在通过此种方式来显示自己是一种特别的存在。虚报履历或者过度追逐名牌服饰等也属于一种权势张扬、具有优越情结的特点。这些情况都属于“我”原本并不优秀或者并不特别。而通过把“我”和权势相结合，似乎显得“我”很优秀。这也就是“虚假优越感”。\n\n这种人其实是想要借助不幸来显示自己“特别”，他们想要用不幸这一点来压住别人。\n例如，我的身高很矮。对此，心善的人会用“没必要在意”或者“人的价值并不由身高决定”之类的话来安慰我。但是，此时我如果甩出“你怎么能够理解矮子的烦恼呢！”之类的话加以拒绝的话，那谁都会再无话可说。如此一来，恐怕周围的人一定会小心翼翼地来对待我吧。\n\n◆ 承认错误，不代表你失败了\n\n所谓控制怒气是否就是“忍耐”呢？不是的，我们应该学习不使用怒气这种感情的方法，因为怒气终归是为了达成目的的一种手段和工具。\n\n首先希望你能够理解这样一个事实，那就是发怒是交流的一种形态，而且不使用发怒这种方式也可以交流。我们即使不使用怒气，也可以进行沟通以及取得别人的认同。如果能够从经验中明白这一点，那自然就不会再有怒气产生了。\n\n关于权力之争，还有一点需要注意。那就是无论认为自己多么正确，也不要以此为理由去责难对方。这是很多人都容易陷落进去的人际关系圈套。\n\n原本主张的对错与胜负毫无关系。如果你认为自己正确的话，那么无论对方持什么意见都应该无所谓。但是，很多人都会陷入权力之争，试图让对方屈服。正因为如此，才会认为“承认自己的错误”就等于“承认失败”。\n\n◆ 浪漫的红线和坚固的锁链\n\n当人能够感觉到“与这个人在一起可以无拘无束”的时候，才能够体会到爱。既没有自卑感也不必炫耀优越性，能够保持一种平静而自然的状态。真正的爱应该是这样的。\n\n◆ “人生谎言”教我们学会逃避\n\n但是，那并不是因为无法容忍 A 的缺点才讨厌他，而是你先有“要讨厌 A”这个目的，之后才找出了符合这个目的的缺点。\n\n是的。即使你逃避人生课题、依赖人生谎言，那也不是因为你沾染了“恶”。这不是一个应该从道德方面来谴责的问题，它只是“勇气”的问题。\n\n◆ 阿德勒心理学是“勇气的心理学”\n\n我们人类并不是会受原因论所说的精神创伤所摆弄的脆弱存在。从目的论的角度来讲，我们是用自己的手来选择自己的人生和生活方式。我们有这种力量。\n\n◆ 即使父母也得放下孩子的课题\n\n当然。但请你这样想，干涉甚至担负起别人的课题这会让自己的人生沉重而痛苦。如果你正在为自己的人生而苦恼——这种苦恼源于人际关系——那首先请弄清楚“这不是自己的课题”这一界限；然后，请丢开别人的课题。这是减轻人生负担，使其变得简单的第一步。\n\n◆ 放下别人的课题，烦恼轻轻飞走\n\n那么，假如你会进行课题分离又会如何呢？也就是说，无论上司怎么蛮不讲理地乱发脾气，那都不是“我”的课题。毫不讲理这件事情是上司自己应该处理的课题，既没必要去讨好，也没必要委曲求全，我应该做的就是诚实面对自己的人生、正确处理自己的课题。如果你能够这样去理解，事情就会截然不同了。\n\n我的建议是这样。首先要思考一下“这是谁的课题”。然后进行课题分离——哪些是自己的课题，哪些是别人的课题，要冷静地划清界限。\n而且，不去干涉别人的课题也不让别人干涉自己的课题。这就是阿德勒心理学给出的具体而且有可能彻底改变人际关系烦恼的具有划时代意义的观点。\n\n◆ 砍断“格尔迪奥斯绳结”\n\n当然。你刚才说课题分离是肆意践踏对方好意。这其实是一种受“回报”思想束缚的想法。也就是说，如果对方为自己做了什么——即使那不是自己所期望的事情——自己也必须给予报答。\n这其实并非是不辜负好意，而仅仅是受回报思想的束缚。无论对方做什么，决定自己应该如何做的都应该是自己。\n\n阿德勒心理学中有反常识的方面：否定原因论、否定精神创伤、采取目的论；认为人的烦恼全都是关于人际关系的烦恼；此外，不寻求认可或者课题分离也全都是反常识的理论。\n\n◆ 对认可的追求，扼杀了自由\n\n这一点请你一定好好理解。为了满足别人的期望而活以及把自己的人生托付给别人，这是一种对自己撒谎也不断对周围人撒谎的生活方式。\n\n分离课题并不是以自我为中心，相反，干涉别人的课题才是以自我为中心的想法。父母强迫孩子学习甚至对其人生规划或结婚对象指手画脚，这些都是以自我为中心的想法。\n\n◆ 自由就是被别人讨厌\n\n是的，也就是本能性的欲望、冲动性的欲望。那么，按照这种“倾向性”，也就是按照欲望或冲动去生活、像自斜坡上滚下来的石头一样生活，这是不是“自由”呢？绝对不是！这种生活方式只是欲望和冲动的奴隶。真正的自由是一种把滚落下来的自己从下面向上推的态度。\n\n毫不在意别人的评价、不害怕被别人讨厌、不追求被他人认可，如果不付出以上这些代价，那就无法贯彻自己的生活方式，也就是不能获得自由。\n\n是啊。“不想被人讨厌”也许是我的课题，但“是否讨厌我”却是别人的课题。即使有人不喜欢我，我也不能去干涉。如果用刚才介绍过的那个谚语说的话，那就是只做“把马带到水边”的努力，是否喝水是那个人的课题。\n\n◆ 人际关系“王牌”，握在你自己手里\n\n我改变了，发生变化的只是“我”。作为结果，对方会怎样我不知道，也无法左右，这也是课题分离。当然，随着我的变化——不是通过我的变化——对方也会发生改变。也许很多情况下对方不得不改变，但那不是目的，而且也可能不会发生。总之，把改变自己当成操纵他人的手段是一种极其错误的想法。\n\n◆ 批评不好……表扬也不行？\n\n人表扬他人的目的就在于“操纵比自己能力低的对方”，其中既没有感谢也没有尊敬。\n\n◆ 有价值就有勇气\n\n最重要的是不“评价”他人，评价性的语言是基于纵向关系的语言。如果能够建立起横向关系，那自然就会说出一些更加真诚地表示感谢、尊敬或者喜悦的话。\n\n◆ 信用和信赖有何区别？\n\n在相信他人的时候不附加任何条件。即使没有足以构成信用的客观依据也依然相信，不考虑抵押之类的事情，无条件地相信。这就是信赖。\n\n◆ 追求理想者面前的两条路\n\n本来，无论是学习还是运动，为了取得某些成果就需要付出一定的努力。但是，“希望特别差劲”的孩子，也就是陷入问题行为的孩子却可以在不付出这种健全努力的情况下也获得他人的关注。阿德勒心理学称之为“廉价的优越性追求”。\n例如，有些问题儿童在上课的时候通过扔橡皮或者是大声说话来妨碍上课，如此一来肯定会引起同学或老师的注意，此刻其就可以成为特别的存在。但这是“廉价的优越性追求”，是一种不健全的态度。\n\n◆ 最重要的是“此时此刻”\n\n人生是连续的刹那，根本不存在过去和未来。你是想要通过关注过去或未来为自己寻找免罪符。过去发生了什么与你的“此时此刻”没有任何关系，未来会如何也不是“此时此刻”要考虑的问题。假如认真地活在“此时此刻”，那就根本不会说出那样的话。\n\n如果站在弗洛伊德式原因论的立场上，那就会把人生理解为基于因果律的一个长故事。何时何地出生、度过了什么样的童年时代、从什么样的学校毕业、进了什么样的公司，正是这些因素决定了现在的我和将来的我。\n的确，把人生当作故事是很有趣的事情。但是，在故事的前面部分就能看到“模糊的将来”；并且，人们还会想要按照这个故事去生活。我的人生就是这样，所以我只能照此生活，错不在我而在于过去和环境。这里搬出来的过去无非是一种免罪符，是人生的谎言。\n\n生活方式说的是“此时此刻”，是可以按照自己意志改变的事情。像直线一样的过去的生活只不过是在你反复下定决心“不做改变”的基础上才貌似成了直线而已。并且，将来的人生也完全是一张白纸，并未铺好行进的轨道。这里没有故事。\n\n◆ 对决“人生最大的谎言”\n\n你自己的人生也同样。为遥远的将来设定一个目标，并认为现在是其准备阶段。一直想着“真正想做的是这样的事情，等时机到了就去做”，是一种拖延人生的生活方式。只要在拖延人生，我们就会无所进展，只能每天过着枯燥乏味的单调生活。因为在这种情况下，人就会认为“此时此刻”只是准备阶段和忍耐阶段。\n但是，为了遥远将来的考试而努力学习的“此时此刻”却是真实的存在。\n\n没有目标也无妨。认真过好“此时此刻”，这本身就是跳舞。不要把人生弄得太深刻。请不要把认真和深刻混为一谈。\n\n是的。人生很简单，并不是什么深刻的事情。如果认真过好了每一个刹那，就没有什么必要令其过于深刻。\n并且还要记住一点。站在现实性角度的时候，人生总是处于完结状态。\n\n人生中最大的谎言就是不活在“此时此刻”。纠结过去、关注未来，把微弱而模糊的光打向人生整体，自认为看到了些什么。你之前就一直忽略“此时此刻”，只关注根本不存在的过去和未来。对自己的人生和无可替代的刹那撒了一个大大的谎言。\n\n◆ 人生的意义，由你自己决定\n\n例如战祸或天灾，我们所居住的世界充满了各种不合理的事情。我们也不可能在被卷入战祸而丧命的孩子们面前谈什么“人生意义”。也就是说，人生并不存在可以作为常识来讲的意义。\n但是，如果面对这种不合理的悲剧而不采取任何行动的话，那就等于是在肯定已经发生的悲剧。无论发生何种状况，我们都必须采取一些行动，必须对抗康德所说的倾向性。\n\n而且，我们要像跳舞一样认真过好作为刹那的“此时此刻”，既不看过去也不看未来，只需要过好每一个完结的刹那。没必要与谁竞争，也不需要目的地，只要跳着，就一定会到达某一个地方。\n","tags":["读书","心理"],"categories":["记录"]},{"title":"RegExp正则表达式","url":"/posts/2f57a694.html","content":"\n![RegExp](/blog_images/2022-3-2-Regexp.png)\n\n<!-- more -->\n\n#### 1-规则\n\n| 特殊字符 |                                            | 表达式      |                                     |\n| :------- | :----------------------------------------- | :---------- | :---------------------------------- |\n| **\\w**   | 匹配字母数字**下划线**，相当于[A-Za-z0-9_] | **[xyz]**   | 字符集，匹配 x 或 y 或 z            |\n| **\\r**   | 匹配回车符                                 | **[^xyz]**  | 否定字符集，匹配非 x 或 y 或 z      |\n| **\\n**   | 匹配换行符                                 | **x{n,m}**  | 匹配 x 出现 n-m 次的条件            |\n| **.**    | 匹配除换行符外的所有字符                   | **(x)**     | 匹配 x 并且记住匹配项(捕获括号)     |\n|          |                                            | **(?:x)**   | 匹配 x 但是不记住匹配项(非捕获括号) |\n|          |                                            | **x(?=y)**  | 匹配后面是 y 的 x                   |\n|          |                                            | **x(?!y)**  | 匹配后面不是 y 的 x                 |\n|          |                                            | **(?<=y)x** | 匹配前面是 y 的 x                   |\n|          |                                            | **(?<!y)x** | 匹配前面不是 y 的 x                 |\n\n#### 2-JavaScript 方法\n\n```JavaScript\nconst regExp=/\\d+(?=hello)/g\nconst str1='123hello456'\nconst str2='123world456'\n```\n\n- RegExp 对象 exec test\n\n  ```JavaScript\n  //test 判断字符串是否匹配正则 返回boolean\n  //exec 查找字符串符合正则的部分，存在返回包含条件的数组，否则返回null\n  regExp.test(str1); // true\n  regExp.test(str2); // false\n  regExp.exec(str1); // [ '123', index: 0, input: '123hello456', groups: undefined ]\n  regExp.exec(str2); // null\n  ```\n\n  当正则表达式是全局时，exec 与 test 都会**记录当前检索位置，下次从当前位置继续执行**\n\n- String 对象 match matchAll replace search split\n\n  ```JavaScript\n  //match 方法与exec作用相同\n  //search 查找字符串符合正则的部分，存在返回匹配的索引位置，否则返回-1\n  str1.match(regExp); // [ '123' ]\n  str1.replace(regExp,'haha'); // 'hahahello456'\n  str1.search(/\\d+$/); // 8\n  str2.search(regExp); // -1\n  str1.split(/\\d+/); // [ '', 'hello', '' ]\n  ```\n\n- exec 和 match 方法区别\n  ```JavaScript\n  const reg1=/\\d+/\n  const reg2=/\\d+/g\n  const str='123hello456world999'\n  reg1.exec(str); // [ '123', index: 0, input: '123hello456world999', groups: undefined ]\n  reg2.exec(str); // [ '123', index: 0, input: '123hello456world999', groups: undefined ]\n  reg2.exec(str); // [ '456', index: 8, input: '123hello456world999', groups: undefined ]\n  str.match(reg1); // [ '123', index: 0, input: '123hello456world999', groups: undefined ]\n  str.match(reg2); // [ '123', '456', '999' ]\n  ```\n  当正则表达式是全局时，exec 方法返回匹配的**第一个匹配结果数组**，match 方法返回**所有匹配的结果组成的数组**，但是 exec 会**记录当前检索位置，下次从当前位置继续执行**。\n  当正则表达式非全局时，exec 和 match 都返回匹配的第一个结果数组\n\n#### 3-捕获与非捕获\n\n```JavaScript\nconst str='123hello456world999'\n\nstr.match(/(\\d+)/); //  ['123', '123', index: 0, input: '123hello456world999', groups: undefined]\nstr.match(/(?:\\d+)/); // ['123', index: 0, input: '123hello456world999', groups: undefined]\n\n```\n\n如上，捕获组匹配成功后返回的数组包括**匹配到的字符串和所有被记住的子字符串**，非捕获组匹配成功返回的数组只包括匹配到的字符串\n\n- 捕获组命名\n  捕获组其实是分为编号捕获组 Numbered Capturing Groups 和命名捕获组 Named Capturing Groups 的，我们上面说的捕获组，默认指的是编号捕获组。命名捕获组，也是捕获组，只是语法不一样。命名捕获组的语法如下：(?<name>group) 或 (?'name'group)，其中 name 表示捕获组的名称，group 表示捕获组里面的正则。\n\n  ```JavaScript\n  //编号捕获组\n   'abcabcabcabcabc'.match(/(abc)\\1/g); // ['abcabc', 'abcabc']\n\n  //命名捕获组\n  '2022-03-07'.match(/(?<year>\\d{4})-(?<month>\\d{2})-(?<day>\\d{2})/);\n  // ['2022-03-07', '2022', '03', '07', index: 0, input: '2022-03-07', groups: {year: '2022', month: '03', day: '07'}]\n\n\n  ```\n\n- 通过捕获组拆分匹配到的数组\n\n  ```JavaScript\n  /* 捕获组会返回匹配到的字符串和所有记住的子字符串 */\n  const date='2020-05-23'\n\n  date.match(/\\d{4}-\\d{2}-\\d{2}/); // ['2020-05-23', index: 0, input: '2020-05-23', groups: undefined]\n  date.match(/(\\d{4})-(\\d{2})-(\\d{2})/); //  ['2020-05-23', '2020', '05', '23', index: 0, input: '2020-05-23', groups: undefined]\n  ```\n\n- 对捕获组反向引用\n\n  ```JavaScript\n  const str='hellohellohello'\n\n  str.match(/(hello)/); //  ['hello', 'hello', index: 0, input: 'hellohellohello', groups: undefined]\n  str.match(/(hello)\\1/); // ['hellohello', 'hello', index: 0, input: 'hellohellohello', groups: undefined]\n\n  ```\n\n- 非捕获组(?:)\n\n  ```JavaScript\n  const str='ha-ha,haa-haa'\n\n  // \\1 引用的第一个组实际上是指向第二个组，因为第一个是未被捕获的分组。\n  str.match(/(?:ha)-ha,(haa)-\\1/g); // ['ha-ha,haa-haa']\n  ```\n\n#### 4-正则表达式使用变量\n\n正则表达式使用变量时，任何写在字面量模版里的变量都会解析成字符串，可以通过拼接或者构造函数。\n\n```JavaScript\n//两种写法是等价的\nvar re = new RegExp('\\\\w+','g');\nvar re = /\\w+/g;\n```\n\n```JavaScript\nconst string='hello';\nconst regExp=new RegExp(`\\\\d+(?=${string})`,'g');\nstr1.match(regExp); // [ '123' ]\n```\n\n> \\* 和 + 限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个 ? 就可以实现非贪婪或最小匹配。\n\n#### 5-示例\n\n```JavaScript\n\n//将字符根据空格或者-分成数组\nconst test1='hello world'\nconst test2='hello-world'\ntest1.split(/[\\s\\-]+/) //['hello','world']\ntest2.split(/[\\s\\-]+/) //['hello','world']\n\n//替换掉尖括号的内容\nconst test3='<abcdefg>>'\ntest3.replace(/(?<=<).*(?=>)/g, 'hello') //'<hello>'\n\n//删除数字前面的0\nconst test4=00003232323\ntest.replace(/^0+/g, '')\n\n//1-9开头的数字\nconst numReg = /^[1-9]+\\d/g;\n\n//以第一个非连字符隔开\n'hello-world-this-is-test'.split(/(?<=^[^-]+)-/)\n// [ 'hello', 'world-this-is-test' ]\n\n//限制250单词数量\nconst reg=/^(?:\\b\\w+\\b[\\s\\r\\n]*){1,10}$/g\n```\n\n---\n\n参考链接：\n[正则表达式练习](https://regexlearn.com/zh-cn/cheatsheet)\n","tags":["JavaScript"],"categories":["program"]},{"title":"黄金时代","url":"/posts/c65e86d5.html","content":"\n◆ 第 1 章 黄金时代\n\n那一天我二十一岁，在我一生的黄金时代。我有好多奢望。我想爱，想吃，还想在一瞬间变成天上半明半暗的云。后来我才知道，生活就是个缓慢受锤的过程，人一天天老下去，奢望也一天天消失，最后变得像挨了锤的牛一样。\n\n我说她竟敢觉得自己清白无辜，这本身就是最大的罪孽。照我的看法，每个人的本性都是好吃懒做，好色贪淫，假如你克勤克俭，守身如玉，这就犯了矫饰之罪，比好吃懒做好色贪淫更可恶。\n\n<!-- more -->\n\n其实伟大友谊不真也不假，就如世上一切东西一样，你信它是真，它就真下去；你疑它是假，它就是假的。我的话也半真不假。但是我随时准备兑现我的话，哪怕天崩地裂也不退却。\n\n◆ 第 2 章 三十而立\n\n只见我高高爬在脚手梯上，迎着万里东风，敞开年轻的胸怀，高叫着：× 你妈！谁敢上来我就一脚踹他下去！这好像是刚刚发生的事情。\n\n像拾金不昧、帮助盲人老大爷回家之类的好事不是每天都能碰到，而我是一个稳定的好事来源。只要找我谈谈话，一件好事就已诞生：“帮助了后进生王二！”我能够健康地成长，没有杀死校长老师，没有放火和在教室里撒尿，全是这些帮助的功劳。\n\n◆ 第 3 章 似水流年\n\n据说贺先生刚落地时，还在满地打滚，这场面我就没看见。据说贺先生的手还抓了两把，我也没看见。贺先生死时的景象，我几乎都没看见，只看见他最后抽抽了两下。这使我很没有面子。所以看见李先生倒在地下，我大为兴奋。虽然我拿不准他死了没有。\n\n他寻到的公道就是从此被叫做龟头血肿，一肿二十三年，至今还没消。\n\n李先生在大字报里说，他绝不是因为吃了亏，想要对方怎样赔罪才写大字报。他要说的是：龟头血肿很不好，龟头血肿很疼。龟头血肿应该否定，绝不要再有人龟头血肿。他这些话都被人看成了奇谈怪论。到这时，他回来有段日子了，大家也都认识他。在食堂里大师傅劝他；小李呀，拉倒吧。瞧瞧你被人踢的那个地方，不好张扬。李先生果然顽固，高声说：师傅，这话不对。人家踢我，可不是我伸出龟头让他踢的！踢到这里就拉倒，以后都往这里踢！\n\n近来我们讨论了龟头血肿，很多人不了解问题的严重，不肯认真对待，反而一味嗤笑。须知但凡男人都生有龟头，这是不争的事实。龟头挨踢，就会血肿，而且很疼，这也是不争的事实。不争的事实，何可笑之有？不争的事实，又岂可不认真对待之？他这么论来论去，直把别人的肚子都要笑破。依我看，这龟头血肿之名，纯粹是他自己挣出来的。\n\n在伟大的“文化革命”里，大道理管小道理，大问题管小问题。\n\n◆ 第 4 章 革命时期的爱情\n\n性爱受到了自身力量的推动，但自发地做一件事在有的时候是不许可的，这就使事情变得非常的复杂。\n\n人们的确可以牵强附会地解释一切，包括性爱在内。\n\n羞耻之心人皆有之，大炼钢铁一过去，人们就把炉子拆得光光的，地面压得平平的，使得好像什么事也没发生一样。但是还是有一些踪迹可寻，在院子里一些偏僻地方，在杂草中间可以找到一些砖堆，那些砖头上满是凝固了的气泡，黑色的瘤子，就像海边那些长满了藤壶，牡蛎壳的礁石——这说明凉快的炉子也能把砖头烧坏。\n\n但是他实在太可爱了，不能不打。如果一个八十公斤的壮汉这样冒犯了我，我当然也会发火，但是怒气肯定在不至动手的范围之内，这是因为后者太不可爱了，不能打。\n\n蛐蛐斗架谓之掐。始而摩翅做声，进而摩须挑衅，最后就咬作一团，他们掐了起来，从挥舞拳头开始一个文明史。\n\n我以为贺先生在半空中，一定感到自己像一颗飞机上落下来的炸弹。耳畔风声呼呼，地面逐渐接近，心脏狂跳不止，那落地的“砰”的一声，已经在心里响过了。贺先生既然要死，那么他一定把一切都想过了。他一定能体会到死亡的惨烈，也一定能体会死去时那种空前绝后的快感。\n\n我是那样凶恶，因为我不说话。\n\n现在到了不惑之年，我明白了，我挨的打，的确不能和刘老先生相提并论。因为我是那样的人，所以挨的揍里面，有很大自找的成分。刘老先生挨的打，没有一点自找的成分。我还年轻，还有机会讨回账来，可是刘老先生已经到了垂暮之年，再不能翻本，每一下都是白挨。因此刘老先生当然怕得厉害。\n\n陈清扬说，当时她想去追我，可是觉得很难追上。而且我也不一定能够证明她不是破鞋。所以她走回医务室去。后来她又改变了主意去找我，是因为所有的人都说她是破鞋，因此所有的人都是敌人。而我可能不是敌人。她不愿错过了机会，让我也变成敌人。\n\n因为在中国人与人的距离太近，在世界其他地方，除了性爱的伙伴不会有这么近，故而各种思想无不带有性爱的痕迹。\n\n弗洛伊德说，受虐狂是这样形成的：假如人处于一种不能克服的痛苦之中，就会爱上这种痛苦，把它看成幸福。\n\n只为线条一句话，我就把这表卖了，二十年来未曾后悔过，直到她说我是秫秸秆才后悔了！\n\n你怎能相信，一个存心要死的人，给世界留下最后的话仅仅是“小孩走开”呢？\n\n嘴里呼出癌的恶臭\n\n在革命时期，总有人在戏弄人，有人在遭人戏弄。灰白色的面孔上罩着一层冷汗，在这上面又有一层皱皱巴巴，湿淋淋的惨笑，就是献给胜利者的贡品。\n\n然后在他身边蹲下，说：我和贺先生下过棋。他还是不说话。后来我说：已经验过尸啦。他忽然说道：小同学，你不知道。根本没验过。根本没仔细验过。说着说着忽然噎住。然后他说：小同学，你走吧。\n\n一个人宁可叫自己思想的器官混入别人鞋底的微尘，这种气魄实出我想象之外。\n\n我叫起来：“别 × 你那亲爱的……”我本想说“× 你妈”。又想到是校长，就改了口：“我的意思是说，我很尊敬您的妈。你说说看，凭什么叫我去看护他？”\n\n因为伤心被这种程式消化了。这种种程式就是高级智能。因为有了这种种程式，好多东西失去了它本来的意义——连死都不真了。\n\n虽然贺先生死时还蒙有不白之冤，但在他生前死后，我从没对他有过不敬之心。相反，我对他无限祟拜，无限热爱。不管别人怎么说他（反动学术权威、国民党官僚等等），都不能动摇我的敬爱之心。在我心中，他永远是那个造成了万人空巷争睹围观的伟大场面的人。\n\n这老头子在棋盘上老悔棋，明明下不过，却死不认输。\n\n我要抱着草长马发情的伟大真诚去做一切事，而不是在人前羞羞答答的表演。在我看来，人都是为了要表演，失去了自己的存在。\n\n但是线条没有这么做。她做了另外的决定，所以现在她的户口本上户主一栏上写着李先生的名字，线条那一栏里写着，李某某之妻。这十足肉麻，做了这个决定之后，她就完全堕落了。 在似水流年里线条做了这样的决定，要作龟头血肿之妻，永不反悔。对此我完全不能理解。但是，只要李先生不死，这事不会改变。虽然岁月如流，什么都会过去，但总有些东西发生了就不能抹煞。\n\n我的生活就是这样，到了四十岁，还得装丫挺的。我就像我的小和尚，被装进了中号，头也伸不直，小的时候，我头发有三个旋（三旋打架不要命——王二注），现在只剩了一个，其他的两个谢掉了。往日的勇气，和那两个旋儿一道谢光。反正去日无多，我就和别人一样，凑合着过吧。\n\n“照你这么说，我还真得去了。我爸爸病了，我要去陪，说用不着我。这老姚算个什么东西，居然要抢我爸爸上风！我还要给他擦屁股，真跌份儿！我什么时候去？”\n\n并不是每一个人都有幸生为毡巴，并且有一个王二爱他爱到要死的，所以他也是中了一个大彩\n\n她对小转铃说，人生是一条寂寞的路，要有一本有趣的书来消磨旅途。我爸爸这本书无聊之极，叫她懊悔当初怎么挑了这么一本书看。她羡慕铃子有了一本好书，这种书只有拿性爱做钥匙才能打得开\n\n到了这个时候我才悟到，犯不着向人证明我存在。\n\n这件事情告诉我们：写小说不可以用真名，尤其是小说里的正面人物。所以在本书里，没有一个名字是真的。小转铃可能不是小转铃，她是永乐大钟。王二不是王二，他是李麻子。矿院不是矿院，它是中山医学院。线条也不是线条，她是大麻包。李先生后来去的地方，也可能不是安阳，而是中国的另一个地方。人名不真，地点不真，唯一真实的是我写到的事。不管是龟头血肿还是贺先生跳楼，都是真的，我编这种事干什么？\n\n我想到，用不着写诗给别人看，如果一个人来享受静夜，我的诗对他毫无用处。别人念了它，只会妨碍他享受自己的静夜诗。如果一个人不会唱，那么全世界的歌对他毫无用处；如果他会唱，那他一定要唱自己的歌。这就是说，诗人这个行当应该取消，每个人都要做自己的诗人。\n\n在这里，什么验证都得不到。因为没有神像，没有字迹，什么都没有。正因为如此，李先生对这庙的存在才坚信不疑。\n\n指标这种东西，是一切浪漫情调的死敌。\n\n“欢迎您来上厕所！生物室宣。” 小便池上方贴的是“请上前一步——生物室郑重邀请。” 厕所门背后是：“再见。我们知道您留恋这优美的环境，可现在是工作时间。何日君再来？生物界同仁恭送。” 隔间里的标语各有特色。男厕所里写着：“大珠小珠落玉盘”，“一片冰心在玉壶”。女厕所里写着：“花径不曾缘客扫，蓬门今始为君开”。还有额匣，“暗香亭”。\n\n当然，这个办法很过时，当时时兴的是学一段毛主席语录。但是他想到自己疼痛的部位几乎就在屁眼里，就觉得用毛主席语录止疼是一种亵渎\n\n现在我对这些事倒有点明白了。假如在革命时期我们都是玩偶，那么也是些会思想的玩偶。X 海鹰被摆到队列里的时候，看到对面那些狠心的鬼子就怦然心动。但是她没有想到自己是被排布成阵，所看到的一切都是出于别人的摆布。所以她的怦然心动也是出于别人的摆布。她的一举一动，还有每一个念头都是出于别人的摆布。这就是说，她从骨头里不真。想到了这一点，我就开始阳痿了。\n\n而且我也明白，刘老先生怕死，那是再自然也没有的事，他在世上什么都没有了，只有最后的日子。\n\n一方面是因为我太淘气，另一方面因为我是走火造出来的，他老不相信我是个正经东西。\n\n中国教员见了这副景象，个个脸色苍白。那些西装革履手提皮箱的外籍教员见了，却高叫道：李太太——！fucking！——good！！一个个把领带往后一掉，好像要上吊似的，就跟在后面跑出来。\n\n他就那么一圈圈地转着，嘴里“呃呃”的叫唤。大夏天的，我觉得冷起来了，心里爱莫能助地想着：瞧着吧，已经只会发元音，不会发辅音了。\n\n让我们刷厕所，又不准有幽默感，真他娘的假正经。\n\n更难得的是任劳任怨，对国家，对党毫无怨言，真是好同志，应该发展他入党。但是李先生说，他背着龟头血肿的恶名，恐怕给党抹黑——还是等等吧。\n\n她知道是因为她，但为什么这样，她一点不理解。\n\n我妈救我到医院，先送我到耳科，看看耳朵坏了没有。大夫对我的耳朵叹为观止，认为这不是耳朵，乃是起重机的吊钩。\n\n我说：你们他妈的找去！老子是知青！那人一听又缩了回去，知道全是亡命之徒，谁也不敢惹。\n\n似水流年是一个人所有的一切，只有这个东西，才真正归你所有。其余的一切，都是片刻的欢娱和不幸，转眼间就已跑到那似水流年里去了\n\n他说农学系有人给他打电话，说王老师在课上不正常。他来给我量体温，看看是不是发高烧。我把张大夫撵出去，许由又朝我冷笑，我把他也撵出去。自己一个人坐着，什么都不想。\n我忽然觉得恶心，到校园里走走。我们的校舍是旧教堂改成。校园里有杂草丛生的花坛，铸铁的栏杆。学校有高高的铁皮房顶。我记不清楼里有多少黑暗的走廊，全靠屋顶一块明瓦照亮；有多少阁楼，从窗户直通房顶。古旧的房子老是引起我的遐想，走着走着身边空无一人。这是一个故事，一个谜，要慢慢参透。\n首先，房顶上不是生锈的铁皮，是灰色厚重的铅。有几个阉人，脸色苍白，身披黑袍，从角落里钻出来。校长长着长长的鹰钩鼻子，到处窥探，要保持人们心灵的纯洁。铸铁的栏杆是土耳其刑桩，还有血腥的气味，与此同时，有人在房顶上做爱。我见过的那只猫，皮毛如月光一样皎洁，在房顶上走过。\n你能告诉我这只猫的意义吗？还有那墙头上的花饰？从一团杂乱中，一个轮廓慢慢走出来。然后我要找出一些响亮的句子，像月光一样干净……正在出神，一阵铃响吵得我要抽风。这个故事就俺小王二一样，埋在半夜里的高粱地里了。\n我正好走在大电铃底下，铃声就在我头顶炸响。学生呐喊着从楼里冲出来，往食堂飞奔——这是中午的下班铃。\n\n后来我和 X 海鹰说起这件事，下结论道：当时那个人除了很疼之外，肯定还觉得如梦方醒。她听了以后呆头呆脑地问：什么梦？什么醒？但是我很狡猾地躲开了这个问题，说道：这个我也不知道——听说每个人临死时都是如梦方醒。\n\n所以，告诉你实话不妨。在干校的时候，我正在发懵懂，觉得自己着了别人的道儿。像我这样学科学方法的人，也有这种念头，实在叫人难以置信。\n\n不管你是谁，磨屁股你肯定不陌生。或者是有人把你按到了那个椅子上，单磨你的屁股，或者是一大群人一起磨，后一种情形叫做开会。总而言之，你根本不想坐在那里却不得不坐，这就叫磨屁股。我之所以是悲观主义者，和磨屁股有很大关系。\n\n走在大街上，汇入滚滚的人流，我想到三十三年前，我从我爸爸那儿出来，身边也有这么许多人，那一回我急急忙忙奔向前去。在十亿同胞中抢了头名，这才从微生物长成一条大汉。今天我又上路，好像又要抢什么头名，到一个更宏观的世界里去长大几亿倍。假如从宏观角度来看，眼前这世界真是一个授精的场所，我这么做也许不无道理，但是我无法证明这一点。就算真是如此，能不能中选为下一次生长的种子和追名求利又有什么关系？事实上，我要做个正经人，无非是挣死后塞入直肠的那块棉花。\n\n那里的人习惯于把一切不是破鞋的人说成破鞋，而对真的破鞋放任自流。\n\n这是他的似水流年，不是我的。岁月如流，就如月在当空，照着我们每一个人，但是每个人的生活都不一样。\n\n既然碰上了这样的非自然力，还是乖乖屈服为好，免得吃更大的苦头。李先生在干校里的事就是这样。\n\n但是我们成为别人手里的泥人却不是自己的责任。\n\n你能告诉我这只猫的意义吗？还有那墙头上的花饰？从一团杂乱中，一个轮廓慢慢走出来。然后我要找出一些响亮的句子，像月光一样干净……正在出神，一阵铃响吵得我要抽风。这个故事就俺小王二一样，埋在半夜里的高粱地里了。\n\n刘老先生并不笨，矿院的老人都知道，此人绝顶的聪明。他是故意装出一副傻样，久而久之弄假成真。所以我就去问他：老头，干嘛不要脸面？他马上回答：顾不上了！\n\n小时候我去逮蜻蜓，把逮到的蜻蜓都放到铁纱窗做的笼子里放着，然后再逐一把它们捉出来电死。没被电到的蜻蜓都对正在死去的蜻蜓漠然视之。因此我想到，可能蜻蜓要到电流从身上通过时，才知道中了头彩，如梦方醒吧。\n\n出这主意的那位首长，后来生了个孩子没屁眼，是我妈动手术给孩子做了个人工肛门。这个故事告诉我们，随着医学的发展，干点缺德事不要紧，生孩子没屁眼可以做人工肛门，怕什么？\n\n外面刮着极大的黄风，天地之间好似煮沸了的一锅小米粥一样。\n\n这是因为，在横死面前无动于衷，不是我的本性。\n\n李先生后来说，他觉得那时候自己快发疯了。一方面，他不脱科学方法论的积习，努力辨认眼前的事，前因如何，后果如何，如何发生，如何结束，尽量给出一个与印度师兄无关的解释。另一方面，不管他怎么努力，最后总要想到印度人身上去。到了这时，就觉得要发疯：想想看，我们俩同窗数年，感情不错，他竟如此害我！唯一能防止他疯掉的，是他经常在心里长叹一声说：唉！姑妄听之吧。然后就什么也不想了。\n\n现在他们直勾勾地看着我，千夫所指，无疾而死，这节课下来不知要掉多少头发。我\n\n贺先生死了，死时直挺挺。刘老先生死了，死前想吃一只鸭。我在美国时，我爸爸也死了，死在了书桌上，当时他在写一封信，要和我讨论相对论。虽然死法各异，但每个人身上都有足以让他们再活下去的能量。我真希望他们得到延长生命的机会，继续活下去。我自己也再不想掏出肠子挂在别人脖子上。\n\n大家对这种明火执仗的破鞋行径是如此的害怕，以致连说都不敢啦。\n\n有关这件事，我现在有看法如下：既然人饿了就要吃饭，渴了就要喝水，到了一定岁数就想性交，上了会场就要发呆，同属万般无奈；所以吃饭喝水性交和发呆，都属天赋人权的范畴。假如人犯了错误，可以用别的方法来惩办，却不能令他不发呆。如不其然，就会引起火灾。\n\n而老鲁气得要发疯，嘴角流出了白沫。但这只是事情的一面。事情的另一面是我找着了一块铜版纸，画那条领子时，心里伤心得要命，甚至还流了眼泪。这很容易理解，我想要当画家，是想要把我的画挂进世界著名画廊，而不是给自己画领子。领子画得再好又有什么用？我说这些事，是要证明自己不是个二百五，只要能用假领子骗过老鲁，得意一时就满足了。我还在忧虑自己会有什么样的前途。而老鲁也不是个只想活撕了我的人。每个人都不是只有一面。\n\n不屙而获\n\n她又矮又肥，两人并肩坐时，还会放出肥人的屁来，可以结结实实臭死人。\n\n中年妇女在中国是一种自然灾害，这倒不是因为她们不好看（我去过外国，中国的中年妇女比外国中年妇女长得好看——王二注），而是因为她们故意要恶心人！\n\n我听说有人做了个研究，发现大杂院里的孩子学习成绩差，容易学坏，都是因为看见了这些东西，对生活失去了信心。我没有因此学坏，这是因为我已经很坏，我只是因此不太想活了。\n\n每天晚上睡觉之前我都给自己安排一种死法，每种死法都充满了诗意。想到这些死法，我的小和尚就直挺挺。\n","tags":["读书"],"categories":["记录"]},{"title":"房思琪的初恋乐园","url":"/posts/fab8d004.html","content":"\n◆ 第一章 乐园\n\n> 怡婷浮出笑，唇语说：“真难看。”思琪本来想回，你才难看。话到了嘴边，和糖一起吞回去，因为说的怡婷，那就像真骂人。\n\n> 席上每个人的嘴变成笑声的泉眼，哈字一个个掷到桌上。关于逝去青春的话题是一种手拉手踢腿的舞蹈，在这个舞蹈里她们从未被牵起，一个最坚贞的圆实际上就是最排外的圆。\n\n> 连阳光都像聋哑人的语言，健康的人连感到陌生都不敢承认。\n\n> 出租车顶被照得黄油油的，焦灼她的脸颊\n\n<!-- more -->\n\n◆ 第二章 失乐园\n\n> 新娘子走进来了，那么年轻、那么美，她们两个的文字游戏纷纷下马，字句如鱼沉，修辞如雁落。\n\n> 伊纹笑到身体跌出衣服\n\n> 新的拳脚打在旧的伤上，色彩斑斓得像热带鱼\n\n> 只有在淋浴间，哭声才不会走出去，说闲话。\n\n> 她们脸上养着的笑意又醒过来，五官站在微笑的悬崖，再一步就要跌出声来。\n\n> 顽皮这词多美妙，没有一个超过十四岁的人穿得进去\n\n> 那点头全是心有旁骛的人所特有的乖顺。\n\n> 李老师背着一身的光，只看得见他的头发边沿和衣服的毛絮被灯光照成铂色的轮廓，还有胁下金沙的电风扇风，他的面目被埋在阴影里看不清楚，轮廓茸茸走过来。\n\n> 她没有一点空隙寸断在他身上\n\n> 刚刚在饭桌上，思琪用面包涂奶油的口气对妈妈说：“我们的家教好像什么都有，就是没有性教育。”妈妈诧异地看着她，回答：“什么性教育？性教育是给那些需要性的人。所谓教育不就是这样吗？”思琪一时间明白了，在这个故事中父母将永远缺席，他们旷课了，却自以为是还没开学。\n\n> 思想伸出手就无力地垂下来。\n\n> 思琪感觉脸都锈了，只有眼睛在发烧。\n\n> 伊纹姐姐掀开譬喻的衣服，露出譬喻丑陋的裸体\n\n> 思琪说：“姐姐，我不知道决定要爱上一个人竟可以这么容易。”\n\n> 我在爱情，是怀才不遇。\n\n> 我是馊掉的橙子汁和浓汤，我是爬满虫卵的玫瑰和百合，我是一个灯火流丽的都市里明明存在却没有人看得到也没有人需要的北极星。那些男生天真而蛮勇的喜欢是世界上最珍贵的感情。\n\n思琪她们搬到台北之后，李国华只要在台北，几乎都会来公寓楼下接思琪。每次和老师走在路上，尽管他们从来不会牵手，思琪都感觉到虎视的观众：路人、柜台服务生、路口广告牌上有一个一口洁白牙齿的模特——风起的时候，帆布广告牌掀开一个个倒立的防风小三角形，模特一时缺失了许多牙齿，她非常开心。老师问她笑什么，她说没事。\n上台北她不想看一〇一，她最想看龙山寺。远远就看到龙山寺翘着飞檐在那里等着。人非常多。每个人手上都拿着几炷香，人往前走的时候，烟往后，往脸上扑，仿佛不是人拿着香，而是跟着香走。有司姻缘的神，有司得子的神，有司成绩的神，有司一切的神。思琪的耳朵摩擦着李国华衬衫的肩线，她隐约明白了这一切都将永远与她无关。他们的事是神以外的事。是被单蒙起来就连神都看不到的事。\n高中时期她不太会与人交际，人人传说她自以为清高，唯一称得上朋友的是怡婷，可是怡婷也变了。可是怡婷说变的是她。她不知道那是因为其他小孩在嬉闹的时候有个大人在她身上嬉闹。\n\n> 忠孝节义像倾盆大雨淋着她。\n\n> 星期二要补习，每次骑车与你擦肩而过，渐渐地，前前后后的日子都沾了星期二的光，整个星期都灿烂起来。\n\n> 惊奇的是她们脱逃之后总有一番大义，死地后生，柏油开花，鲤跃龙门。一个人被监禁虐待了几年，即使出来过活，从此身份也不会是便利商店的常客，粉红色爱好者，女儿，妈妈，而永远是幸存者。\n\n> 他只草草说一句：“爱情本来就是有代价的。”她马上知道他又在演习他至高无上之爱情的演讲，又在那里生产名言，她不说话了。世界关成静音，她看着他躺在床上拉扯嘴型。\n\n> 楼下便利店外拔掉消音器的摩托车声，蒸腾到七楼就显得慈祥了。\n\n> 连脚底板也尝得到铁栏杆的血腥味道。\n\n她心想：只要松手，或是脚滑。后者并不比前者更蠢。高风把裙子吹胖，把裙上的花吹活。还活着的人都是喜欢活着的人吗？她非常难过，因为她就要死了。这时候，往下竟看见对面那公寓管理员又在看她，脚钉在地上，脖子折断似磕在后颈，也没有报警或喊叫的意思。仿佛他抬头看的是雨或是云。思琪心里只出现一个想法：这太丢脸了。马上爬回阳台，利落得不像自己的手脚。她才十六岁，可是她可以肯定这会是她人生最丢脸的一幕。\n\n在阳台肝肠寸断地哭，传了越洋短信给老师：“这爱让我好不舒服。”后来李国华回来了也并不对短信表示意见。老师是爱情般的死亡。爱情是喻依，死亡是喻体。本来，这个社会就是用穿的衣服去裁判一个人的。后来怡婷会在日记里会读到，思琪写了：“一个晚上能发生的事真多。”\n\n> 老师是爱情般的死亡。爱情是喻依，死亡是喻体。\n\n> 英文老师的眼镜颤抖得亦有贼意，\n\n> 中年妇人把他引进大客厅，右手臂戏剧化地荡开，一个个小姐如扇展开来。眼花缭乱。目不暇接。琳琅满目。目眩神摇。\n\n> 你一定可以原谅我开车从店里回家的路上，看到唯一被都市放过的一颗星星还亮着，就想到未完的稿子，想到未完的稿子就要熬夜，熬夜看见日出了还是要去店里，看着店里的电子行事历就在心里撕日历，就想到再一天就又可以看见你了。到最后我竟然看见星星就想到你，看见太阳也想到你。\n\n> 厚厚的沉默，翻来覆去的沉默，镶上金边的薄透圣经纸翻页的沉默\n\n> 你的睫毛在挠痒我的心，可是它没有格格笑，它痒得哭了。\n\n> 该说抱歉的是我，我说了令你困扰的话。可是想想，觉得自己给你带来困扰，这样的想法也好像在自抬身价。总之很抱歉。\n\n> 说‘为你好’太自以为是了\n\n> 不懂世界上竟有人在她哭之前就先哭了。\n\n> 随着时间开始腐烂，\n\n> 款式简单的婚戒长年不脱，紧箍着左手无名指，而皱纹深刻的指关节看起来比戒指更有承诺的意味\n\n> 她的心给摔破了，心没有纹理花样，再拼不起来。\n\n> 她白得像一片被误报了花讯的樱花林，人人提着丰盛的野餐篮，但樱花早已全部被雨水打烂在地上，一瓣一瓣的樱花在脚下，花瓣是爱心形状，爱心的双尖比任何时候看起来都像是被爽约的缺口，而不是本来的形状。\n\n> “为什么这个世界是这个样子？为什么所谓教养就是受苦的人该闭嘴？为什么打人的人上电视上广告广告牌？姐姐，我好失望，但我不是对你失望，这个世界，或是生活、命运，或叫它神，或无论叫它什么，它好差劲，我现在读小说，如果读到赏善罚恶的好结局，我就会哭，我宁愿大家承认人间有一些痛苦是不能和解的，我最讨厌人说经过痛苦才成为更好的人，我好希望大家承认有些痛苦是毁灭的，我讨厌大团圆的抒情传统，讨厌王子跟公主在一起，正面思考是多么媚俗！可是姐姐，你知道我更恨什么吗？我宁愿我是一个媚俗的人，我宁愿无知，也不想要看过世界的背面。”\n\n> 怡婷的脸像个辽阔的战场，小雀斑是无数闷烧的火堆。\n\n> 你对我就像我对一维一样。这是爱情永不俗滥的层递修辞。\n\n> 原来，人对他者的痛苦是毫无想象力的，一个恶俗的语境——有钱有势的男人，年轻貌美的小三，泪涟涟的老婆——把一切看成一个庸钝语境，一出八点档，因为人不愿意承认世界上确实存在非人的痛苦，人在隐约明白的当下就会加以否认，否则人小小的和平就显得坏心了。在这个人人争着称自己为输家的年代，没有人要承认世界上有一群女孩才是真正的输家。那种小调的痛苦其实与幸福是一体两面：人人坐享小小的幸福，嘴里嚷着小小的痛苦——当赤裸裸的痛苦端到他面前，他的安乐遂显得丑陋，痛苦显得轻浮。\n\n> 不知道他是多绝望或多乐观才这样再三向一个深不见底的幽谷投石子。\n\n> 说的陪字，出口了马上后悔，不尊重伊纹姐姐对伤痛的隐私权利。\n\n◆ 第三章 复乐园\n\n> 毛毛发现自己的心下起大雨，有一只湿狗一跛一跛哀哀在雨中哭。毛毛低声说：“我出门了。”门静静地关起来，就像从来没有被开过。\n\n> 我们都是学艺术的人，可是我犯了艺术最大的禁忌，那就是以谦虚来自满。我不该骗自己说能陪你就够了，你幸福就好了，因为我其实想要更多。我真的很爱你，但我不是无私的人，很抱歉让你失望了。”\n\n> 就好像记忆的胶卷拉成危险的黄布条。\n\n> 你有选择——像人们常常讲的那些动词——你可以放下，跨出去，走出来，但是你也可以牢牢记着，不是你不宽容，而是世界上没有人应该被这样对待。\n\n> 忍耐不是美德，把忍耐当成美德是这个伪善的世界维持它扭曲的秩序的方式，生气才是美德。\n\n> 张太太把手围在李老师耳边，悄声说：“我就说不要给小孩子读文学嘛，你看读到发疯了这真是，连我，连我都宁愿看连续剧也不要看原著小说，要像你这样强壮才能读文啊，你说是不是啊？”\n\n◆ 后记\n\n> “文学是最徒劳的，且是滑稽的徒劳。写这么多，我不能拯救任何人，甚至不能拯救自己。这么多年，我写这么多，我还不如拿把刀冲进去杀了他。真的。”\n\n> “我怕消费任何一个房思琪。我不愿伤害她们。不愿猎奇。\n","tags":["读书"],"categories":["记录"]},{"title":"沉默的大多数","url":"/posts/ea21d52f.html","content":"\n首先就是：我要反对愚蠢。一个只会明辨是非的人总是凭胸中的浩然正气做出一个判断，然后加上一句：难道这不是不言而喻的吗？\n\n恕我直言，能够带来思想快乐的东西，只能是人类智慧至高的产物。比这再低一档的东西，只会给人带来痛苦；而这种低档货，就是出于功利的种种想法。\n\n<!-- more -->\n\n假设历史上曾有一位大智者，一下发现了一切新奇、一切有趣，发现了终极真理，根绝了一切发现的可能性，我就情愿到该智者以前的年代去生活。这是因为，假如这种终极真理已经被发现，人类所能做的事就只剩下了依据这种真理来做价值判断。从汉代以后到近代，中国人就是这么生活的。我对这样的生活一点都不喜欢。\n\n在一切价值判断之中，最坏的一种是：想得太多、太深奥、超过了某些人的理解程度是一种罪恶。\n\n◆ 沉默的大多数\n\n这使我不敢与他争辩——再争辩就要涉入某些话语的范畴，而这些话语，就是阴阳两界的分界线。\n\n和任何话语相比，饥饿都是更大的真理。\n\n◆ 花剌子模信使问题\n\n我上大学时，老师教诲我们说，搞现代史要牢记两个原则，一是治史的原则，二是党性的原则。这就是说，让历史事实按党性的原则来发生。\n\n◆ 理想国与哲人王\n\n举例来说，尼采先生的结论对一切非受虐狂的女性就很严重；就这句话而论，我倒希望他能活过来，说一句“我是开个玩笑”，然后再死掉。当然，我也盼着中国古代的圣人活过来，把存天理灭人欲、饿死事小失节事大之类的话收回一些。\n至于我自己，总觉得生活的准则、伦理的基础，都该是些可以自明的东西。假如有未明之处，我也盼望学者贤明的意见，只是这些学者应该像科学上的前辈那样以理服人，或者像苏格拉底那样，和我们进行平等的对话。假如像某些哲人那样讲出些晦涩、偏执的怪理，或者指天划地、口沫飞溅地做出若干武断的规定，那还不如让我自己多想想的好。不管怎么说，我不想把自己的未来交给任何人，尤其是哲人王。\n\n◆ 二\n\n从孔孟到如今，中国的哲学家从来不挑担、不推车。所以他们的智慧从不考虑降低肉体的痛苦，专门营造站着说话不腰疼的理论\n\n◆ 三\n\n有种东西，我们说它是崇高，是因为反对它的人都不崇高。\n\n◆ 弗洛伊德和受虐狂\n\n弗洛伊德对受虐狂的成因有这样一种解释：人若落入一种无法摆脱的痛苦之中，到了难以承受的地步，就会把这种痛苦看做是幸福，用这种方式来寻求解脱——这样一来，他的价值观就被逆转过来了。\n\n◆ 椰子树与平等\n\n人人理应生来平等，这一点人人都同意。但实际上是不平等的，而且最大的不平等不是有人有椰子树，有人没有椰子树。\n\n◆ 关于崇高\n\n事实上，有些崇高是人所共知的虚伪，这种东西比堕落还要坏。\n\n在煽情的伦理流行之时，人所共知的虚伪无所不在；因为照那些高调去生活，不是累死就是饿死——高调加虚伪才能构成一种可行的生活方式。\n\n◆ 盛装舞步\n\n既然谁都不明白谁在说些什么，就应该互不答理才对。\n\n◆ 我看“老三届”\n\n罗素先生曾说，真正的伦理原则把人人同等看待。我以为这个原则是说，当语及他人时，首先该把他当个寻常人，然后再论他的善恶是非。这不是尊重他，而是尊重“那人”，从最深的意义上说，更是尊重自己——所有的人毕竟属同一物种。人的成就、过失、美德和陋习，都不该用他的特殊来解释。You are special，这句话只适于对爱人讲。假如不是这么用，也很肉麻。\n\n◆ 生活和小说\n\n因为生活对我来说，不是算草纸，可以说撕就撕，所以到后来我不再上山下乡时，已经老了好多。但是我的生活对于某些人来说却的确是算草纸，可以拿来乱写乱画。\n\n不管怎么说，有趣的事多少都带点毛病，不信你看有趣的纪实文学，总是和犯罪之类的事有关系。假如这些纪实文学记的都是外国，那倒是无所谓，否则不是好现象。至于小说越来越不好看，则有另外的原因。这是因为有人要求它带有正确性、合理性、激励人们向上等等，这样的小说肯定无趣。换言之，那些人用现实所应有的性质来要求小说、电影等等。我听人说，这样做的原因是小说和电影比现实世界容易管理，如此说来，这是出于善良的动机，正如堂吉诃德挑风车也是出于善良的动机。但是这样做的结果却很不幸。因为现实世界的合理性里就包括有有趣的小说和电影，故而这样做的结果是使现实世界更加不合理了。\n\n◆ 小说的艺术\n\n诚然，作为一个人，要负道义的责任，憋不住就得说，这就是我写杂文的动机。所以也只能适当克服，还不能完全克服。\n\n◆ 萧伯纳的《巴巴拉少校》\n\n斯泰芬可以指出造大炮是残忍的，可以指出做买卖斤斤计较是下流的，世界在他那里是无比简单的，是非都写在每件东西上，写在每一个人脸上。世界上绝不存在一个能把他难倒的难题。\n这些品质是他过的那种生活的产物，教育只是其中一个侧面而已，他什么也不要想，什么也不用记，只要过这种生活，品质就自然地形成啦。也可以说，这种品质不是知识，不是学问，只是一种情绪罢了。\n可以这样说，接受了一个伦理的体系不过达到了小学四年级的水平，而接受一个真理的体系就难得多，人们毕生都在学习科学，接触社会。人们知道得越多，明辨是非就越困难。\n在一个伦理的体系之中，人们学会了把事物分成好的与坏的、对的与错的、应该发生的和不应该发生的，这样的是非标准对我们了解世界是有不良影响的。科学则指出事物存在和不存在、发生和不发生，这些事实常常与那些道德标准冲突。不该发生的事情发生了，如果我们承认它，就成了精神上的失败者。如果我们不承认它，那么我们就失去了一个认识世界的机会。事实上很多人为了这种精神上的胜利，就被永远隔绝在现实世界之外。\n\n◆ 个人尊严\n\n假如我看到火车上特别挤，就感慨一声道：这种事居然可以发生在中华人民共和国的土地上！假如我看到厕所特脏，又长叹一声：唉！北京市这是怎么搞的嘛！这其中有点幽默的成分，也有点当真。我的确觉得国家和政府的尊严受到了损失，并为此焦虑着。当然，我自己也想要点个人尊严，但以个人名义提出就过于直露，不够体面——言必称天下，不以个人面目出现，是知识分子的尊严所在。当然，现在我把这作为虚伪提出，已经自外于知识分子。但也有种好处，我找到了自己的个人面目。有关尊严问题，不必引经据典，我个人就是这么看。但中国忽视个人尊严，却不是我的新发现。从大智者到通俗作家，有不少人注意到一个有中国特色的现象。罗素说，中国文化里只重家族内的私德，不重社会的公德公益，这一点造成了很要命的景象。费孝通说，中国社会里有所谓“差序格局”，与己关系近的就关心，关系远的就不关心或少关心。\n\n一个人不在单位里、不在家里，不代表国家、民族，单独存在时，居然不算一个人，就算是一块肉。这种算法当然是有问题。\n","tags":["读书"],"categories":["记录"]},{"title":"李银河说爱情","url":"/posts/eb7bf1f5.html","content":"\n◆ 单身浪潮\n\n人的感情是流动的，有时的确会有审美疲劳，会有厌倦的感觉，究竟为什么一定要把两个人死死地拘禁在一起呢？为什么一定要建立你完全属于我、我仅仅属于你的归属关系呢？\n\n◆ 西方爱情观\n\n在古希腊，同性恋或者说同性之间的亲密关系，是非常普遍的社会实践。每一个少年，都会有一个师傅，来教他各种技能，格斗技法、文化知识、修身养性等等，同时也是他的性伴。柏拉图就在劝这些成年人，要多关注少年的成长，注重精神的交流，少享用他们的肉体，不要让灵魂沾染上肉体的罪恶。所以后世就把两人之间的精神之恋叫作柏拉图式的爱情，这个词是这么来的。\n\n<!-- more -->\n\n尼采的意思是说，人们本来没有爱情这个观念，不过是异性之间一种很自然的生理欲望、性欲冲动，男人渴望女人，女人渴望男人。然而这种东西被压抑到可望而不可即的程度之后，就产生了一种叫作爱情的东西，一种浪漫的激情。因此，是基督教的反性禁欲把一个平平常常的，甚至丑陋的妇人，变成了风情万种的美女，把两性之间普普通通的性吸引变成了可歌可泣的爱情。\n\n13 世纪的欧洲，贵族阶层实行长子继承权制度。长子继承贵族的头衔，继承城堡、财产、土地。幼子或者次子什么都没有，于是他们骑着马浪迹天涯，来到一个城堡，看到窗帘后面有一位美丽的贵妇若隐若现，就开始幻想，可望而不可即，然后就弹琴唱赞歌、唱情歌，希望得到贵妇的青睐。据考证，这就是浪漫之爱的源头了，就是我们所说的 romantic love（罗曼蒂克之爱），一种浪漫的激情之爱。\n\n当性的对象突然变得容易得到了，不再是那么可望而不可即，人们从相识到变成老夫老妻也许只要几年、几个月，甚至几天，可望而不可即这种情形越来越少见，那爱情会不会就真的像尼采说的，不会再出现了？柏拉图式爱情是不是也会消失呢？\n\n◆ 一定要有爱才有性吗\n\n什么是社会建构论呢？这一理论比较艰深，我在这里稍加解释。福柯论述过这个思想，主要的意思是说，人的许多观念并不是由生理因素决定的，也不是人性中与生俱来的本质，而是由社会和文化建构而成的。\n\n◆ 《黄金时代》中的性与爱\n\n所以说，王小波想要表达的其实并不是性本身，而是通过写性，表达对那个压抑的时代的反抗，对想要控制人的环境的反抗。\n那这种反抗为什么要通过写性来表达呢？在我看来，这是因为性是最私人、最隐秘、完全属于个人快乐的一种自然冲动。也就是说，如果一个社会把人这个最基本、最自然的欲望都控制了的话，那么基本上就等于把这个人所有的自由都控制了，从身体到灵魂，完全禁锢了，你基本上就没有乱说乱动的可能了。\n\n◆ 中国人性观念的变迁\n\n一个合理的社会必定是性的自由最大化、性的压抑最小化的社会，它应当能够最大限度地满足人的性欲，能让人们得到最大限度的快乐。\n\n◆ 性脚本\n\n人类总是忍不住会认为自己的生活方式比别人的好，如果别人按照我们的方式生活，他们会生活得更好一些。我们总认为自己的生活模式是理所当然的，看不到其他族群的不同文化。有的人会希望向外输出我们的文化，甚至恨不得搞个文化殖民什么的。\n如果你懂得了性脚本，就会理解人类的性文化从来都是多种多样的，大家从来不是按照同一套脚本来生活的。我们在看到其他文化的性脚本时，一开始可能感到诧异、震惊，甚至恶心，但是如果我们能把这种感受平息下去，培养出一种对自己文化的分离意识，那就能通过对比不同的性脚本，来了解这些不同的脚本是如何导演了人的思想、语言和行动，就能用全新的视角认识和解释自己文化里的那些现象和经验。所谓不识庐山真面目，只缘身在此山中。你要想真正看清楚一件事情，就必须假想自己是个局外人，必须跳脱出来置身事外，才能看得清事情的真相。\n\n◆ 虐恋\n\n他提出的“快感的非性化”理论就是从虐恋实践中总结出来的。他认为，虐恋将性快感与生殖器官分离开来。在虐恋活动中，有时性快感可以完全脱离生殖器官来获得。福柯说：“它的另一个观念是把身体的所有部分都变成性的工具。”他由此提出了“快感的非性化”这一新概念。\n\n◆ 性癖好\n\n性癖好究竟是什么呢？一言以蔽之，它是极少数人与众不同的性唤起机制。换句话说，他非得有这个东西在场才能性唤起。\n\n◆ 性侵与性骚扰\n\n这个观点就是反对荡妇羞辱。什么叫荡妇羞辱呢？就是我侵害你，我对你施暴，虽然我不对，但是你也有错。你受害有你自己的原因，你穿得太暴露了，你的行为举止太不检点了，是你的行为勾引了我、诱发我犯罪。因为你是荡妇，所以我才侵害你。\n\n◆ 姐弟恋与跨代恋\n\n其实，所有的爱情，只要是存在的就是合理的；只要是发生了就是美好的。爱情一旦发生了，它就是正当的，它就是理直气壮的，它就是值得赞美、值得肯定的。\n\n◆ 如何提高性生活质量\n\n对于自慰，人们老要问，它是不是有害？是不是不好？它在道德上是不是有问题？正因为历史上存在过这样的做法、这样的习俗，它的威慑力还残存在人们的意识之中。由于这些习俗和观念如此野蛮和残酷，如此深入人心，使得许多现代人依旧认为：这个事怎么能做呢？太不好了。他们倒没有像 18 世纪的西方人那样认为会得什么病，但隐隐觉得这种做法在道德上似乎不太好。人们对自慰的这种负面看法是根深蒂固的，因为从周边的环境和习俗中都会感受到这种观念的影响。\n有一些特别保守的人，比如咱们中国有一个反色情网，他们就说，李银河居然认为自慰无害，居然宣扬自慰无害论。自慰无害不是我宣扬的一个理论，而是现代性学研究对自慰所做的科学结论。这些保守的观念还停留在 18 世纪，停留在科学不昌明的时代，是愚不可及的观念。现在科学已经证明，自慰快感过程与性交快感过程从解剖学上看是一模一样的，如果你硬要说自慰有害，那就等于说性交有害，按照这种观念，人就不要做爱了，性爱应当取消。这是非常荒谬的。\n\n性生活与美感有关。为什么这样说呢？一般来说，性行为在中国文化中处于一种特别尴尬的地位，说得不好听一点儿，中国人在性的问题上比较“变态”，也就是没有平常心。很多人认为，由于我们是文明的人，道德深厚，所以应当尽量远离各种动物性的活动，性活动就是很接近动物性的活动。可是人又有这种动物本能——中国人特别不愿承认这一点，社会和家庭又要通过这一活动来繁衍；中国人特别愿意强调生育动机，好像这才是为性活动“正名”。于是就很尴尬，就很变态，就没有了平常心。这就是为什么在中国我们会感到性活动或性活动中的某种形式、某些姿态是丑的，不喜欢这种活动的人有一种道德优越感，喜欢这种活动的人则有一种自甘堕落的放荡感。两种感觉其实都不正常，都缺少平常心，都缺少对人类这一自然活动的自然的美感。\n\n◆ 为什么无性婚姻越来越多\n\n除了这些努力，你还需要增加一点儿性生活中的神秘感。婚姻关系当中大多已经没有什么个人隐私了，就像有的网友说看着另一半在自己面前抠脚、上厕所不关门等等做派，就很消磨性的吸引力。如果你希望两个人彼此都能过得非常舒适放松，神秘感是难免要牺牲掉的，但是在家里要适当地注意自己的形象，无论是男是女，让自己更性感一点儿，更赏心悦目一些，对性生活还是有帮助的。\n\n◆ 性少数群体中的稳定关系\n\n在同性婚姻问题上，不管这个人群愿意选择婚姻还是否定婚姻，你有这个权利跟没这个权利还是不一样的。有了同性婚姻法案，你可以结婚也可以不结婚，这跟你完全没有结婚的权利是不一样的。争取到同性婚姻的权利之后，你可以有权不用，但是这个权利有还是没有，区别还是很大的。\n\n◆ 生育观念的变化\n\n我认为从文化转型的意义上看，自愿不育更深刻的原因是个人主义的理念增加，家庭主义的理念下降。\n\n◆ 如何看待中性化焦虑\n\n首先我们应该明白，所谓的男性气质和女性气质，完全是被我们所处的文化和社会建构起来的。就是说，即使男女两性确实存在着刻板印象中所说的那些差异，那也是由社会造成的，而不是两性的生理差异造成的。\n最合理的、最不压抑的状态是每个人的性别特质散落在色谱中间的任一点上。无论是比较靠近女性度的男人，还是比较靠近男性度的女性，都是不被压抑、不被指责的。正如一位性学家所言，这个世界上有多少人就有多少种性别。\n在这样的环境当中，可以让每个人的性别特质自自然然地落在色谱的任何地方，不必焦虑。我们每个人都可以自由地去做自己，胜任、愉快就好。如果你是一个偏中性化的人，那我希望你能自信地、勇敢地、大胆地成为自己喜欢的样子。对于整个社会来说，希望我们每个人对于不同的文化和现象的包容度都更大些。当有一天再也没有人用娘炮、女汉子这类词去指代别人的性别特征，当我们彻底消除这种偏见的时候，我们的社会就进步了，就变得更加合理了。\n\n◆ 性问题上的男女双重标准\n\n像木子美这样的人，她刚出来的时候，大家恨不得用唾沫把她淹死。她真的很勇敢。有人问我对木子美作何评价，我就说，当一个社会要改变一个风俗或者一个成见的时候，需要一些勇敢分子，木子美就属于这样的勇敢分子。她就是公开宣称喜欢性。我就是喜欢性怎么了？她有好多男伴，她也乐此不疲，她就是双重标准的挑战者。\n\n◆ 答问录\n\n我认为你的问题是病态自尊，太看重别人对自己的看法，太计较二人关系中的对等，如果自己付出的多，对方付出的少，就觉得自己的自尊心受到了伤害。解决的办法是要加强自己的独立性和自信心，因为病态自尊其实来自自卑。要尽量用一种独立和自信的态度生活，相信自己有独立的价值，不必依赖他人对自己的评价和重视程度。\n\n**自由主义的宽容精神体现在一句名言上面：我虽然不同意你的观点，但是誓死捍卫你发表观点的权利。**\n\n接纳自己的步骤首先是要喜欢自己——喜欢自己的身体、自己的灵魂、自己的欲望、自己的性格，然后才会喜欢别人，爱别人，和别人做爱。你现在之所以不能接受恋爱和做爱，就是因为你厌恶自己的欲望。\n\n**人其实比他以为的要自由得多（大意）。用我的话来说：你以为自己在监狱之中，其实你迈出这一步就获得了自由。**\n\n禁止乱伦和近亲结婚的理由主要不是因为这种关系中有受害人（违反当事人意愿），而是因为社会习俗的禁止。古今中外所有文明当中都有乱伦禁忌，其形成原因主要有两类：一是乱伦生育和近亲繁殖引起人种退化；二是母子生育和父女生育造成辈分混乱，伦理关系混乱。\n","tags":["读书"],"categories":["记录"]},{"title":"Angular模版变量","url":"/posts/2596249c.html","content":"\nAngular 根据你所声明的变量的位置给模板变量赋值：\n\n1. 如果在组件上声明变量，该变量就会引用该组件实例。\n\n2. 如果在标准的 HTML 标记上声明变量，该变量就会引用该元素。\n\n3. 如果你在 <ng-template> 元素上声明变量，该变量就会引用一个 TemplateRef 实例来代表此模板。\n\n4. 如果该变量在右侧指定了一个名字，比如 #var=\"ngModel\" ，那么该变量就会引用所在元素上具有这个 exportAs 名字的指令或组件。\n\n<!-- more -->\n\n例如：\n\n- 引用 DOM 元素\n\n  ```HTML\n  <input #phone placeholder=\"phone number\" />\n    <!-- lots of other elements -->\n    <!-- phone refers to the input element; pass its `value` to an event handler -->\n  <button (click)=\"callPhone(phone.value)\">Call</button>\n\n  ```\n\n  使用 # 声明模版变量引用 DOM 元素信息，在模版的其他地方可以直接使用\n\n- 引用 TemplateRef\n\n  ```HTML\n      <ng-container *ngTemplateOutlet=\"tableList\"></ng-container>\n      <ng-container [ngTemplateOutlet]=\"operateBar\"></ng-container>\n\n      <ng-template #tableList>\n        <!-- content -->\n      </ng-template>\n\n      <ng-template #operateBar>\n        <!-- content -->\n      </ng-template>\n  ```\n\n  在 <ng-template> 元素上声明模版变量，该变量就会引用一个 TemplateRef 实例来代表此模板，<ng-container> 的 ngTemplateOutlet 属性可以输出 TemplateRef\n\n- 引用指令\n\n  ```HTML\n  <form #itemForm=\"ngForm\" (ngSubmit)=\"onSubmit(itemForm)\">\n    <label for=\"name\">Name <input class=\"form-control\" name=\"name\" ngModel required />\n    </label>\n    <button type=\"submit\">Submit</button>\n  </form>\n\n  <div [hidden]=\"!itemForm.form.valid\">\n    <p>{{ submitMessage }}</p>\n  </div>\n  ```\n\n  itemForm 是对 NgForm 指令的引用，可以用它来跟踪表单中每一个控件的值和有效性。\n\n- 引用组件\n\n  ```HTML\n  <app-adding-contact #contactCom></app-adding-contact>\n\n  <button (click)=\"getChildInfo(contactCom)\">test</button>\n  ```\n\n  通过 getChildInfo() 方法父组件可以直接获取子组件信息\n\n注意：模版变量的作用域\n\n结构型指令(如 *ngIf 和 *ngFor 或 <ng-template> )会形成一个隐式模版，因此不可以在指令形成的模版外面访问其中的模版变量。但是子模版可以获取父模版的值。\n\n```HTML\n<!-- 子模版可以获取父模版的值 -->\n<input #ref type=\"text\" />\n<span *ngIf=\"true\">{{ref.value}}</span>\n<!-- 其包含的隐式模版 ↓↓ -->\n<ng-template [ngIf]=\"true\">\n  <span>ref.value</span>\n</ng-template>\n```\n\n```HTML\n<!-- 在模版外读取其内的模版变量不可行↓↓ -->\n<input *ngIf=\"true\" #ref type=\"text\" />\n<span>{{ref.value}}</span>\n\n```\n","tags":["Angular"],"categories":["program"]},{"title":"跨源资源共享（CORS）","url":"/posts/a5698217.html","content":"\n跨源资源共享 (Cross-Origin Resource Sharing)是一种基于 HTTP 头的机制，该机制通过允许服务器标示除了它自己以外的其它 origin（域，协议和端口），这样浏览器可以访问加载这些资源。跨源资源共享还通过一种机制来检查服务器是否会允许要发送的真实请求，该机制通过浏览器发起一个到服务器托管的跨源资源的“预检”请求。在预检中，浏览器发送的头中标示有 HTTP 方法和真实请求中会用到的头。\n\n<!-- more -->\n\n例如，运行在 localhost 端口的单应用框架在请求后端接口时，如果该接口的服务器没有标示 localhost 地址，就会产生跨域问题。\n\n#### 功能概述\n\n跨源资源共享标准新增了一组 HTTP 首部字段，允许服务器声明哪些源站通过浏览器有权限访问哪些资源。另外，规范要求，对那些可能对服务器数据产生副作用的 HTTP 请求方法（特别是 GET 以外的 HTTP 请求，或者搭配某些 MIME 类型的 POST 请求），浏览器必须首先使用 OPTIONS 方法发起一个预检请求（preflight request），从而获知服务端是否允许该跨源请求。服务器确认允许之后，才发起实际的 HTTP 请求。在预检请求的返回中，服务器端也可以通知客户端，是否需要携带身份凭证（包括 Cookies 和 HTTP 认证相关数据）。\n\n#### 简单请求\n\n某些请求不会触发 CORS 预检请求，称之为“简单请求”。若请求*满足所有下述条件*，则该请求可视为“简单请求”：\n\n- 使用下列方法之一：\n  GET\n  HEAD\n  POST\n- 手动设置的头部字段仅包含以下(同时 header 的 value 长度要满足小于 128)\n  Accept\n  Accept-Language\n  Content-Language\n  Content-Type （需要注意额外的限制）\n- Content-Type 的值仅限于下列三者之一：\n  text/plain\n  multipart/form-data\n  application/x-www-form-urlencoded\n\n例如站点 `http://foo.example` 的网页应用访问 `http://bar.other` 的资源\n\n```yaml\n    # 请求头\n    Origin: http://foo.example\n\n\n    # 响应头\n    Access-Control-Allow-Origin: *\n    Content-Type: application/xml\n```\n\n服务端返回的 Access-Control-Allow-Origin: \\* 表明，该资源可以被任意外域访问。\n\n#### 预检请求\n\n与前述简单请求不同，“需预检的请求”要求必须首先使用 OPTIONS 方法发起一个预检请求到服务器，以获知服务器是否允许该实际请求。“预检请求”的使用，可以避免跨域请求对服务器的用户数据产生未预期的影响。\n\n例如，现在通过 get 方法从服务器发送一个需要预检的请求\n\n_预检请求 OPTIONS_\n\n```yaml\n    # 请求头\n    Accept: */*\n    Accept-Encoding: gzip, deflate\n    Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\n    Access-Control-Request-Headers: authorization,content-type\n    Access-Control-Request-Method: GET\n    Origin: http://localhost:4200\n    Referer: http://localhost:4200/\n    Sec-Fetch-Mode: cors\n\n\n    #响应头\n    Access-Control-Allow-Credentials: true\n    Access-Control-Allow-Headers: Origin, Content-Type, Cookie, X-CSRF-TOKEN, Accept, Authorization, X-XSRF-TOKEN, X-Requested-With, enctype\n    Access-Control-Allow-Methods: GET, POST, PATCH, PUT, OPTIONS\n    Access-Control-Allow-Origin: http://localhost:4200\n    Access-Control-Expose-Headers: Authorization\n    Access-Control-Max-Age: 86400\n    Allow: GET,HEAD\n    Content-Type: text/html; charset=UTF-8\n\n```\n\n- 请求头中\n  首部字段 Access-Control-Request-Method 告知服务器，实际请求将使用 POST 方法。\n  \n  首部字段 Access-Control-Request-Headers 告知服务器，实际请求将携带两个自定义请求首部字段：X-PINGOTHER 与 Content-Type。服务器据此决定，该实际请求是否被允许。\n\n- 响应头中\n  首部字段 Access-Control-Allow-Methods 表明服务器允许客户端使用 POST, GET 和 OPTIONS 等方法发起请求。该字段与 HTTP/1.1 Allow: response header 类似，但仅限于在需要访问控制的场景中使用。\n  \n  首部字段 Access-Control-Allow-Headers 表明服务器允许请求中携带字段 Authorization。\n  \n  最后，首部字段 Access-Control-Max-Age 表明该响应的有效时间为 86400 秒，也就是 24 小时。在有效时间内，浏览器无须为同一请求再次发起预检请求。请注意，浏览器自身维护了一个最大有效时间，如果该首部字段的值超过了最大有效时间，将不会生效。\n\n_实际请求 GET_\n\n```yaml\n    #请求头\n    Accept: application/json\n    Accept-Encoding: gzip, deflate\n    Accept-Language: zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7\n    Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9...\n    Content-Type: application/json\n    Origin: http://localhost:4200\n    Referer: http://localhost:4200/\n\n\n\n    #响应头\n    Access-Control-Allow-Credentials: true\n    Access-Control-Allow-Headers: Origin, Content-Type, Cookie, X-CSRF-TOKEN, Accept, Authorization, X-XSRF-TOKEN, X-Requested-With, enctype\n    Access-Control-Allow-Methods: GET, POST, PATCH, PUT, OPTIONS\n    Access-Control-Allow-Origin: http://localhost:4200\n    Access-Control-Expose-Headers: Authorization\n    Content-Encoding: gzip\n    Content-Type: application/json\n    Vary: Accept-Encoding\n\n```\n\n- 请求头中\n  首部字段 Authorization 为自定义的首部字段\n\n#### withCredentials 属性\n\nCORS 请求默认不发送 Cookie 和 HTTP 认证信息。如果要把 Cookie 发到服务器，一方面要服务器同意，指定 Access-Control-Allow-Credentials 字段,`Access-Control-Allow-Credentials: true`。另一方面，开发者必须在 AJAX 请求中打开 withCredentials 属性。\n\n```JavaScript\nvar xhr = new XMLHttpRequest();\nxhr.withCredentials = true;\n```\n\n否则，即使服务器同意发送 Cookie，浏览器也不会发送。或者，服务器要求设置 Cookie，浏览器也不会处理。\n但是，如果省略 withCredentials 设置，有的浏览器还是会一起发送 Cookie。这时，可以显式关闭 withCredentials,`xhr.withCredentials = false;`\n\n需要注意的是，如果要发送 Cookie，Access-Control-Allow-Origin 就不能设为星号，必须指定明确的、与请求网页一致的域名。同时，Cookie 依然遵循同源政策，只有用服务器域名设置的 Cookie 才会上传，其他域名的 Cookie 并不会上传，且（跨源）原网页代码中的 document.cookie 也无法读取服务器域名下的 Cookie。\n\n#### HTTP 响应首部字段\n\n- Access-Control-Allow-Origin\n  `Access-Control-Allow-Origin: <origin> | *`\n  其中，origin 参数的值指定了允许访问该资源的外域 URI。对于不需要携带身份凭证的请求，服务器可以指定该字段的值为通配符，表示允许来自所有域的请求。\n\n- Access-Control-Expose-Headers\n  在跨源访问时，XMLHttpRequest 对象的 getResponseHeader()方法只能拿到一些最基本的响应头，Cache-Control、Content-Language、Content-Type、Expires、Last-Modified、Pragma，如果要访问其他头，则需要服务器设置本响应头。\n  让服务器把允许浏览器访问的头放入白名单\n  `Access-Control-Expose-Headers: X-My-Custom-Header, X-Another-Custom-Header`\n  这样浏览器就能够通过 getResponseHeader 访问 X-My-Custom-Header 和 X-Another-Custom-Header 响应头了。\n\n- Access-Control-Max-Age\n  `Access-Control-Max-Age: <delta-seconds>`\n  指定了 preflight 请求的结果能够被缓存多久,delta-seconds 参数表示 preflight 请求的结果在多少秒内有效。\n\n- Access-Control-Allow-Credentials\n  它的值是一个布尔值，表示是否允许发送 Cookie。默认情况下，Cookie 不包括在 CORS 请求之中。设为 true，即表示服务器明确许可，Cookie 可以包含在请求中，一起发给服务器。这个值也只能设为 true，如果服务器不要浏览器发送 Cookie，删除该字段即可。\n\n- Access-Control-Allow-Methods\n  于预检请求的响应。其指明了实际请求所允许使用的 HTTP 方法。\n\n- Access-Control-Allow-Headers\n  用于预检请求的响应。其指明了实际请求中允许携带的首部字段。\n\n#### HTTP 请求首部字段\n\n本节列出了可用于发起跨源请求的首部字段。请注意，这些首部字段无须手动设置。 当开发者使用 XMLHttpRequest 对象发起跨源请求时，它们已经被设置就绪。\n\n- Origin 表明预检请求或实际请求的源站。\n- Access-Control-Request-Method 用于预检请求，其作用是，将实际请求所使用的 HTTP 方法告诉服务器。\n- Access-Control-Request-Headers 用于预检请求，其作用是，将实际请求所携带的首部字段告诉服务器。\n\n---\n\n参考链接:\n[MDN-跨源资源共享](https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS)\n","tags":["杂识"],"categories":["program"]},{"title":"开发一个简单的Chrome插件","url":"/posts/4790295a.html","content":"\n现在需要开发一个浏览器插件将页面上的数据导出 excel 格式文件，JS 生成 Excel 表格可以使用 Sheet JS，官方支持各种框架，包括 Chrome Extension，只需要引入一个 Js 文件即可使用。\n下面拿维基百科上中国皇帝寿命列表开刀，试图通过插件导出这个数据表格。\n\n<!-- more -->\n\n- 于是先来列一个清单文件 manifest.json\n\n  ```json\n  {\n    \"background\": {\n      \"service_worker\": \"background.js\"\n    },\n    \"permissions\": [\"tabs\", \"downloads\"],\n    \"host_permissions\": [\"https://zh.wikipedia.org/wiki/\"],\n    \"content_scripts\": [\n      {\n        \"matches\": [\"https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E7%9A%87%E5%B8%9D%E5%AF%BF%E5%91%BD%E5%88%97%E8%A1%A8\"],\n        \"run_at\": \"document_end\",\n        \"js\": [\"js/contentScript.js\", \"js/xlsx.full.min.js\"]\n      }\n    ]\n  }\n  ```\n\n  将需要使用的 Sheet JS 文件 xlsx.full.min.js 在清单文件里列出，就可以在 Js 文件里直接使用了，因为需要下载导出的 Excel 文件，所以需要在权限里声明 download 权限，而 tabs 权限是用来向 content scirpt 通信。\n\n- popup 页面\n\n  ```html\n  <html>\n    <head>\n      <meta http-equiv=\"Content-Type\" content=\"text/html; charset=utf-8\" />\n      <link rel=\"stylesheet\" href=\"./css/popup.css\" />\n    </head>\n    <body>\n      <div class=\"content\">\n        <button>Export</button>\n      </div>\n    </body>\n    <script src=\"./js/popup.js\"></script>\n  </html>\n  ```\n\n- popup Js 文件\n\n  ```JavaScript\n  const button = document.querySelector('.content button');\n  button.addEventListener('click', () => {\n  chrome.tabs.query({ active: true, currentWindow: true }, (tabs) => {\n    chrome.tabs.sendMessage(tabs[0].id, 'export');\n  });\n  });\n\n  ```\n\n  监听 button 的点击事件，获取当前的活动窗口 tabId，向该活动窗口的 content script 发送消息\n\n- contentScript.js 文件\n\n  ```JavaScript\n  exportTable = () => {\n  const table = document.querySelector('table.wikitable');\n  const wb = XLSX.utils.book_new();\n  const ws = XLSX.utils.table_to_sheet(table, {\n    raw: true,\n    display: true,\n  });\n  XLSX.utils.book_append_sheet(wb, ws);\n  XLSX.writeFile(wb, '中国皇帝寿命');\n  };\n\n  chrome.runtime.onMessage.addListener((res) => {\n    if (res == 'export') {\n    exportTable();\n    }\n    });\n  ```\n\n  content script 监听到导出的消息就启动导出函数。\n\n  Sheet Js 有多种方法可以生成 excel 文件，table_to_sheet 是将页面的 table 表格转换成 sheet，只需要给定 table 元素就可以自动生成 sheet，对于非 table 元素的数据可以使用 json_to_sheet()，通过循环数据生成一个指定对象作函数参数。然后再将 sheet 添加到 workbook 里面。\n\n- background.js\n\n  ```JavaScript\n  chrome.runtime.onInstalled.addListener(function () {\n  chrome.action.disable();//禁止插件的action功能\n  chrome.declarativeContent.onPageChanged.removeRules(undefined, function () {\n    //声明只有在特定页面激活插件的action功能\n      chrome.declarativeContent.onPageChanged.addRules([\n      {\n          conditions: [\n          new chrome.declarativeContent.PageStateMatcher({\n              pageUrl: { urlContains: 'zh.wikipedia.org/wiki/' },\n          }),\n          ],\n          actions: [new chrome.declarativeContent.ShowPageAction()],\n      },\n      ]);\n  });\n  });\n\n  let currentTabId;\n  //监听浏览器加载动作\n  chrome.webNavigation.onCompleted.addListener(\n  (details) => {\n      currentTabId = details.tabId;\n  },\n  {\n      url: [\n      {\n          urlContains:\n          'https://zh.wikipedia.org/wiki/%E4%B8%AD%E5%9B%BD%E7%9A%87%E5%B8%9D%E5%AF%BF%E5%91%BD%E5%88%97%E8%A1%A8',\n      },\n      ],\n  }\n  );\n\n\n  chrome.runtime.onMessage.addListener((message) => {\n  if (message.delay && currentTabId) {\n      chrome.tabs.sendMessage(currentTabId, { delay: message.delay });\n  }\n  });\n\n  ```\n","tags":["Chrome Extention"],"categories":["program"]},{"title":"Hexo插件","url":"/posts/1562b2a5.html","content":"\n总结一下博客使用的 Hexo 插件,以及如何使用 Hexo 的 API 写一个自己的插件.\n\n- [hexo-abbrlink](https://github.com/rozbo/hexo-abbrlink) 为每一个 post 生成一个链接\n\n  ```yaml\n  # _config.yml文件\n  abbrlink:\n  alg: crc32 #support crc16(default) and crc32\n  rep: hex #support dec(default) and hex\n  drafts: false #(true)Process draft,(false)Do not process draft. false(default)\n  # Generate categories from directory-tree\n  # depth: the max_depth of directory-tree you want to generate, should > 0\n  auto_category:\n    enable: true #true(default)\n    depth: #3(default)\n    over_write: false\n  auto_title: false #enable auto title, it can auto fill the title by path\n  auto_date: false #enable auto date, it can auto fill the date by time today\n  ```\n\n  <!-- more -->\n\n- [hexo-all-minifier](https://github.com/chenzhutian/hexo-all-minifier) HTML,JS,CSS 以及图片压缩\n- [hexo-filter-nofollow](https://github.com/hexojs/hexo-filter-nofollow/) 自动为文章里的链接添加 nofollow 属性\n- [hexo-generator-search](https://github.com/wzpan/hexo-generator-search) 为文章生成搜索索引文件,不需要索引的文章在 markdown 里添加 indexing: false\n\n- 自定义插件的方法\n  因为 Hexo 在启动时会自动加载主题目录下 scripts 文件夹的 JS 文件,因此可以在这里直接使用 Hexo 提供的 API.\n\n  ```JavaScript\n  const pagination = require(\"hexo-pagination\");\n  hexo.extend.generator.register(\"words\", (locals) => {\n  const posts = locals.posts;\n  posts.data.sort((a, b) => b.date.unix() - a.date.unix());\n  const words = posts.filter((post) => {\n    const cate = post.categories.filter((cate) => cate.name === \"words\");\n    if (cate.length !== 0) {\n      return post;\n    }\n  });\n\n  return pagination(\"words\", words, {\n    perPage: 10,\n    layout: [\"index\"],\n    data: {},\n  });\n  });\n  ```\n\n  上面的代码注册了指向 /words 的路由,并且在该路由下仅显示分类名称为 words 的文章,使用分页工具将每页文章数量设置为 10,页面样式套用 index 模板.\n\n---\n\n参考链接:\n[Hexo API 文档](!https://hexo.io/zh-cn/api/)\n","tags":["Hexo"],"categories":["program"]},{"title":"JavaScript操作Dom元素","url":"/posts/3ff28d3c.html","content":"\n```HTML\n<div class=\"container\">\n    <div class=\"box\">1</div>\n    <div class=\"box\">2</div>\n    <div class=\"box\">3</div>\n</div>\n\n<script>\n  const box1 = document.querySelector(\".box:first-child\");\n  const box2 = document.querySelector(\".box:nth-child(2)\");\n  const box3 = document.querySelector(\".box:last-child\");\n  const subDiv = document.createElement(\"div\");\n  subDiv.setAttribute(\n        \"style\",\n        \"background:lightblue;width:200px;height:200px\"\n      );\n</script>\n\n\n```\n\n<!-- more -->\n\n- 节点 Node\n  Node 是一个接口，各种类型的 DOM API 对象会从这个接口继承。 包含 Document, Element, Attr, Text, Comment, DocumentFragment, DocumentType 等\n\n  Node.nodeName\n  返回一个包含该节点名字的 DOMString。节点的名字的结构和节点类型不同。比如 HTMLElement 的名字跟它所关联的标签对应，就比如 HTMLAudioElement 的就是 'audio' ，Text 节点对应的是 '#text' 还有 Document 节点对应的是 '#document'。\n\n  Node.nodeType\n  返回一个与该节点类型对应的无符号短整型的值,例如 ElementNode=>1 TextNode=>3 CommentNode=>8 DocumentNode=>9\n\n  ```JavaScript\n  const container=document.querySelector('.container')\n  console.log(container.nodeName) // 'DIV'\n  console.log(container.nodeType) // 1\n  console.log(container.childNodes) // [text, div.box, text, div.box, text, div.box, text]\n  console.log(container.childNodes[0].textContent) // '\\n      ' 换行\n\n  ```\n\n- insertBefore()\n\n  > Node.insertBefore() 方法在参考节点之前插入一个拥有指定父节点的子节点。如果给定的子节点是对文档中现有节点的引用，insertBefore() 会将其从当前位置移动到新位置(在将节点附加到其他节点之前，不需要从其父节点删除该节点。\n\n  > 这意味着一个节点不能同时位于文档的两个点中。因此，如果节点已经有父节点，则首先删除该节点，然后将其插入到新位置。在将节点追加到新父节点之前，可以使用 Node.cloneNode() 复制节点。注意，使用 cloneNode() 创建的节点副本不会自动与原始节点保持同步。\n\n  ```JavaScript\n    //在 box2 前插入新元素\n    box2.parentNode.insertBefore(subDiv, box2);\n    //在 box1 前插入 box3，box3 从原来的位置移动到新位置\n    box1.parentNode.insertBefore(box3, box1);\n  ```\n\n- after()\n\n  > Element.after() 方法会在其父节点的子节点列表中插入一些 Node 或 DOMString 对象。插入位置为该节点之后。DOMString 对象会被以 Text 的形式插入。如果给定的子节点是对文档中现有节点的引用,同样会将其从当前位置移动到新位置。\n\n  ```JavaScript\n  box2.after(subDiv);\n  ```\n\n- remove()\n\n  > Element.remove() 把对象从它所属的 DOM 树中删除。\n\n  ```JavaScript\n  box2.remove()\n  ```\n\n- replaceChild()\n\n  > Node.replaceChild() 方法用指定的节点替换当前节点的一个子节点，并返回被替换掉的节点。\n\n  ```JavaScript\n    //subDiv 替换 box2\n    box2.parentNode.replaceChild(subDiv, box2);\n    //box3替换 box1，box3 从原来的位置移动到 box1\n    box1.parentNode.replaceChild(box3, box1);\n  ```\n\n- append()\n\n  > Element.append 方法在 Element 的最后一个子节点之后插入一组 Node 对象或 DOMString 对象。\n\n  ```JavaScript\n    //按照顺序插入到container末尾，box2 位置移动\n    container.append(subDiv, box2);\n  ```\n\n- appendChild()\n\n  > Node.appendChild() 方法将一个节点附加到指定父节点的子节点列表的末尾处。如果将被插入的节点已经存在于当前文档的文档树中，那么 appendChild() 只会将它从原先的位置移动到新的位置（不需要事先移除要移动的节点）。\n\n  > 这意味着，一个节点不可能同时出现在文档的不同位置。所以，如果某个节点已经拥有父节点，在被传递给此方法后，它首先会被移除，再被插入到新的位置。若要保留已在文档中的节点，可以先使用 Node.cloneNode() 方法来为它创建一个副本，再将副本附加到目标父节点下。请注意，用 cloneNode 制作的副本不会自动保持同步。\n\n  ```JavaScript\n    container.appendChild(subDiv);\n    container.appendChild(box1);\n  ```\n\n- append() 与 appendChild() 差异：\n\n  > Element.append() 允许追加 DOMString 对象，而 Node.appendChild() 只接受 Node 对象。\n  > Element.append() 没有返回值，而 Node.appendChild() 返回追加的 Node 对象。\n  > Element.append() 可以追加多个节点和字符串，而 Node.appendChild() 只能追加一个节点。\n\n- documentFragment\n\n  > DocumentFragment，文档片段接口，一个没有父对象的最小文档对象。它被作为一个轻量版的 Document 使用，就像标准的 document 一样，存储由节点（nodes）组成的文档结构。与 document 相比，最大的区别是 DocumentFragment 不是真实 DOM 树的一部分，它的变化不会触发 DOM 树的重新渲染，且不会导致性能等问题。\n\n  > 最常用的方法是使用文档片段作为参数（例如，任何 Node 接口类似 Node.appendChild 和 Node.insertBefore 的方法），这种情况下被添加（append）或被插入（inserted）的是片段的所有子节点, 而非片段本身。因为所有的节点会被一次插入到文档中，而这个操作仅发生一个重渲染的操作，而不是每个节点分别被插入到文档中，因为后者会发生多次重渲染的操作。\n\n- cloneNode()\n  `const dupNode = node.cloneNode(deep);`\n  deep 是否采用深度克隆,如果为 true,则该节点所有后代节点也都会被克隆,如果为 false,则只克隆该节点本身，默认值为 false\n\n  > 克隆一个元素节点会拷贝它所有的属性以及属性值,当然也就包括了属性上绑定的事件(比如 onclick=\"alert(1)\"),但不会拷贝那些使用 addEventListener()方法或者 node.onclick = fn 这种用 JavaScript 动态绑定的事件.\n\n#### 示例\n\n1. 替换子元素的父元素(保留子元素)\n\n   ```JavaScript\n   const container=document.querySelector('.container')\n   const newFragment=document.createDocumentFragment()\n   const newDiv=document.createElement('div')\n\n   for(i=0;i<container.children.length;i++){\n   // 1. newFragment.append(container.children[i].cloneNode())\n   // 2. newDiv.append(container.children[i].cloneNode())\n   }\n\n   // 1. container.parentNode.replaceChild(newFragment,container)\n     <div class=\"box\">1</div>\n     <div class=\"box\">2</div>\n     <div class=\"box\">3</div>\n   // 2. container.parentNode.replaceChild(newDiv,container)\n     <div>\n       <div class=\"box\">1</div>\n       <div class=\"box\">2</div>\n       <div class=\"box\">3</div>\n     </div>\n   ```\n\n   如上，通过 createDocumentFragment()创建的 newFragment 片段通过 replaceChild()添加到文档之后，添加的是片段的所有子节点，而非片段本身。而且如此即是将三个子节点一起插入到文档。\n\n   另外在 for 循环通过 append 插入元素`newDiv.append(container.children[i].cloneNode())`，如果不克隆(cloneNode())该子元素的话，实际上插入的子元素只有 box1 和 box3。`newDiv.append(container.children[i])`在插入第一个子元素时，导致 box1 在原来的节点发生了移动，因此原来的 container 节点现在只剩下 box2 和 box3 两个元素。\n\n```JavaScript\nconst container = document.querySelector(\".container\");\nconst allBox = document.querySelectorAll(\".box\");\nfor (i = 0; i < allBox.length; i++) {\n  allBox[i].textContent = i;\n  const div = document.createElement(\"div\");\n  div.setAttribute(\"style\", \"border:1px solid green;width:100px;height:100px\");\n  if (i == 0) {\n    allBox[i].parentNode.insertBefore(allBox[i + 1], allBox[i]);\n  }\n  if (i == 1) {\n    // allBox[i].remove();\n  }\n  if (i == 2) {\n    allBox[i].after(allBox[i - 1].cloneNode(true));\n    // allBox[i].parentNode.replaceChild(div, allBox[i]);\n  }\n}\n\nconst table = document.querySelector(\"table\");\nconst trs = document.querySelectorAll(\"table tr\");\ntrs.forEach((tr, indextr) => {\n  const tds = tr.querySelectorAll(\"td\");\n  const divChild = tr.querySelectorAll(\"td:nth-child(2) div\");\n\n  if (divChild.length > 1) {\n    for (i = 0; i < divChild.length; i++) {\n      const newTr = document.createElement(\"tr\");\n      tds.forEach((td, indextd) => {\n        const child = td.querySelectorAll(\"div\");\n        if (child.length !== 0) {\n          const newTd = document.createElement(\"td\");\n          console.log(child[0].innerHTML);\n          newTd.append(child[i].cloneNode(true));\n          newTr.append(newTd);\n        } else if (i == 0) {\n          const newTd = document.createElement(\"td\");\n          td.parentNode.replaceChild(newTd, td);\n          newTd.append(td.textContent);\n          newTd.setAttribute(\"rowspan\", divChild.length);\n          newTr.append(newTd);\n        }\n        tr.parentNode.insertBefore(newTr, tr);\n      });\n    }\n    tr.remove();\n  }\n});\n```\n\n---\n\n参考链接:  \n[Node 节点](https://developer.mozilla.org/zh-CN/docs/Web/API/Node)\n","tags":["JavaScript"],"categories":["program"]},{"title":"JavaScript 备忘录","url":"/posts/9765cad4.html","content":"\n- 通过对象解构赋值在循环里取对象特定的属性\n\n  ```typescript\n  interface Data {\n    id: number\n    name: string\n    age: number\n  }\n  const students: Data = []\n  students.map(({ id }) => {\n    console.log(id)\n  })\n  ```\n\n<!--more-->\n\n- JS 可以直接使用 id 选择器的名字\n\n  ```html\n  <div id=\"vae\">大家好,我是vae</div>\n  <script>\n    console.log(vae)\n  </script>\n  ```\n\n- localStorage 存放和读取值的两种方式\n\n  ```JS\n  localStorage.setItem(\"theme\",'dark')\n  localStorage.getItem('theme')\n\n  localStorage.theme='dark'\n  localStorage.theme\n  ```\n\n- 原生 js 修改 css 样式\n\n  ```html\n  <body>\n    <div class=\"demo\" style=\"font-size: 20px\">\n      <h1>hello wrold</h1>\n    </div>\n    <script>\n      const demo = document.querySelector('.demo')\n      //1\n      demo.style.background = 'lightgray'\n      //2\n      demo.style.setProperty('background', 'lightcoral')\n      //3\n      demo.style.cssText = 'font-size:10px;color:blue;background:lightblue'\n      //4\n      demo.setAttribute('style', 'background:lightgreen;font-size:30px')\n    </script>\n  </body>\n  ```\n\n- every() 方法\n\n  every() 方法测试一个数组内的所有元素是否都能通过某个指定函数的测试。它返回一个布尔值。\n\n  > 注意：若收到一个空数组，此方法在一切情况下都会返回 true。\n\n- some() 方法\n  some() 方法测试数组中是不是至少有 1 个元素通过了被提供的函数测试。它返回的是一个 Boolean 类型的值。\n\n  > 如果用一个空数组进行测试，在任何情况下它返回的都是 false。\n\n- 清除所有的计时器\n\n  ```JavaScript\n  for(i=0; i<1000; i++) {\n    clearTimeout(i);\n    clearInterval(i)\n  }\n  ```\n\n- slice()方法\n  arr.slice([begin[, end]]) 返回一个新的数组对象，是一个由 begin 和 end 决定的原数组的浅拷贝（包括 begin，不包括 end）。原始数组不会被改变。\n  begin 和 end 的取值按照索引，从 0 开始。\n\n  ```JavaScript\n  const animals = ['ant', 'bison', 'camel', 'duck', 'elephant'];\n\n  //不指明begin和end会返回原始数组的拷贝值\n  animals.slice() //['ant', 'bison', 'camel', 'duck', 'elephant'];\n\n\n  //指明begin，从该索引值开始取到最后一个元素\n  animals.slice(3)//[ 'duck', 'elephant' ]\n  //begin为负数时，按照指定的倒数位置取到最后一个元素\n  animals.slice(-2)//[ 'duck', 'elephant' ]\n  animals.slice(-1)//['elepant']\n\n  //指明end，从begin取到end之前索引的元素，不包括end位置\n  animals.slice(0,1)//[ 'ant' ]\n  animals.slice(3,5)//[ 'duck', 'elephant' ]\n  //如果end是负数，并且倒数位置取到的元素仍在begin之后且存在，正常截取否则返回空数组\n  animals.slice(0,-1)//[ 'ant', 'bison', 'camel', 'duck' ]\n  anmails.slice(3,-1)//[ 'duck' ]\n  ```\n\n- splice()方法\n  array.splice(start[, deleteCount[, item1[, item2[, ...]]]]) 通过删除或替换现有元素或者原地添加新的元素来修改数组,并以数组形式返回被修改的内容。此方法会改变原数组。\n\n  start​\n  指定修改的开始位置（从 0 计数）。如果超出了数组的长度，则从数组末尾开始添加内容；如果是负值，则表示从数组末位开始的第几位；如果负数的绝对值大于数组的长度，则表示开始位置为第 0 位。\n\n  deleteCount 可选\n  整数，表示要移除的数组元素的个数。\n  如果 deleteCount 大于 start 之后的元素的总数，则从 start 后面的元素都将被删除（含第 start 位）。\n  如果 deleteCount 被省略了，或者超出 start 之后元素的数量，那么 start 之后数组的所有元素都会被删除。\n  如果 deleteCount 是 0 或者负数，则不移除元素。这种情况下，至少应添加一个新元素。\n\n  item1, item2, ... 可选\n  要添加进数组的元素,从 start 位置开始。如果不指定，则 splice() 将只删除数组元素。\n\n  ```JavaScript\n  const months = ['Jan', 'March', 'April', 'June'];\n\n  //省略删除数量，将会删除索引后的整个数组\n  months.splice(0) //返回值 ['Jan', 'March', 'April', 'June']\n  console.log(months) //[]\n  months.splice(1) // 返回值 ['March', 'April', 'June']\n  console.log(months) //['Jan']\n\n  months.splice(0,0,'abc','def','ghi') //返回值 []\n  console.log(months) //['abc','def','ghi','Jan','March','April','June']\n\n  months.splice(1,1,'abc','def') //返回值 [ 'March' ]\n  console.log(months) // ['Jan', ,'abc','def','April', 'June']\n  ```\n\n- reduce()方法\n\n  ```JS\n  //语法\n  arr.reduce((previousValue, currentValue, currentIndex, array) => { /* ... */ }, initialValue)\n  //previousValue上一次调用的返回值，如果是第一次调用并且没有指定初始值则为arr[0]\n  //currentValue当前处理的值，如果是第一次调用且没有指定初始值则为arr[1]\n  //currentIndex当前处理的索引，如果没有指定初始值，从索引1开始\n\n  const arrTest=[1,2,3,4,5,6]\n  arrTest.reduct((prev,curr)=>console.log(prev,curr))\n  /*\n    1 2\n    undefined 3\n    ....\n  */\n  arrTest.reduct((prev,curr)=>console.log(prev,curr),'dd')\n  /*\n    dd 1\n    undefined 2\n    ....\n  */\n  ```\n\n  [MDN-reduce](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/Reduce)\n\n- 通过 reduce 将对象数组中某些属性值相同的对象去重\n\n  ```JS\n    const newOrder = orderData.reduce((previous, current, index) => {\n    if (index == 0) {\n      previous.push(current);\n    } else {\n      const {name,contact,address } = newData;\n      const lastOrder = previous.slice(-1)[0];\n      const isSame=lastOrder['name'] == name && lastOrder['contact'] == contact && lastOrder['address'] == address\n      if (!isSame) {\n        previous.push(newData);\n      }\n    }\n    return previous;\n  }, []);\n  ```\n\n- 如何使循环中的异步调用同步次序执行 async/await\n\n  ```JS\n  const arr = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k'];\n  const test = async () => {\n  for (i = 0; i < arr.length; i++) {\n    await new Promise((resolve) => {\n      setTimeout(resolve, 2000);\n      console.log(arr[i]);\n    });\n  }\n  };\n  test();\n  ```\n\n  在 forEach 和 map 中使用 async/await 无效，forEach 没有返回值，而 map 返回的是一个 promise 数组。\n  可以通过上面的例子写一个 sleep 函数，在代码里实现等待效果，前提是支持 async/await 形式。\n\n  ```JS\n  const load = async () => {\n    for (i = 1; i <= 100; i++) {\n      await sleep(500);\n      console.log(i);\n      }\n  };\n\n  const sleep = (time) => {\n    return new Promise((resolve) => setTimeout(resolve, time));\n  };\n  ```\n\n- encodeURI()与 encodeURIComponent()\n\n  encodeURIComponent()转义除了 A-Z a-z 0-9 - \\_ . ! ~ \\* ' ( )的所有字符，而 encodeURI()会保留一些特殊和有意义的符合，以及数字字母。  \n   一般 encodeURI()用来可以用来转义简单 URL，encodeURIComponent()用来转义 URL 复杂参数。\n\n  ```JS\n  var set1 = \";,/?:@&=+$\";  // 保留字符\n  var set2 = \"-_.!~*'()\";   // 不转义字符\n  var set3 = \"#\";           // 数字标志\n  var set4 = \"ABC abc 123\"; // 字母数字字符和空格\n\n  console.log(encodeURI(set1)); // ;,/?:@&=+$\n  console.log(encodeURI(set2)); // -\\_.!~\\*'()\n  console.log(encodeURI(set3)); // #\n  console.log(encodeURI(set4)); // ABC%20abc%20123 (空格被编码为 %20)\n\n  console.log(encodeURIComponent(set1)); // %3B%2C%2F%3F%3A%40%26%3D%2B%24\n  console.log(encodeURIComponent(set2)); // -\\_.!~\\*'()\n  console.log(encodeURIComponent(set3)); // %23\n  console.log(encodeURIComponent(set4)); // ABC%20abc%20123 (the space gets encoded as %20)\n  ```\n\n  [MDN-encodeURIComponet](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/encodeURIComponent)\n\n- JS 原生获取 URL 中的参数\n\n  ```JS\n  const href='https://www.youtube.com/watch?v=Ttf3CEsEwMQ'\n  const videoId=new URL(href).searchParams.get('v')\n  console.log(videoId) // Ttf3CEsEwMQ\n  ```\n\n  [MDN-URL()](https://developer.mozilla.org/zh-CN/docs/Web/API/URL/URL)\n\n- JS 原生深拷贝方法 structuredClone()\n\n  ```JS\n    const person1 = { name: 'zhou', age: 43 };\n    const person2 = { name: 'li', age: 42, member: person1 };\n    const person3 = structuredClone(person2);\n    console.log(person3);\n    person1.name = 'wang';\n    console.log(person2.member); // {name: 'wang', age: 43}\n    console.log(person3.member); // {name: 'zhou', age: 43}\n  ```\n\n  [MDN-structuredClone()](https://developer.mozilla.org/zh-CN/docs/Web/API/structuredClone)\n\n- 字面量定义对象时，用表达式作为对象的属性名\n\n  ```JS\n    const keyName = 'name'\n\n    const obj = {\n      [keyName]: 'lijialong',\n    }\n  ```\n\n- 字符串与数字之间的转换\n\n  ```JS\n    const num = 123\n    const str = '123'\n\n    num + ''; //数字转字符串\n    + str; //字符串转数字\n\n  ```\n\n- 可选链式操作符 optional chains (?.)\n\n  > 可选链操作符 ( ?. ) 允许读取位于连接对象链深处的属性的值，而不必明确验证链中的每个引用是否有效。?. 操作符的功能类似于 . 链式操作符，不同之处在于，在引用为空 (nullish ) (null 或者 undefined) 的情况下不会引起错误，该表达式短路返回值是 undefined。与函数调用一起使用时，如果给定的函数不存在，则返回 undefined。\n\n  ```JS\n    const person={ li: { sex : 'man' } }\n    console.log(person.zhang.sex) // Uncaught TypeError: Cannot read properties of undefined (reading 'sex')\n    console.log(person.zhang?.sex) // undefined\n  ```\n\n- 空值合并运算符 nullish coalescing operator (??)\n\n  > 空值合并操作符（??）是一个逻辑操作符，当左侧的操作数为 null 或者 undefined 时，返回其右侧操作数，否则返回左侧操作数。\n  > 与逻辑或操作符（||）不同，逻辑或操作符会在左侧操作数为假值时返回右侧操作数。也就是说，如果使用 || 来为某些变量设置默认值，可能会遇到意料之外的行为。比如为假值（例如，'' 或 0）时\n\n  ```JS\n    const name = '' || 'lisi' // name = 'lisi'\n    const name = '' ?? 'zhangsan' // name = 'zhangsan'\n\n    const number = 0 || 1000 // number = 1000\n    const number = 0 ?? 1000 // number = 0\n  ```\n\n---\n\n参考链接:\n[JavaScript Tip](https://markodenic.com/javascript-tips/)\n","tags":["JavaScript","备忘录"],"categories":["program"]},{"title":"Angular命令行","url":"/posts/daabaeac.html","content":"\n命令行单词 new generate module component serve service pipe 可以用缩写\n\n命令行`ng g + fileName`生成文件，驼峰式命名的 fileName 最终将会变为 file-name\n\n命令行`ng g file-name --module=app-name`指明所属模块时，模块要用 app-name 的形式指明\n\n```bash\nng n project-name #创建angular项目\n```\n\n<!--more-->\n\n```bash\nng g m module-name #生成angular模块\n\nng g m module-name --routing\n# 生成module-name的文件夹,里面有module-name.module.ts和module-name-routing.module.ts文件\n```\n\n```bash\nng g m app-routing --module=app --flat\n#生成一个模块文件,并且指定所属模块,通常用来做路由模块\n# --flat 在当前目录下建立文件,而不需要创建新的文件夹\n# --moudle 指明新建文件所属模块\n```\n\n```javascript\n// 标准路由文件\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\n```\n\n```bash\nng g c component-name --module=app #生成组件,并且指定组件的模块\n\nng g s component-name #生成服务\n\nng g p string-slice --module=app #生成管道\n```\n\n```bash\nng s --host #以本地ip建立服务,方便其他电脑也能看到开发时页面\n\nng s --port 3001 #指定端口\n```\n","tags":["Angular"],"categories":["program"]},{"title":"机会成本与沉没成本","url":"/posts/848f4449.html","content":"\n沉没成本定义：沉没成本是指由于过去的决策已经发生了的，而不能由现在或将来的任何决策改变的成本。简单说就是已经发生不可收回的支出，如时间、金钱、精力等。\n\n机会成本定义：机会成本是指为了得到某种东西而所要放弃另一些东西的最大价值；也可以理解为在面临多方案择一决策时，被舍弃的选项中的最高价值者是本次决策的机会成本；\n\n<!--more-->\n\n难以舍弃沉没成本原因：\n\n1.执着于收回成本，而盲目追求负效益。\n\n2.忽略了机会成本。\n\n3.过于追求心理满足感而忽略了切身体验。\n\n4.追加成本与难以放弃沉没成本形成恶性循环。\n\n5.过于执着以至于高估以往成本对最终结果的作用。\n\n经济学常识告诉我们，在做决策时是不应该考虑沉没成本的。但是，沉没成本也好，可变成本也罢，只要我们付出成本，就一定是希望有所收益的。但有时往往事与愿违，这个时候若是不能果断放弃沉没成本，只能损失更多。当我们对自己的心理活动以及行为有了合理、通透的解释，在我们遇到类似案例中的情况时，那么放弃沉没成本、防止沉没成本干扰下一时刻的决策就有很大帮助。\n\n然而，当我们明知沉没成本不可收回、不应影响决策的时候，还是会难以舍弃。因为经济学中假设人是理性的，但人却是“不完全理性”的，有时候感性往往战胜理性而影响我们的决策。就拿以上小猪来说，如果我们告诉小猪沉没成本的道理，让小猪选择在吃到微饱时放弃，但是小猪却因此闷闷不乐，依然觉得自己“亏损”，在感情上不能坦然接受这种“损失”，那么，选择“继续吃下去”未必不是小猪的正确选择，因为此时小猪代表的是一个感性至上的群体，对他们来说，心理的满足感，战胜了切身体验的不适感，这种时候，我们无法说他们的选择是错误的或者不理性的。\n\n通过以上例子，不难知道只有追求理性，才能让自己的利益得到最大化，或者少受损失。那么我们不妨接受“止损点”这一概念，给自己设置一个损失上限。比如看电影，我们在进入影院之前给自己规定：若是看了二十分钟依然觉得不好看，果断离开；吃自助吃到八分饱，果断停止；投资时损失到一定金额，果断放弃。及时止损这一策略是我们面对沉没成本犹豫不决时的醒脑丸。\n","categories":["记录"]},{"title":"无知之幕","url":"/posts/887c5a6d.html","content":"\n无知之幕是指在人们商量给予一个社会或一个组织里的不同角色的成员的正当对待时，最理想的方式是把大家聚集到一个幕布下，约定好每一个人都不知道自己在走出这个幕布后将在社会/组织里处于什么样的角色。\n\n<!--more-->\n\n然后大家讨论针对某一个角色大家应该如何对待他，无论是市长还是清洁工。这样的好处是大家不会因为自己的既得利益而给出不公正的意见，也就可以避免“屁股决定脑袋”的情况。因为每个人都不知道自己将来的位置，因此这一过程下的决策一般能保证将来最弱势的角色能得到最好的保护，当然，它也不会得到过多的利益，因为在定规则的时候幕布下的人们会认同那是不必要的。\n罗尔斯强加给原初状态下的参加者的主要条件，这些参加者要确定支配社会基本结构的正义原则。所有的参加者都处在无知之幕背后，他们对他们的特性、能力、宗教信仰及个人的历史一无所知。他们不知道他们所处社会的经济条件和政治状况，不知道他们的社会身份或阶级地位。他们有对社会的一般的理论知识，也就是说他们是理性的，并且不管他们的环境和生活计划如何，都将追求基本的善。\n无知之幕意味着可以保证参加者做出的选择不被他们的特殊利益和好处所歪曲，可以使他们公正客观地确定原则。无知之幕背后的人是否有足够的知识选择正义的观念，这一问题还不清楚。如果他们对自己和他们的社会了解得更多，那要求他们在正义观念上取得一致就有风险。个人会因为他们的历史、甚至因为对他们的历史的无知而产生偏见，这也是可能的。\n\n---\n\n参考链接:  \n[无知之幕](https://baike.baidu.com/item/%E6%97%A0%E7%9F%A5%E4%B9%8B%E5%B9%95/8888696)\n","tags":["心理"],"categories":["记录"]},{"title":"频率错觉","url":"/posts/7b9045f8.html","content":"\n频率错觉（Frequency illusion）是一种认知偏差，指的是第一次注意到某事后，往往会更频繁地注意到它，导致认为此事是高频现象。简单说，频率错觉就是\"你刚刚发现一个概念或事物，然后突然发现它似乎无处不在\"。([频率错觉](https://www.psysoper.com/2438/%EF%BC%8316%EF%BC%9A%E9%A2%91%E7%8E%87%E9%94%99%E8%A7%89/))\n","tags":["心理"],"categories":["记录"]},{"title":"情绪ABC理论","url":"/posts/3c1ca5d8.html","content":"\nABC 理论(ABC Theory of Emotion)是由美国心理学家埃利斯创建的。就是认为激发事件 A(activating event 的第一个英文字母）只是引发情绪和行为后果 C(consequence 的第一个英文字母）的间接原因，而引起 C 的直接原因则是个体对激发事件 A 的认知和评价而产生的信念 B(belief 的第一个英文字母），即人的消极情绪和行为障碍结果(C)，不是由于某一激发事件（A)直接引发的，而是由于经受这一事件的个体对它不正确的认知和评价所产生的错误信念（B)所直接引起。错误信念也称为非理性信念。\n\n<!--more-->\n\n#### 常见的不合理信念\n\n- 自己应比别人强，自我价值过高；\n- 人应该得到生活中所有对自己重要的人的喜爱和赞许；\n- 有价值的人应在各方面都比别人强；\n- 任何事物都应按自己的意愿发展，否则会很糟糕；\n- 一个人应该担心随时可能发生灾祸；\n- 情绪由外界控制，自己无能为力；\n- 已经定下的事是无法改变的；\n- 一个人碰到的种种问题，总应该都有一个正确、完满的答案，如果一个人无法找到它，便是不能容忍的事；\n- 对不好的人应该给予严厉的惩罚和制裁；\n- 逃避挑战与责任可能要比正视它们容易得多；\n\n#### 不合理观念的特征\n\n依据 ABC 理论，分析日常生活中的一些具体情况，我们不难发现人的不合理观念常常具有以下三个特征。\n\n一是绝对化的要求：是指人们常常以自己的意愿为出发点，认为某事物必定发生或不发生的想法。它常常表现为将“希望”、“想要”等绝对化为“必须”、“应该”或“一定要”等。例如，“我必须成功”、“别人必须对我好”等等。这种绝对化的要求之所以不合理，是因为每一客观事物都有其自身的发展规律，不可能以个人的意志为转移。对于某个人来说，他不可能在每一件事上都获得成功，他周围的人或事物的表现及发展也不会以他的意愿来改变。因此，当某些事物的发展与其对事物的绝对化要求相悖时，他就会感到难以接受和适应，从而极易陷入情绪困扰之中。\n\n二是过分概括化：这是一种以偏概全的不合理思维方式的表现，它常常把“有时”、“某些”过分概括化为“总是”、“所有”等。用艾利斯的话来说，这就好像凭一本书的封面来判定它的好坏一样。它具体体现在人们对自己或他人的不合理评价上，典型特征是以某一件或某几件事来评价自身或他人的整体价值。例如，有些人遭受一些失败后，就会认为自己“一无是处、毫无价值”，这种片面的自我否定往往导致自卑自弃、自罪自责等不良情绪。而这种评价一旦指向他人，就会一味地指责别人，产生怨忿、敌意等消极情绪。我们应该认识到，“金无足赤，人无完人”，每个人都有犯错误的可能性。\n\n三是糟糕至极：这种观念认为如果一件不好的事情发生，那将是非常可怕和糟糕。例如，“我没考上大学，一切都完了”，“我没当上处长，不会有前途了。”这种想法是非理性的，因为对任何一件事情来说，都会有比之更坏的情况发生，所以没有一件事情可被定义为糟糕至极。但如果一个人坚持这种“糟糕”观时，那么当他遇到他所谓的百分之百糟糕的事时，他就会陷入不良的情绪体验之中，而一蹶不振。\n\n因此，在日常生活和工作中，当遭遇各种失败和挫折，要想避免情绪失调，就应多检查一下自己的大脑，看是否存在一些“绝对化要求”、“过分概括化”和“糟糕至极”等不合理想法，如有，就要有意识地用合理观念取而代之。\n\n---\n\n参考链接:  \n[MBA 智库-情绪 ABC 理论](https://wiki.mbalib.com/zh-tw/%E6%83%85%E7%BB%AAABC%E7%90%86%E8%AE%BA)\n","tags":["心理"],"categories":["记录"]},{"title":"学习Node.js","url":"/posts/bbc04bb4.html","content":"\nNodeJS 是运行在服务端的 Javascript,基于 Google 的 Chrome V8 引擎。NPM 是随同 NodeJS 一起安装的包管理工具，用来安装第三方的模块。\n通过 node 命令可以运行一个 js 文件`node index.js`,在命令行里输入 node 可以进入 REPL(Read Eval Print Loop:交互式解释器) 环境运行 js 代码。\n\n#### 初始化一个项目\n\n在项目目录下运行`npm init`会生成一个 package.json 文件，里面包含了项目的信息。\n\n<!--more-->\n\n```json\n{\n  \"name\": \"backend\",\n  \"version\": \"0.0.1\",\n  \"description\": \"\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"start\": \"node index.js\",\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  },\n  \"author\": \"Matti Luukkainen\",\n  \"license\": \"MIT\"\n}\n```\n\n如上，文件定义的入口点是 index.js,其中 scripts 里的前两个命令可以通过`npm start` `npm test`运行\n\n#### 简单的 web 服务器\n\n```javascript\nconst http = require('http'); //应用导入Node的内置Web server模块\n\nconst app = http.createServer((req, res) => {\n  res.writeHead(200, { 'Content-Type': 'text/plain' });\n  res.end('Hello motherfucker');\n});\nconst PORT = 3100;\napp.listen(PORT);\nconsole.log(`Server running on port ${PORT}`);\n```\n\n#### 使用 Express\n\n直接使用 Node 内置的 http web 服务器实现我们的服务器代码是可行的。 但是，它很麻烦，特别是当应用规模“变大变长”时。\n\n为了提供一个比内置的 http 模块更友好的界面，许多库已经开发出来，以简化使用 Node 作为服务器端开发。这些库致力于为构建后台服务器的一般的用例提供一个更好的抽象，到目前为止，最受欢迎的库是 express。\n\n安装 express 项目依赖`npm install express`,事情会在 package.json 记录下来。\n\n```json\n{\n  // ...\n  \"dependencies\": {\n    \"express\": \"^4.17.1\"\n  }\n}\n```\n\n依赖的源代码安装在项目根目录中的 node_modules 目录中。 除了 express，你还可以在目录中找到大量的其他依赖项,这些实际上是 express 的依赖项，以及它所有依赖项的依赖项，等等。 这些被称为我们项目的 传递依赖 transitive dependencies 。\n\n- npm 中的语义版本模型\n  npm 的版本号由三部分组成：\n  主版本号、次版本号、补丁版本号。变更不同的版本号，代表不同的意义：\n  主版本号（major）：软件做了不兼容的变更（breaking change 重大变更）；\n  次版本号（minor）：添加功能或者废弃功能，向下兼容；\n  补丁版本号（patch）：bug 修复，向下兼容。\n\n- ~version\n  不改变主版本号和次版本号,补丁版本号随意\n  注意:\n  如果按照版本号格式,X.Y.Z,那么补丁版本号就是随意\n  如: ~2.2.1, 表示 >=2.2.1 <2.3.0 版的依赖包 (可以是 2.2.1, 2.2.2, 2.2.3, …, 2.2.n)\n  如果版本号格式,X.Y,那么跟正规格式的意义相同\n  如果版本号格式,X,那么次要版本号和补丁版本号可以随意\n  如: ~2, 表示 >=2.0.0 < 3.0.0 版的依赖包 (可以是 2.0.0, 2.0.n, 2.1.0, …, 2.n.n)\n\n- ^version\n  版本号最左边非 0 数字的右侧可以任意\n  如: ^2.2.1,表示 >=2.2.1 < 3.0.0 版依赖包\n  ^0.2.1,表示 >=0.2.1 <0.3.0 版依赖包\n  ^0.0,表示 >=0.0.0 <0.1.0 版依赖包\n\n使用 express 改写上面的代码:\n\n```javascript\nconst express = require('express');\nconst app = express();\n\napp.get('/', (req, res) => {\n  res.send('<h1>Hello world!</h1>');\n});\n\nconst PORT = 3001;\napp.listen(PORT, () => {\n  console.log(`Server running on port ${PORT}`);\n});\n```\n\n#### 设置 npm 代理\n\n```bash\nnpm config set proxy=http://127.0.0.1:10809 #设置代理\n\nnpm config delete proxy #取消代理\n```\n\n#### 安装 nodemon\n\nnodemon 将监视启动 nodemon 的目录中的文件，如果任何文件发生更改，nodemon 将自动重启 node 应用。\n通过命令`npm install -D nodemon`将 nodemon 定义为开发依赖 development dependency,package.json 的内容也发生了变化\n\n```json\n{\n  //...\n  \"dependencies\": {\n    \"express\": \"^4.17.1\"\n  },\n  \"devDependencies\": {\n    \"nodemon\": \"^2.0.7\"\n  }\n}\n```\n\n通过开发依赖，会指向仅在应用开发过程中需要的工具，例如用于测试或自动重启应用的工具，就像 nodemon。\n当应用在生产服务器(例如 Heroku)的生产模式下运行时，并不需要这些开发依赖项。\n\n```json\n{\n  // ..\n  \"scripts\": {\n    \"start\": \"node index.js\",\n    \"dev\": \"nodemon index.js\", //添加nodemon命令脚本\n    \"test\": \"echo \\\"Error: no test specified\\\" && exit 1\"\n  }\n  // ..\n}\n```\n\n与 start 和 test 脚本不同，其他的脚本运行命令需要加 run`npm run dev`\n\n#### 几种依赖\n\n- dependencies\n  这是 npm 最基本的依赖，`npm i xxx`来安装一个包并且添加到 package.json 的 dependencies 里面。\n  `npm i xxx @0.0.1`@指明版本号，否则会安装当前包的最新版本\n- devDependencies\n  开发中使用的依赖，为了开发方便而使用依赖，如构建工具、预处理器、测试工具等。\n  `npm i -D xxx` 添加到 package.json 的 devDependencies 里面。\n- peerDependencies\n  针对的是 npm 包的开发者使用，在项目主体里开发一个插件，这个插件的功能实现并不需要依赖它的项目主体，但是项目主体却还是它的宿主。  \n  因此当想要使用这个插件的时候，必须也要安装它的宿主项目，peerDependencies 就是声明插件与宿主的关系的。\n\n#### Node 的模块\n\n- module.exports={app} 或者 module.exports=app\n\n- const {app}=require('') 或者 const app=require('')\n\n#### 全局变量\n\n- \\_\\_filename 表示当前正在执行的脚本的文件名，输出文件所在位置的绝对路径\n- \\_\\_dirname 表示当前执行脚本所在的目录\n- process 用于描述当前 Node.js 进程状态的对象，提供了一个与操作系统的简单接口。\n  事件：exit beforeExit uncaughtException Sinal 事件\n  属性：stdout stderr stdin argv env...\n  方法：abort() chdir() cwd() nextTick(callback)...\n\n#### 文件系统\n\n```javascript\nconst fs=require('fs)\n```\n\nNode.js 文件系统（fs 模块）模块中的方法均有异步和同步版本，例如读取文件内容的函数有异步的 fs.readFile() 和同步的 fs.readFileSync()。\n异步的方法函数最后一个参数为回调函数，回调函数的第一个参数包含了错误信息(error)。\n比起同步，异步方法性能更高，速度更快，而且没有阻塞。\n\n- 读取文件\n  ` fs.readFile(filename[, options], callback)`\n- 打开文件\n  `fs.open(path, flags[, mode], callback)`\n- 获取文件信息\n  `fs.stat(path, callback)`\n- 写入文件\n  `fs.writeFile(file, data[, options], callback)`\n  ....\n\n---\n\n参考链接:  \n[Node.js 与 Express](https://fullstackopen.com/zh/part3/node_js_%E4%B8%8E_express)\n[peerDependencies](https://nodejs.org/es/blog/npm/peer-dependencies/)\n","tags":["JavaScript"],"categories":["program"]},{"title":"人间失格-太宰治","url":"/posts/d4035720.html","content":"\n1. 说不上为什么，那孩子的笑脸，愈看愈让人感到莫名的厌烦与阴森。那根本就不是在笑。那孩子一点笑的意思都没有。他握紧双拳的站姿便是证据。人，是不会在握拳的同时还笑得出来，只有猴子才会。那分明是猴子的笑容——只是在脸上挤出丑陋的皱纹而已。（迄今为止，我从未见过神态如此诡异的小孩）\n\n<!--more-->\n\n2. 他穿着校服，胸前的口袋露出白色手帕的一角，两脚交叉坐在藤椅上，面带笑容。这次不再是满脸皱纹的猴子笑脸，而是相当有技巧的微笑了，却不知为何，还是与常人有异。类似于血气的凝重，或是生命的艰涩之类切实的东西，在这笑容中概不存在。那笑容不像鸟，而像鸟轻盈的羽毛。他笑着，如同一张白纸，让人觉得，他的一切都是虚假的。（迄今为止，我从未见过如此诡异的俊美青年）\n\n3. 这次他没有笑，没有任何表情。似乎他坐在火盆边伸手烤火的间隙，生命就会自然消亡一样。这着实是张令人厌恶、触霉头的照片。（迄今为止，我从未见过长相如此诡异的男子）\n\n4. 我这一生，尽是可耻之事。\n\n5. 于是我想到一个方法，就是用滑稽的言行讨好他人。\n   那是我对人来最后的求爱。我对人类极度恐惧，却无论如何也无法对人类死心。于是，我靠滑稽这根细线，维系着与人类的联系。表面上，我总是笑脸迎人，可心里头，却是拼死拼活，以高难度的动作汗流浃背地为人类提供最周详的服务。\n\n6. 受人责备或怒斥时，或许没有人能保持好心情。但我在人们怒不可遏的脸上，看到了比狮子、鳄鱼、巨龙更加可怕的动物本性。寻常时候，他们似乎会将这本性刻意隐藏，但一有机会，人类可怕的真面目就会在愤怒中不经意的暴露出来。就像在草地上安稳打盹的牛，冷不防甩尾，“啪”地打死牛肚子上的牛虻。每每见到人类露出本性，我都惊悚得汗毛倒竖。而一旦想到，这种本质或许是人活于世的必备资质之一时，我简直要对自己绝望了。\n\n7. 若我惯于讲实话，也许能理直气壮地把他们的罪行告诉父母，但我连自己的亲生父母也不全然了解。我一向对“向人诉苦”不抱任何期待。无论是向父母诉说，还是向警察或政府诉说，最终还是会被那些深谙处世之道的人打败，任由他们花言巧语，喋喋不休。\n\n8. 我知道自己的想法有失偏颇，但我仍然认为向人诉苦不过是徒劳，与其如此，不如默默承受。我想，除了继续以滑稽的言行出世外，我别无选择。\n\n9. 相互欺骗的双方竟都相安无事，甚至并未察觉相互欺骗之事——我以为，人类生活中无处不是这样单纯、明了的不信任之举。但我对相互欺骗没多大的兴趣，因为我自己也从早到晚扮丑逗笑，欺骗众人。我对那些教条的仁义道德不甚关心。而那些相互欺瞒却又过着单纯、明了生活的人，抑或相互欺瞒却胸有成竹地面对生活的人，着实令人费解。人类终究未能让我明白其中真谛。若我能明了，或许就不必如此畏惧人类，也不必竭力讨好众人，更不至于与人类的生活对立，夜夜遭受地狱般的苦难。\n\n10. 在海边，靠近海岸线处，二十多株黝黑的高大山樱并排耸立着。新学年伊始，山樱树便抽出片片褐色的新叶，在蓝色海洋的映衬下，绽放着绚烂的花朵。待到樱花散落之时，花瓣落入大海，点缀在海面上，落樱乘着海浪，在海岸线上起起伏伏。\n\n11. 为别人着迷，或被人迷恋，感觉都很粗俗、戏谑，有得意洋洋愚弄他人之感。\n\n12. 和他在一起，永远无需担心两人走得累了，会陷入难熬的沉默。原本少言寡语的我，曾无比担心那可怕的沉默降临，于是在那之前，我便拼命搞笑，以防冷场。\n\n13. 在我眼中，娼妓既非人类，也非女性，像是白痴或疯子。躺在她们怀中，我却能放松身心，沉沉睡去。他们没有半点欲望，单纯的可悲。或许我身上有某种气息能让她们感受到同类的亲昵，娼妓们总是对我展现毫不作伪的善意。那是真情流露的善意，是不带任何勉强的善意，是对一个不知是否还会光顾的客人表露出的善意。有些夜晚，我在这些白痴或疯子般的娼妓身上，仿若看到了圣母玛利亚的光环。\n\n14. 与躺在那群白痴娼妓的怀里安然入睡的感觉完全不同（首先，那些娼妓是快活的），和诈骗犯的妻子度过的那个夜晚，于我而言是获得解放的幸福一夜（我想，在这本手札中，再也不会有一处肯定的言辞用得如此笃定、如此狂妄了）。\n\n    但仅此一夜。次日清晨，睁开眼睛，起身离开，我又变成那个轻薄的、矫揉作态的小丑。胆小鬼连幸福都会害怕，碰到棉花都会受伤，有时还会被幸福所伤。趁着还没受伤，我想及早和她分道扬镳。于是，我又开始施放搞笑的烟幕弹。\n\n15. 但我这种嫌麻烦地性格绝非出于狡猾，而是因为在女人这种生物眼里，和男人上床这件事与早晨醒来后发生的事情毫不相干，她们像是能忘记上床之事，将昨天与今天完美地切割成两个世界。如此匪夷所思之事，我尚不能完全适应。\n16. 我并不感到惋惜。我的占有欲本来就不强，即使偶尔稍感遗憾，也不会公然展现自己的支配欲，我没有与人争夺的勇气。甚至于日后的某一天，我眼睁睁地看着自己的妻子被人侵犯，竟也一言未发。\n\n17. 我总是尽可能地避免介入人世间的纠纷。被卷入是非纷争的漩涡，让我感到恐惧。恒子与我不过是露水姻缘，她并不属于我。对这种事，我不该有“可惜”之类的多余欲念。\n\n18. 在世俗的眼光中，恒子连得到醉汉的亲吻都不配，是个难看又穷酸的女人。这未免太出乎我的意料，对我来说犹如五雷轰顶。\n\n19. 靠近公寓窗外的电线上，挂着一个风筝。春天的风卷着沙尘，刮破了风筝的脸，可它依然紧紧缠住电线，摇摇摆摆的像在点头。每当看到它，我都会面色发红，忍不住笑，那个风筝甚至出现在我的梦靥之中。\n\n20. 我甚至连神明都惧怕。我不相信神爱世人，只相信神的惩罚。在我看来，所谓信仰，不过是为了接受神灵的鞭笞而在审判台前低头。我相信地狱的存在，却绝不相信有天堂。\n\n21. 圆滑处世的才能？我简直哭笑不得。我有什么圆滑处世的才能！不过，像我这种恐惧人类、逃避世人、总是敷衍了事的人，是否无意间契合了那些奉行“明哲保身（原指明智的人不参与可能给自己带来危险的事，现在指因怕犯错误或有损自己利益而对原则性问题不置可否地处世态度）”之道的精明狡猾之徒的处世论呢？人啊，明明一点也不了解对方，错看对方，却视彼此为独一无二的挚友，一生不解对方的真性情，待一方撒手西去，还要为其哭泣，念诵悼词。\n\n22. “不过，你这玩弄女人的放荡生活也差不多该收场了。再这样下去，世人可不会饶恕你。”\n    所谓“世人”，到底是什么？是人的复数吗？世人的实体究竟在哪里？一直以来，我茫然不知，只觉得世人应该是强大、严厉又可怕的东西。但经堀木一说，“所谓的世人，不就是你吗？”这句话我呼之欲出，终归还是怕惹恼堀木，欲言又止。\n    （世人可不会饶恕你。）\n    （什么世人啊。是你不会饶恕我吧？）\n    （做这种事情，世人一定会要你好看。）\n    （什么世人啊。是你会要我好看吧？）\n    （世人迟早会葬送你！）\n    （不是世人，是你要葬送我吧？）\n\n23. 同样的事反反复复，只需遵循与昨日相同的惯例。倘若避免大喜大悲，彻骨的悲伤便不会到来。前方路遇挡路之石，蟾蜍都会绕路而行。\n\n24. 我听见静子低声笑着，那是发自内心的幸福笑声。\n    我将门打开一条细缝向内窥视，原来是一只小白兔。它一蹦一跳地在屋里转圈，母女俩追着它跑。\n    （真是幸福的母女俩。我这种混蛋夹在她们中间，只会把她们的生活弄得更糟。质朴的幸福。一对好母女。啊，若有神明愿意听我祈祷，请赐予我幸福吧，哪怕平生只有一次。请赐予我一次幸福吧。）\n    我多想就这样双手合十，蹲身祈祷。但我悄悄掩上门，转身去了银座，从此再也没回过那间公寓。\n\n25. 世人——我似乎也懵懵懂懂地明白了何谓世人。世人就是人与人的争斗，而且是现场之争，人活着仅是为了在争斗中取胜。人们互不屈服，即使奴隶也有其卑微的报复。所以，除了当场决出胜负，人们没有其他生存方式。他们冠冕堂皇，以个人为争斗目标，战胜一人再迎战下一人。世人的困惑便是个人的困惑。大海指的不是世人，而是个人。如此一来，我对人世间这片亦真亦幻之海的恐惧大为减弱，不再如以往那样劳心费神，永无穷尽，即是说，我开始只考虑眼前需求，变得厚颜无耻。\n\n26. 她是酒吧对面一间小香烟铺老板的女儿，十七八岁，叫祝子，皮肤白皙，还长着一对小虎牙。我到铺子里买烟时，她总是笑着这样劝我。\n\n27. “你还是一副自命不凡的样子。不过本来也没有什么大不了的，她只是让我来转告你，有空去高园寺那边玩。”\n    即将忘却的时候，却飞来一只怪鸟，用喙啄破我记忆的伤口。过往的可耻和罪恶的记忆转瞬间在眼前浮现，我坐立不安，恐惧到想要大吼大叫。\n\n28. 比起祝子的身体被人玷污，祝子的信赖被人玷污这件事更令我难过。我在那之后的很长一段时间都痛不欲生。我这样一个人，惹人生厌，畏畏缩缩，只顾看人脸色行事，对他人的信赖之心早已破裂。于我而言，祝子那信赖他人的纯真心灵宛如青叶的瀑布，清新怡人。但这份纯真在一夜之间化为黄色污水。看吧，那晚之后，祝子对我的一颦一笑都十分敏感。\n\n29. 不幸。这世上不幸的人各式各样——不，毫不夸张地说，这世上尽是不幸的人。但这群人能够堂堂正正地向这个世界抗议自己所承受的不幸，“世人”也大度地给予他们理解和同情。可我的不幸源于自身的罪恶，无法向任何人抗议，若我吞吞吐吐地说出一句类似抗议的言辞，恐怕不止比目鱼，这世上所有人都会大吃一惊，他们以为我哪有资格提出抗议。我究竟是俗话说的“任性狂妄”，还是与之相反，是个懦弱的胆小鬼呢？我自己也十分费解。总之我可谓是罪恶的聚集体，无论走到哪里都会陷入不幸，全无防范之策。\n\n30. 我的不幸，恰恰在于我缺乏拒绝的能力。我害怕一旦拒绝别人，便会在彼此心里留下永远无法愈合的裂痕。但那一刻，我竟无比自然地拒绝了曾让我几乎疯狂的吗啡。或许是被祝子那“神圣的无知”打动了吧。哪怕只是一瞬，我也算是摆脱过毒瘾吧？\n\n31. 学生并不属于社会的某个部分。并且我认为，他们本就不该属于社会的任何一部分。我一向固执地认为，所谓的学生，就该是披着蓝色斗篷的恰尔德·哈罗德。学生是思考的漫步者，是蓝天上的云朵。学生既不能是编辑，亦不能是官吏，甚至不能是学者。于学生而言，成为市侩的社会人士是种多么可怕的堕落。但那并非是学生的错，一定是有人在其身后唆使引导。正因如此，我才会产生怜悯之心。\n\n32. 学生们，请牢记自己的特权，请为这特权骄傲。你不会永远拥有这种权利，啊，光阴真是倏忽即逝，因此请务必好好珍惜，切勿玷污了自身。待你们从学校毕业，地上的瓜分之事自会找上门来，纵使厌恶也必须接受。你们会成为商人，成为编辑，成为官员。但在神的宝座上与神并肩而坐这种事，走过学生时代便不会再有，错过后便永不再来。\n\n33. 过往岁月，我抱着独自战斗的想法一路走来。如今却觉得自己随时可能败下阵来，越发难以克制心中的惶恐不安。但我仍不愿向自己看不起的人低头认错，请求他们与我成为朋友。故此，我唯有独自一人，喝着劣等的酒，将属于我自己的战斗继续下去。\n    我的战斗——用一句话来说明，即与因循守旧者间的战斗。与人们司空见惯的装腔作势战斗，与显而易见的阿谀奉承战斗，与寒酸之物、心胸狭隘的人战斗。\n\n34. 少年们啊，无论你们今后度过多少岁月，都请不要介意自己的容貌，不要吸食香烟，若非节日，也别喝酒。长大后，请多加爱惜那性格内向、不爱浓妆的姑娘。\n","tags":["读书"],"categories":["记录"]},{"title":"月光落在左手-余秀华","url":"/posts/7156222b.html","content":"\n> 羊群经过早晨，灰尘落在中午。\n> 一颗心没有脱离身体\n\n> 你的名字被我咬出血 却没有打开幽暗的封印\n\n> 他还在那个灯火不熄的城市爱不同的人\n> 受同样的温暖和伤害\n> 朋友们说起他，我说都过去了\n> 风在院子里转了一圈，也过去了\n> 我还是每天打扫院子，想想他在人间\n> 我打扫得很仔细\n\n<!--more-->\n\n> 落日温暖。坐在土丘上看下去就是流水\n> 一个孩子走下去，就能在水里清洗暮年\n> 这样真好，风筝和蝴蝶都有去向\n> 一头啃草的牛反而如同一个插曲\n> 如果硬要找出一个不同的日子\n> 就是今天了。土丘上长出一个新坟\n> 乌鸦们慌张了一会儿，纷纷落下来\n> 草继续枯黄\n> 不管厚土多厚，一个人走进去\n> 总是很轻\n> 以前的讨价还价形同玩笑\n> 不停地运动嘴唇，以为能把生活嚼烂\n> 一个人坐到满天星宿，说：我们回去\n> 一棵草怔了很久\n> 在若有若无的风里\n> 扭动了一下\n\n> 阳光退出院子，退得那么慢\n> 其间还有多次停顿，如同一种哽咽\n> 北风很小，翻不起落在院子里的杨树叶儿\n> 炉子上的一罐药沉闷地咕噜，药味儿冲了出来\n> 击打着一具陈旧的病体\n> 她蹲在院子里，比一片叶子更蜷曲\n> 身体里的刀也蜷曲起来\n\n> 这宁静的冬天\n> 阳光好的日子，会觉得还可以活很久\n> 甚至可以活出喜悦\n\n> 一朵云如一辆邮车\n> 好消息从一个地方搬运到另一个地方\n> 仿佛低下头看了看我\n\n> 此刻，死亡是肤浅之事。\n> 我孤零零地活着 孤零零地活着。\n> 把一切病垢当良药吞下\n> 不要再校正我的偏差\n> 一个病人把病捂起来，是多么可耻的事情\n\n> 我想迟一点写到一个人，迟一点抬头看见星空\n> 我想让这心中的块垒再重一点，直到塌下，粉碎我\n> 多么绝望啊：我遇见了最好的\n> 却不能给出一句赞美\n\n> 我不知道为什么这么多夜晚能够平静地 写字\n> 这温柔的凌迟\n> 已不是最初的那根稻草。\n\n> 我每天几遍打扫房子，仿佛阳光能干净地照进来\n> 我养月季花，让它一次又一次地开\n> 我养兔子，只给它一窟\n\n> 但是蓝天白云下我曾经那样爱过\n> 山山水水间我曾经那样走过\n> 而青草年复一年\n> 把人间覆盖得苍翠而低矮\n> 我应该是在红尘受够了疼痛\n> 才敢一刀一刀把它们还给大地 轻风 和黄昏\n\n> 一朵花有果实的内心，一开始就含泪\n> 于是把每个秋天都当做归期\n> 才灿烂得 一败涂地\n","tags":["读书"],"categories":["记录"]},{"title":"自由在高处-熊培云","url":"/posts/52f44662.html","content":"\n1. 我在最近两年的演讲中经常谈到富兰克林的这段经历，称其为“追求真理，但不强加于人”，或者说“我的真理以你不接受为边界”。而这种包容与自信，恰恰是中国人一直或缺的。回望这个时代的“真理病”，于官于民，于国家于社会，可谓等量齐观。人们只愿接受自己想看到和想听到的事情，要么赞成，要么反对。\n<!--more-->\n2. 最近几年，我常常遇到两种人，一种骂我不爱国，另一种骂我不爱自由。我想说的是，这两种东西，我都爱。如果你非要我爱你爱的国，我希望你也尊重我爱的国。如果你非要我爱你想要的自由，我希望你也尊重我想要的自由。国家和个人有边界，你和我也有边界。在公域，我们因互相妥协而保全社会；在私域，我们因互不干涉而保全自己。\n\n3. 在英文里，“房间里的大象”指的是那些触目惊心地存在却被明目张胆地忽略甚至否定的事实或感受。\n\n4. 正义只在五米之内。\n\n5. 人们总是相信眼见为实，却忘了提取意义时存在的视觉盲区。心理学将上述实验所呈现的问题称为无意视盲。当人们把自己全部的注意力集中到某个区域或物体时，他们会忽略那些他们不需要看到的东西。这个心理实验让我们看到了“专心致志”所具有的某种危险倾向。当我们带着某种观点和目的专注于讨论某个问题时，有几个人会注意到一只大猩猩曾经走过，并且停下来和你挥手扮鬼脸呢？\n\n6. 中国迷失在雾霾里，你看不见人影，却能听到笑声，诸如“乡亲们，好消息，再坚持一下，据说风已经到张家口了”。多么可爱的“境外势力”的到来，多么哀婉的“APEC 蓝”的离去，网上甚至还有“雾霾天摄影技巧”在流行。可叹这真是一个长于苦中作乐的民族。在这里，幽默是反抗的开始，也是反抗的结束。幽默完了，好像所有艰难苦楚就都过去了。中国人的自由，很多时候就是在不合理的环境下尽可能活得舒服点，是庖丁解牛式的技巧上的自如，而不是价值观上的自由。\n   在此背景下，我似乎更应该相信自我安慰和解嘲已经无异于一种基本人权。\n\n7. 我还记得，前几年好不容易街上有游行的了，偏偏有人抄起家伙把人给砸死了，仿佛死者的脑袋里藏着一个钓鱼岛。爱国的边界在哪里？（私域的边界在哪里？利益的边界在哪里？公权力的边界在哪里？责任的边界在哪里？）\n\n8. 这些年，我一直坚持的一个信念是，改变不了大环境，就改变小环境，做自己力所能及的事情。你不能决定太阳几点升起，但可以决定自己几点起床。\n\n9. “没有英雄的国家真不幸！酒囊饭袋！保住一条狗命了吧？”\n   伽利略的回答是：“不。需要英雄的国家真不幸。”\n\n> 生活中只有一种英雄主义，那就是在认清生活真相以后依然热爱生活。——罗曼罗兰\n\n10. 文明就像是一条筑有河岸的河流。河流中流淌的鲜血是人们互相残杀、偷窃、争斗的结果，这些通常就是历史学家们所记录的内容。而他们没有注意的是，在河岸上，人们建立家园，相亲相爱，养育子女，歌唱，谱写诗歌，甚至创作雕塑。\n\n11. 偶尔走失，从未离开。没有比生活更古老的过去，也没有比生活更高远的未来。无论经历多少波折、困苦与残酷，人们对美好生活的追寻，亘古如斯。\n\n12. 每个人都有自己的情感世界，都有人生的当务之急，都有选择自己生活的权利。\n\n13. 从这方面说，老人的“奢侈”也不过是“心愿”面对高价时的“逆来顺受”。\n\n14. 生命长远，但若是为了得到所谓的社会承认而永远要做不愿意做的事，不如生命短暂，做了自己愿意做的事。\n\n15. 需要追问的是，当我们花费一生中最宝贵的时间换回一大堆死后带不走的东西，在我们和这些东西之间，究竟谁占有谁？是我们占有物品，还是物品占有我们？\n\n16. 什么时候我们能够像流浪汉一样自由？什么时候我们可以碎步徜徉于梭罗笔下郁郁葱葱的树林？在那里，简单生活不被视为一种堕落，勤劳的人节制勤劳。在那里你可以坐在时间的溪水里垂钓天上的星星，不必终日奔波于风尘。看大地寒来暑往，四季消长分明；看种子播撒信念，古树支起苍穹。\n\n17. 可怜这些“博士”，拿了“西洋文明”的种种好处，却又以保家卫国的姿态来换取掌声。\n\n18. 以此逻辑，向世界推销孔子是为世界文明作贡献，而在中国抵制给小孩送礼物的老人却是为了保家卫国。这种精神分裂表现在，一方面他们尽享人类文明的成果，另一方面又要举着西瓜刀与光彩照人的人类文明作战。\n\n19. 有用的信息在黑箱之中无路可寻，而无用的信息管道却像章鱼的爪子一样连接我们身体与生活的每一根神经。\n\n20. 如果你掌握了原则，何必去关心那亿万的例证及其应用呢？\n    生活中新闻不是最重要的东西，最重要的东西相反是那些“永不衰老的事件”——就像林中漫步、晒太阳之于人的健康一样意义久远。\n21. 我热爱生活，并且喜欢安静，我更想坐在阳台上读几本书，懒洋洋地过一上午，而不是坐在电脑前，与世界抱成一团。\n22. 现在世界倒过来了，一部电影好不好，看的竟然是观众流不流泪。你是消费者，你有消费主权，谁知你花钱消费竟是给自己买个主权沦陷，买个人财两空，世间还有比这更不公平的事吗？\n\n23. 熟悉中国社会的人都知道，从事养猪业的人多来自底层社会，政府有什么理由在实行“环保从穷人抓起”的同时，却连自我治理的机会都不给他们，而是直接宣判，以“为民除害”的清高将一个行业驱逐出境，使这些养猪者进入整体性的失业状态？\n\n24. 失控的权力一旦来到世间，每个毛孔都流着口水和肮脏的东西。\n\n25. 就个人而言，如果你能积极独立地思考，通常都不会天真地以为新闻里的“坏人坏事”就是我们的生活全部，并由此得出一个“形势一片大坏”的结论，正如当年“形势一片大好”的宣传不能够遮蔽现实的贫困一样。就新闻事件本身而言，好也罢，坏也罢，都只是对生活的取景，对现实的断章取义，以偏概全。\n\n26. 就政府而言，同样应该具有的媒介素养是，负面新闻并不构成对其工作的全盘否定，更不意味着媒体包藏恶意。\n\n27. 仿佛每个中国人在出国时都变成了蜗牛，走在哪里都要背上一个脆弱的“中国壳”，都要对这个壳负责，任何过错都是对这个壳的不敬不爱。顺着这种逻辑，我们就不难理解为什么会有人大骂骑牛者“有辱国格”了。仿佛这些人骑的不是牛，而是自己的国家。这种拖家带口式的价值观显然是过于夸张了。\n\n28. 总不见得你去罗马游览，看到满地都是小偷，你也入乡随俗了吧？\n\n29. 如果狐狸吃不到葡萄，就说葡萄是酸的，如果只能得到柠檬，就说柠檬是甜的，于是不为此感到苦恼。\n\n30. 如果需要在拆迁条例死掉与唐福珍活下来之间做选择，我宁可选择后者，因为在一个死人身上追求社会进步是可耻的，一切建立在这之上的进步也是可耻的，自己无所作为而高歌他人牺牲是可耻的。\n\n31. 在唐福珍死前，那些自称有良知、有知识的人都到哪里去了？唐福珍死后，这个条例终于要被废除，这不能证明唐福珍“死得其所”，只能证明本来有能力废除这个条例的人集体失语、失职。\n\n32. 一花一世界，一人一国家，谁能带领好自己，做自己人生的领导者？当一个人因不分善恶、惟命是从而导致自己主权沦落，这样“亡国奴”式的人生是不是才更可怕，更无希望？在此意义上，所谓良心发现，是不是另一种意义上的“救亡图存”？\n\n33. 人类既会毁于对过去的彻底遗忘，也会死于对未来的无端想象或者恐惧。\n\n34. 在一个开放社会，政府真正的职责是获取选民的信任，保障宽松自由的文化环境，而不是代替社会进行文化生产，或者为了推销自己的文化而对其他文化进行管制。必要时它可以与社会一起对文化进行分类，但不会将它们从架子上撤下来。\n\n35. 如果你想回到历史，不用翻太多的书，就知道革命或造反通过“制造敌人的艺术”在这片土地上酝酿了多少仇杀。\n\n36. 对复仇者而言，当过去成为他在世上的唯一的神，所谓复仇也更像是一种谵妄（由发烧、酒醉、药物中毒以及其他疾患引起的意识模糊、短时间内精神错乱的症状，如说胡话、不认识熟人等），仿佛只要报仇雪恨了，世界就收复公正了，曾经发生的不幸便没有发生。\n\n37. 一方面政府不遗余力地向民众宣扬民主德国是世界上最美好的国家；另一方面又视国民为潜在的“国家公敌”，必须接受监控。\n\n38. 而国家的价值，正在于提供一种相对公正的秩序，使身处其中的个人不必为上访和躲避城管浪费时间甚至丢掉性命，而是专心于实现自己的梦想。\n\n39. 当一位已经进入需求第四阶段、试图拥抱一种有尊严生活的公民提出要求，希望某些官员公开财产时，后者可能会出于自己的安全考虑，动用手中的关系与权柄，使前者重新回到生理需求和安全需求这两个初级层次上。\n\n40. 中国人无疑是世界上最能隐忍的民族，不幸的是，这种隐忍通常都用错了方向。人们有耐心忍受苦难，却没有相同的耐心去结束苦难。\n\n41. 当革命因对暴力的迷信而冲出应有的边界，否定人的意义本身，革命不仅毁坏了过去的文明，也迷失了未来的方向。\n\n42. 今日中国话语暴力与仇恨情绪同样盛行。这里不仅缺少底线派，也缺少茨威格所说的“思想上的英雄主义”；这里不仅缺少中产阶级，也缺少中间意见阶层。在各种“主张的冲突”中，底线派与中间意见阶层往往也是遭受各方误解和伤害最多的，因为他们离开战壕，手无寸铁地走到了枪林弹雨的中央，走到左派与右派、政府与民众等各方火力的交叉点。那又能怎样呢？被民众围攻、被朋友孤立，甚至被权力嫉恨，本来就是独立思想者应受的。客观上说，这也是其价值所在。\n\n43. 自修自持莫道此间非彼岸，即心即佛须知东土是西天。\n\n44. 我们不应该将自己归类于某种主义，而是将不同的主义以知识的方式归类于人类，在不断地证伪中解放自己。如果我们笃定信奉某种主义，难免会变成主义的律师，时时为它作无罪辩护。于是观念的主人变成观念的仆人，背离求知与改造社会的初衷。所以我说，人要为追求真理而献身，而不是为真理献身。追求真理的主体仍是我们自己，我们应该为我们自己的理想、事业、行为献身，而不是一个真理的教条。\n\n45. 人——这脆弱的会思想的芦苇，有时更应该像大海一样坚定，不要因为陆地上人多而否定自己的汪洋海水。\n\n46. 中外历史上许多启蒙者都是以高于人间的姿态，俯视世界。他们自信真理在握，略作思考便可以为尘世开出包治百病的偏方。就像在黑夜里打手电筒，他们不是谦卑地把光打到远处，照亮街道、田野与山峦，让你自己判断该往哪儿走，而是对着你的眼睛照射，告诉你这就是你需要的一切光明。\n\n47. 然而，对于社会关系、契约等元素，采取一种“工具主义”的原则却是极为重要的。如你所知，人与动物的一个根本区别就在于人会制造和使用工具。换句话说，任何人际关系、社会契约，都是人类所制造的工具的一部分。然而，为什么有许多人会陷于工具之中，最后完全迷失了自己呢？为什么他们会把工具当成了自己生活的全部呢？譬如说，有些人为了谋得一个职位，抛弃自己生命里最真实需要的东西；有些人会因为在社会中无以生存，而最终走上了自杀或自暴自弃的道路。\n    为什么同样是面对工具，会有那么多人陷于社会关系、契约之中，最终否定自己的价值与人生呢？因此我说，人可以制造和使用工具，也可以更换工具，这是我们可以拥有一个积极人生的一个大前提。\n\n48. 平常，我总是听到有人说绝望啊绝望，其实没有多少人是真绝望。很多时候，绝望只是一种修辞，甚至和幽默一样，只为给沉闷的人生透一口气。\n\n49. 美好年华，送往迎来，每一天都在灰飞烟灭，每一天也都在革故鼎新。\n\n50. 既然生活在一个糟糕的国家，那么一切都是糟糕的；既然反对一个时代，那么你只有反对这个时代的一切才够纯粹。\n","tags":["读书"],"categories":["记录"]},{"title":"重新发现社会-熊培云","url":"/posts/2a9d7a9e.html","content":"\n1. 正是基于这一认识，当历史翻过这血腥的一页，当活着的人们只是简单地在精神与肉体上将一个束手就擒的纳粹头子揪出来示众，从历史的废墟中引渡到现实的广场，让他为一个时代的错误负全责时，在我看来，这亦不过是为这段共犯的罪恶历史找了一只“替罪狼”。\n\n<!--more-->\n\n2. 独裁者所拥有的权利，从来都是那些甘心放弃自己权力或者权利的人聚沙成塔授予的。\n\n3. 只不过浪潮退尽时，那些手捧鲜花、高声呼喊的人们已经很少愿意承认自己曾经裸泳其中。\n\n4. 具体到极权主义与乌托邦之关系，罪恶不在乌托邦，而在于它是否与强制合流。\n\n5. 长远来看，我们都是要死的。\n\n   但我们并不能因为将来谁都要死便否定一个人活在当下的意义。任何人都不可以以某种所谓的“神圣理想”，通过瞒骗或者某种暴力的手段驱使他人多做牺牲。\n\n6. 重复自己的观点去说服他人本是件十分痛苦的事情。\n\n7. 一个人应该站在自己的生命本身，站在一个时代的立场上表达自己的心声，而非生在中国便只为中国人表达，生在美国便只为美国人说话。（坚持真理吗？）\n\n8. 一个人，如果生于猪圈，便说自己“热爱猪圈”，这种“爱猪圈主义”显然不是一种高尚的情感。必要的时候，我们甚至可以断定这是一种“以空间之名限制或屠杀时间”、灭绝人类未来与希望的庸俗情感。是故，我愿意以更广阔的视角将我所热爱之国视为时间之国，一种立于时间维度上的精神与思想之国，而非空间意义上的逆来顺受或与生俱来的“嫁鸡随鸡”式的地理之爱。（空间之维与时间之维）\n\n####　国家与社会\n\n9. 任何一个标榜执政为民的政府，更不能以掌握在自己手里的钱越多越光荣。\n\n10. 一个社会对付腐败最重要的两个工具，一是透明的媒体，二是司法独立。\n\n11. 人们耐心忍受着苦难，以为这是不可避免的，但一旦有人出主意想要消除苦难时，它就变得让人无法忍受了。\n\n12. 爱国必须讲逻辑。归根结底，国家只是全体国民缔结产生的一个组织，是国民用以谋求幸福生活的工具。在此意义上，爱国主义者真正要做的不是忙于督促每个人去爱国家，而是要让国家能够爱每一个人。\n\n13. “爱国者”假定自己和国家永远正确，一方面当国家面对所谓“危机”时，“爱国者”会竭尽全力从内部或外部寻找敌人，并认定他们是所有罪恶的根源，将自己的责任一笔勾销，以此维护所谓的民族自尊与国家荣誉；另一方面，又会单方面赋予某些人以“爱国”责任，然后监督他们是否爱国或叛国。在此逻辑下，监督者永远爱国，而且指责别人越多，自己就越爱国。“寻找替罪羊”因此成了“爱国”者只赚不赔的买卖。显然，这些“爱国者”有多“爱国”，不在于自己做了多少有益国家的事情，而在于他们认定多少人“有罪”，从国家内部圈出了多少个“汉奸”。\n\n14. 如果我们洞悉了国家因何而生，为谁服务，就不难理解，爱国的当务之急是爱国民，而不是爱某个空洞的国家理想或者宏大概念。\n\n15. 自然死亡的循序渐进与内生秩序，足以消化人世间许多无谓的挫折，使世界重新回到寂静中的生长。\n\n16. 个体的命运，在万众一心的洪流中从此湮没无闻。\n\n17. 人，这充满悖论的生物！\n\n18. 为什么有人会失去其自然的禀性？显然，这和人的另一个天性有关，即人都有自私或趋利避害的倾向。如果一个人不但得不到思想自由的好处反而深受其害，他便有可能会放弃这种禀赋的发挥，宁愿让自己的大脑处于一种“被奴役”或者“抛荒”的状态，让私田长草。\n\n19. 简而言之，长期积累的负性生活经验，会使人丧失信心，继而丧失创造力。韦尔奇说，世界是弱者的，因为弱者学会了适应。\n\n20. 既然思想独立者是一国最宝贵的财富，那么重建社会的第一步就是让每个国民都有条件、有能力拥有自己头脑的主权。国家的崛起，必先决于国民的崛起。\n\n#### 经济与社会\n\n21. 不同的是，这是一个歌舞升平、外表光鲜的年代，鼓吹“建设性”的推土机已经取代了战争年代的坦克，而这些农民也没有能力组织“反扫荡”了。\n\n22. 就这样，“拆迁”日复一日地腐蚀着文明的根基，朝不保夕的创造就像是在同一平面上铺砖，不会增加一个文明的任何高度——正如互相抢劫不会给社会增加任何财富。\n\n23. 众所周知，税收的一个重要功能就是调节收入差距。其原则是从富人那里多征一点，用于帮助低收入阶层的教育、医疗、市内交通等开支。\n\n24. 我国政府很聪明，收了税还不让你知道。不像大部分别的国家，从百姓那儿收了多少税必须清清楚楚地告诉纳税人。我们从超市买东西，价格里面都包含着税，只不过收据上并不写出来。我们打电话，用电交电费，里面都有税，而且收据上都不写明白。\n\n25. 任意征税和任意拘禁都会使公民在这个国家失去安全感，损毁这个国家存在的价值。\n\n26. 最有能力纳税的人免税，最无能力应付的人却得交税，当捐税以此为宗旨时，就必然要导致那一可怕的后果——富人免税，穷人交税。\n    于是，在已经存在所有个别的不平等中，又加上一项更普遍的不平等，从而加剧并维持所有其他的不平等。\n\n27. 然而，从整体而言，国民公共精神的多与少，与其享有的权利是密不可分的。没有权利的社会令人沉睡。如果国民得不到应得的权利，久而久之，他们就会对这个国家失去信心，对国家的关心也会越来越少，这样的国家迟早会分崩离析。显然，一个国家更应该用货真价实的权利团结民众，重建公共精神，而不是虚伪的道德说教。这种说教得到的往往是表面上的应承，内心的反抗。\n    用罗曼罗兰的话说，一个国家，如果让它的国民连批评的兴趣都没有，那才真是不可救药。\n\n28. 纳税人权利是目的，义务是手段，义务的设置是为了纳税人权利的实现。\n\n29. 而中国人至今所能理解的国家、政府与人民的关系，仍然是“亲民”“爱民”，这不过是传统的官在上、民在下思想文化的反映，与我们对现代民主文明社会追求的权利本位观念相去甚远。\n\n30. 没有经济自由，就不会有政治自由，西方的民主无疑起源于商业文明。因为人是会交换的动物，商业让人们合群生活，自我组织，可以不断地“以选择救济选择”。市场经济之所以是社会走向自治更走向善，是因为商品必须是一种善，而有远见的生产者在“善的推销”中看到自己的前途。与此同时，因交换而缔结的横向之网形成了对纵向的权力之网的挑战。我们不难理解为什么自古以来中国的专制主义者不仅采取严苛的户籍制和什物保甲连坐制，还采取“重农抑商”的政策，让农民成为“帝国稻草人”，在其耕耘的田地上站岗、流放。\n\n31. 或许我们可以说，在地权慈母般的眼神里，每一片土地都是一个国家。你种下一棵树，如果土地是你的，他就可以在这里自由生长几万年。\n\n32. 只不过因缘际会、历史弄人，在各种合力的作用下，这些民主的种子终于被飞鸟衔走，变成历史的有机肥，却始终没有长出民主制度的大树。\n\n33. 然而，在相当长的一段时间里，包括卢梭、潘恩和杰斐逊在内的时代风云人物都认为民主与宪政水火不容——因为宪政强调现在对过去的某个静止状态的遵循，而民主更多的是着眼于未来，关系到变化与进步，具有一个动态的视角。\n\n34. 法制形同虚设，民主也便掏空了意义。\n\n35. 作为各自财产的拥有者，每个人只能对自己的那份契约负责，既然我没有权利通过自己的签名取走你银行里的存款，那么你又有什么权利通过选票上的签字夺走我的应有之物。（拆迁户公投）\n\n36. 不难发现，当业主与开发商之间的讨价还价让位于民主表决，实际上是将个体利益绑上群体利益的战车，是将一对一的“经济问题”付诸多对多的“政治解决”。\n\n37. 众所周知，从人性的角度出发，每个人身上都潜藏着某种或善或恶的东西。至于如何向外界呈现，除了决定于内心的驱使（良知与欲望），同样受制于他与环境的互动（放纵与约束）。这也是人们心悦诚服地相信“一个好的制度会使坏人变好，一个坏的制度会使好人变坏”之原因所在。\n\n38. 这些树之所以没被强卖，便是因为有壮士以祖宗之名拼命，以致里应外合的树贩子与村干部不得不无奈把手。现实近乎荒诞，在这里法律与政治道德都不足以阻挡力与资本的合谋，倒是那几座孤零零的祖坟——被新政府批判的“旧文化”与“旧势力”，像是一座座捍卫尊严的堡垒，为这个村庄守住了一点底线。\n\n39. 在灾难面前，所有的道德体系都可以轻易坍塌。\n\n40. 权力是“法无授权即禁止”，权利是“法无禁止即自由”。\n\n41. 所谓“有宪法不等于有宪政，有法律并不等于有法治”，与此对应的是公民权利意识的成长。\n    开放的传统\n\n42. 同在蓝天下，在笔者看来，以一个人的人生实践为标准去否认另一个人的价值，就像责备加勒比海的海豚为什么不去红磨坊跳舞一样荒诞不经。\n\n43. 必须承认，“传统”语义的模糊在一定程度上助长了偏见。有人刻板地以为“传统”就是“传而统之”，就是坚守本土文化，于是倾向于将自己的文化走向海外视为对传统的弘扬，而将外来传统的引入视为文化殖民或侵略。\n\n44. 当众下跪有时候也是这样，那些想方设法劝谏别人听从或者跟随自己的人，同样只需“扑通”一声，同样只需“我啥也别说了”，最后别人也只好“啥也别说了”，自当他是对的——谁要是辩解或者反对，多少是有些残忍了。\n\n45. 任何一门“学”，一旦被命名为“国学”，就一定要成为该国人民精神地枷锁，成为对该国人民的智能发展形成严重阻碍作用的教条。\n\n46. 胡适：争自由的唯一原理是：“异乎我者未必即非，而同乎我者未必即是；今日众人之所是未必即是，而众人之所非未必真非。争自由的唯一理由，换句话说，就是要大家容忍异己的意见和信仰。凡不承认异己者的自由的人，就不配争自由，就不配谈自由。\n\n#### 网络社会\n\n47. 网络不仅记录正在发生的历史，而且创造历史。在这个“人各有志”的时代，每个人都可以自主地记录自己的生活与遭遇，并且借助网络等新兴媒介在公共领域发出自己的声音，做一个寂寞而真实的桅顶瞭望者。若得幸运女神的眷顾，还会凭着自己无意的一瞥，撞开历史多情的一页。\n\n48. 这不仅表现在它从头到尾会花掉网民大量的时间和精力（更别说有时还会功败垂成），更重要的是，在舞台上人们追求“戏剧正义”，然而当观众各自离开剧场，几人还会去关心那个丰富了他们业余生活的反面典型？\n\n49. 在中国，网络更像是政治与社会表达的一个替代品或者集合器，它集街头运动、议会辩论、舆论监督与社会监督等于一身。它表面上热烈无比，却又有着杂烩一切的暧昧。作为博弈工具的互联网，一次次见证了原本可以在法院解决的问题，却不得不首先经过一场轰轰烈烈的“媒体审判”或者“互联网审判”才能推动；原本可以在日常行政中解决的问题，却要通过互联网上风起云涌的声讨“定止纷争”。（定分止争：表示确定物的权属）\n\n50. 康德说，启蒙就是人类摆脱自己加之自己的不成熟状态。所谓不成熟状态就是：我们在需要大胆运用自己理性的领域却要接受别人的权威。\n\n51. 中国现在流行的某些精英主义仍然具有启蒙时代的一些危险特征。即，以自己的话语权的优势，对大众运用牧师与医生式的权威逻辑。历史是人民写的，历史文本却是知识分子写的。知识分子的这种职业便利，决定了这个群体通常自视过高，在解释历史与现实时，总倾向于夸大自己的作用。\n\n52. 我以为一个国家或一个人的最好的前途或状态就是愤怒与理性能互相救济。（愤青也有理性）\n\n53. 由于对真实的历史缺乏了解，很多年轻人对现实失去了判断能力。（为什么左派毛泽东思想能够吸引中国的年轻人）\n\n54. 为了推崇而推崇，为了反对而反对，为了目的可以不择手段。这种有意的忽视和断章取义，表明他们对世界的理解缺乏足够的客观与真诚，表明毛主义者只是将毛当作一个反对现实的工具，而非一种可以溯古的价值。（崇尚毛的人，为什么可以忽视毛发起的“文化大革命”和大跃进对老百姓的伤害？）\n\n55. 我们这代人自立且独立，在许多方面真的很不想麻烦国家。既然国家没有一个集体的胃代替我消化，也请国家不要用一个并不存在的集体之脑代替我思考。（个人与国家）\n\n56. 对每个自由人而言，国家只是自由人的集合，而不是超越于自由人之上的东西。自由人对共同传承下来的事物感到自豪并且对共同的传统表示忠顺，但从本质上说，政府仍不过是一个手段，一个工具。政府既不是一个给我们带来恩惠与礼物的人，也不是使我们盲目崇拜和为之服役的主人或神灵。所以，弗里德曼说：“除了公民们各自为之服务的意见一致的目标以外，他不承认国家的任何目标；除了公民们各自为之奋斗的意见一致的理想以外，他不承认国家的任何理想。”\n\n57. 没有底线的合群，人类会走向癫狂。\n\n58. 我习惯积极地理解那些散落于生活中的种种挫折。\n","tags":["读书"],"categories":["记录"]},{"title":"一个人的朝圣2","url":"/posts/b994a241.html","content":"\n1. 我会告诉你一切，余下的终归寂静。\n\n2. 南方的风有种柔和，在这里它却狂野到能把你掀起来。这段距离有它的理由，哈罗德。\n\n3. 有时候，当你看一件事觉得困难重重时，另一个人却可以只用一个微笑，就让问题在你的眼前云开雾散，直接明了。\n<!--more-->\n\n4. 归根结底，我们都在寻找它们——所谓的规则。我们从最诡异的地方将它们顺手拈来，如果它们似乎起过一次作用，我们就一辈子照章行事，全然不顾他们后来或许会引发的不快与困难。\n\n5. 我当然记得，我满脑子都装着过去的歌曲。我会坦白一切，不会害怕。\n\n6. 我心想，我要睡了，睡吧，睡吧，但那从来就没有发生过，没有一觉呜呼。\n\n7. 我在那栋海滩小屋里住了二十年，从我离开你和金斯布里奇后就住在那里了。那个地方是我的一部分，就好像过去是我的一部分，你是我的一部分，我的骨头也是我的一部分。\n\n8. 在村里，我们经过成排刷白的黑燧石村舍，大地像一本季节之书般打开。灌木树篱只剩光杆。去年的树叶像小蝙蝠一样吊在树上，一道挪威云杉绿化带在风中摇摆。没有切维厄特绵羊的踪影。直到后来，我才知道，我一直在寻找这些地标，却没有道别。但有时你不说这个字是因为，你以为有些什么仍在继续，而实际上它已结束。\n\n9. 矮个子男人不能穿高跟鞋真是个遗憾，本来这世界能省去很多麻烦的。\n\n10. 你能看到他们瞥一眼他，又瞥一眼我们，同时紧抓着他们手里的那杯茶和华夫饼干，就好像死亡能传染，而只有日常事物才能拯救他们。\n\n11. 那个母亲警告性地瞪了她女儿一眼。不要和陌生人说话。尤其是别跟有保质期的人说话。\n\n12. 说到时尚，你主要的趣味似乎就是融入背景。\n\n13. 与她会面后，我走啊走啊，但都没有用，我躲不过她对我说的话。\n\n14. 我不明白，为什么有些回忆就非得保留地这么清晰。我才想起一小片，整幅画面就忙不迭地杀了回来，而其它的东西，比如那些我愿意记起的东西，却了无踪影。\n\n15. 我身边都是彼此相系的人，有说有笑，憧憬着他们彼此相系的未来。这让人难堪，所有的一切。太多的幸福，让窗户蒙上了水汽。\n\n16. 他身上有种很害怕很小心的感觉，在行李和喧嚣声中谨慎前进。他似乎不熟悉这个地方。看起来像只玻璃做的动物，手脚太过纤弱。最后，他在一家人的旁边找到一个空座位，挤在边缘坐下。他一直在检查自己的袖口、头发、鞋子，当人们没有自信，需要提醒自己的身体界限在哪里，世界的其他部分又从哪里开始时，就会这么做。\n\n17. 越多人关注他，他看起来就越痛苦。我耻于说出口，但我坐着旁观时，心里想的是，好。就让这个孤独的人别扭。至少不是我。\n\n18. 于是我把这一想法修饰得更加温和。\n\n19. 我一度希望可以不再想你，我试过忘记，但遗忘需要太多力气，还不如干脆接受你就是我缺失的一部分，就这样继续下去。\n\n20. 自由的，喜悦的，无所期待。\n\n21. 我听到他们骂我，模仿我走路，我扬起下巴，故意蹒跚得更厉害。他们要笑的话，就应该学得更像一点。\n\n22. 我发现自己在留心听你的声音。\n\n23. 一朵灰色的低云自东向西把天空拉出褶皱。暮色的花园颜色黯淡。有一种静止，不过是纳比尔式的静止。它在孕育混乱。远方，海在翻腾。\n    雨要来了。\n    我希望你带了伞，我的朋友。\n    或者，最不济也要有一顶防水帽。\n\n24. 发生的每件事都被我封存进了脑海的琥珀中\n\n25. 他们都穿着精致的深色衣服，连小女孩也是。或许这家人是听到消息后换的衣服。或许他们觉得有必要穿出悲痛感。\n\n26. 晚上，那些石头都在月光下发光，有时我捡起它们，都能摸到、闻到他们抓住的阳光。\n\n27. 催眠自己说你爱上了一个人，要比日复一日地忍受他更容易。我们告诉自己陷入爱河，是为了故步自封。\n\n28. 最好还是吃吃糖和倒着唱歌吧，不要去冒险打乱我们已经拥有的微小事物。\n\n29. 我们会老去……我们会老去。你会卷起你的裤腿。我会管住我想吐露真相的嘴。\n\n30. 房间里波澜不惊。只有一只桃子。\n\n31. 那味道就像饮下夏天那么美好。\n\n32. 今晚的花园很平静。不是安静，而是平和。我在屋里能听到芭芭拉在她的房间里唱歌。有人咳嗽。有电视机的声音，还有夜班护士换班结束时的笑声。风吹皱了北海，珍珠白的月光洒在树顶。\n    我等待。\n    我回忆。\n    一抹上扬的微笑。一只鞋上的磨损。一道散落的阳光。\n\n33. 我盯着窗户，大地在变换秋天的景象：赤褐色、金黄色和绿色轮番上演。它们就像水彩画的颜料，渗进湿纸中，我不知道是雾气让他们流动，还是我的眼泪。\n\n34. 我再次坐下，坐得很正，不敢再牵动一丝肌肉，生怕身体会趁头脑阻拦之前把我拽下火车。\n\n35. 我知道我们会哈哈大笑，因为同一样东西发笑也可以是另一种在一起的方式。\n\n36. 人们上车，搭一小段路，谈论未来，而我一个人坐着，没有归属。只是在移动。就连车厢的内饰都比我生动。\n\n37. 远处，烟雾从烟囱里呼呼涌出，都被往一个斜角吹，就像巨大的灰色床单晾在空中。\n\n38. 戴维注视着窗外的漆黑。忧郁的瘦脸在黑暗中航行。\n\n39. 他静静地坐了片刻。然后他吃完了他的提拉米苏。把玻璃碗都刮得干干净净。真奇怪，即使生命中的重大事件发生时，我们也试图把它渺小化。\n\n40. 我们都听到了，但没人说话。我们只是看着她，就像一个孩子看着另一个惹了麻烦的孩子，或者一个开车的人放慢车速，目睹一起撞车事故。我们试图理解，却不愿意交换位置。\n\n41. 我考虑了我的人生。没有派对，没有人致辞说我善良，没有特别的裙子，没有五彩纸屑。没有人每晚都和我坐在一起，也没有人每个清晨在我身边醒来。尽管我告诉自己，这是我的选择，我拥有一座花园和我的独处但站在阳光里我还是觉得冷，吃不下东西。\n\n42. 那是一根变黑的浮木，大概有我的手臂长，但弓成了一个打结的 V 形，两头都磨脆了。它满身悲伤，几乎让我停止呼吸。\n\n43. 突然清除一个人这种方式，是在提醒我们自身的脆弱，之后又会继续习以为常地过活，继续以为自己无坚不摧。\n\n44. 你们听说弗莱出什么事了吗？他们似乎急于告诉彼此，因为这是一个故事，一个悲剧，但没有触动他们的任何神经。\n\n45. 外面有车，有海鸥，有傍晚沿着河口散步的人们。每样东西都理所应当。除了戴维·弗莱没了。\n\n46. 常态与悲痛欲绝之间仿佛不再有界限。\n\n47. 似乎没有人嘴边有合适的词语可供使用，还是保持沉默或者至少坚持老生常谈的措辞更安全。\n\n48. 你在哭泣，但不想让我看到，于是我瞟一眼自己的脚来让你好受些。\n\n49. 你的儿子死了，世界吞下那条消息后继续运转。\n\n50. 早上我打开百叶窗，出乎意料的是，它立在那里，像一根金色的船桅闪闪发光。我的花园又启动了。但这次不用维护什么，让我轻松许多，因为再也没有理由害怕失去它了。我不再需要向其他人展示我爱情的美好。我病了，只剩精力把它留存于心。\n\n51. 等我接近楼梯天井时，从底层照上来的一注强光突然倾入整片漆黑。\n\n52. 你的移动全无逻辑，就好像你的悲恸不知如何安放。\n\n53. 我小心地关上身后的破门，就像用一个沉默的句号标志一个句子的结束。\n\n54. 所以你看，人们很少是我们直观认为的样子。就连故事里的反派都会摇身一变，吓到我们。\n\n55. 今天早上，内维尔没有坐在娱乐室里他那把自动躺椅上面。下午也没在。\n    送葬人的灵车——\n    好了。剩下的你都知道。\n    我把内维尔的花夹在笔记本的两页纸之间，因为我无法在花园里照顾它了，你懂的。\n\n56. 正站在无力的阳光里。\n\n57. 你和莫林，你们看似希望家里的花园里有一堆残骸。或许我应该说，看上去你似乎需要它。你需要看到你内心的崩塌。\n\n58. “我现在开始忘记他长什么样了。我才失去他几个星期而已，但当我开始试着在脑海里想他的样子时，有些部分已经有点模糊，我没法看清他。我的头脑怎么能那么对我？”\n\n59. 留在这里感觉不对，太私密了。但同样地，走开也是一种抛弃。\n\n60. 那个晾晒的活儿中，有种格外空洞、孤独的东西。\n\n61. 事物并不总以消失的方式终结。也不总是以突然出现的方式开始。你以为会有一个时间说再见，但人们往往在你回过神来之前已经消失。我指的不单是死亡。\n\n62. 人群一发现她的身影，马上都转向她，就和等待医生的家属预期听到扭转人生的消息时一样，满脸堆笑，就好像那能影响判决。\n\n63. 那么寂静，房间都在呼喊。\n\n64. 我开始哭。不是痛苦的哭。是一种解脱。既然现在我的脑海里已然成歌，已付诸纸上，现在我的铅笔把它们变成了线条，尾巴和小卷，我就可以放手了。我的头脑安安静静。悲伤还未过去，但它不再作痛。\n\n65. 我对你的感觉除了爱，没有其他，因为我看到，你去看望一个人却发现自己宁可离开，这有多难。我记得以前我坐进你的车时，你常常看向别处，就好像你害怕我会让自己难堪。我真希望自己能端坐起来，像任何有尊严的人一样，这比什么都重要。\n\n66. 这一次我们之间没有雪。没有街道。没有窗户。看我，哈罗德，我说。你就看着我。你看，你看，你看到了我。你没有走开，没有喘气。你靠得更近。\n\n67. 这就是我得到的结论：对于不理解的东西，如果我们努力去找的话，总有可能找到一个合理的解释。但或许，偶尔那么一次，去接受我们不理解的东西并就此打住，反而更加理智。做出解释有时就是缩减可能。如果我相信一样事物，而你相信另一样，那又有什么关系呢？我们都殊途同归。\n","tags":["读书"],"categories":["记录"]},{"title":"鲁迅全集摘录","url":"/posts/e6152503.html","content":"\n1. 凡事总须研究，才会明白。古来时常吃人，我也还记得，可是不甚清楚。我翻开历史一查，这历史没有年代，歪歪斜斜的每页上都写着“仁义道德”几个字。我横竖睡不着，仔细看了半夜，才从字缝里看出字来，满本都写着两个字是“吃人”！\n<!--more-->\n\n#### 呐喊\n\n2. 所谓回忆者，虽说可以使人欢欣，有时也不免使人寂寞，使精神的丝缕还牵着已逝的寂寞的时光，又有什么意味呢，而我偏苦于不能全忘却，这不能全忘的一部分，到现在便成了《呐喊》的来由。\n\n3. 凡是愚弱的国民，即使体格如何健全，如何茁壮，也只能做毫无意义的示众的材料和看客，病多死少是不必以为不幸的。所以我们的第一要著，是在改变他们的精神，而善于改变精神的是，我那时以为当然要推文艺，于是想提倡文艺运动了。\n\n4. 凡有一人的主张，得了赞和，是促其前进的，得了反对，是促其奋斗的，独有叫喊于生人中，而生人并无反应，既非赞同，也无反对，如置身毫无边际的荒原，无可措手的了，这是怎样的悲哀呵，我于是以我所感到者为寂寞。（自序）\n\n5. 他便变了脸，铁一般青。睁着眼说，“也许有的，这是从来如此……”\n   “从来如此，便对么？”\n   “我不同你讲这些道理；总之你不该说，你说便是你错！”\n\n6. 没有吃过人的孩子，或者还有？\n   救救孩子……（狂人日记）\n\n7. 我接着便有许多话，想要连珠一般涌出：角鸡、跳鱼儿、贝壳、猹……但又总觉得被什么挡着似的，单在脑里面回旋，吐不出口外去。\n\n8. 我似乎打了一个寒噤；我就知道，我们之间已经隔了一层可悲的厚障壁了。我也说不出话。\n\n9. 我躺着，听船底潺潺的水声，知道我在走我的路。我想：我竟与闰土隔绝到这地步了，但我们的后辈还是一气，宏儿不是正在想念水生么。我希望他们不再像我，又大家隔膜起来……然而我又不愿意他们因为要一气，都如我的辛苦辗转而生活，也不愿意他们都如闰土的辛苦麻木而生活，也不愿意都如别人的辛苦恣睢而生活。他们应该有新的生活，为我们未经生活过的。\n   我想到希望，忽然害怕起来了。闰土要香炉和烛台的时候，我还暗地里笑他，以为他总是崇拜偶像，什么时候都不忘却。现在我所谓的希望，不也是我自己手制的偶像吗？只是他的愿望切近，我的愿望茫远罢了。\n   我在朦胧中，眼前展开一片海边碧绿的沙地来，上面深蓝的天空中挂着一轮金黄的圆月。我想：希望本是无所谓有，无所谓无的。这正如地上的路：其实地上本没有路，走的人多了，就成了路。（故乡）\n\n10. 老栓又吃一惊，睁眼看时，几个人从他面前过去了。一个还回头看他，样子不甚分明，但很像久饿的人见了食物一般，眼里闪出一种攫取的光。\n\n11. 老栓也向那边看，却只见一堆人的后背；颈项都伸得很长，仿佛许多鸭，被无形的手捏住了的，向上提着。\n\n12. “喂！一手交钱，一手交货！”一个浑身黑色的人，站在老栓面前，眼光正像两把刀，刺得老栓缩小了一半。那人一只大手，向他摊着；一只手却撮着一个鲜红的馒头，那红的还是一点一点的往下滴。\n\n13. “这是谁治病的呀？”老栓也似乎听得有人问他，但他并不答应；他的精神，现在只在一个包上，仿佛抱着一个十世单传的婴儿，别的事情，都已置之度外了。他现在要将这包里的新的生命，移植到他家里，收获许多幸福。太阳也出来了；在他前面，显出一条大道，直到他家中，后面也照见丁字接头破匾上“古口古亭”这四个黯淡的金字。\n\n14. 小栓撮起这黑东西，看了一会，似乎拿着自己的性命一般，心里说不出的奇怪。\n\n15. 他的旁边，一面立着他的父亲，一面立着他的母亲，两人的眼光，都仿佛要在他身上注进什么又要取出什么似的；便禁不住心跳起来，按着胸膛，又是一阵咳嗽。\n\n16. “这是包好！这是与众不同的。你想，趁热的拿来，趁热的吃下。”\n    “包好，包好！这样的趁热吃下。这样的人血馒头，什么痨病都包好！”\n\n17. 这一年的清明，分外寒冷；杨柳才吐出半粒米大的新芽。天明未久，华大妈已在右边的一座新坟前面，排出四碟菜，一碗饭，哭了一场。化过纸，呆呆的坐在地上；仿佛等候什么似的，但自己也说不出等候什么。微风起来，吹动她短发，确乎比去年白得多了。（药）\n\n18. 否则，也如孔庙里的太牢（古代祭祀，牛羊猪三牲具备谓之太牢：具太牢以为膳）一般，虽然与猪羊一样，同为畜生，但既经圣人下箸，先儒们便不敢妄动了。\n\n19. 在阿 Q 的记忆上，这大约要算是平生第二件的屈辱。幸而拍拍的响（假洋鬼子用拄杖把他打了）了之后，于他倒似乎完结了一件事，反而觉得轻松些，而且“忘却”这一件祖传的宝贝也发生了效力，他慢慢的走，将到酒店门口，早已有些高兴了。\n\n20. 有人说：有些胜利者，愿意敌手如虎，如鹰，他才感得胜利的欢喜；假使如羊，如小鸡，他便反觉得胜利的无聊。又有些胜利者，当克服一切之后，看见死的死了，降的降了，“臣诚惶诚恐死罪死罪”，他于是没有了敌人，没有了对手，没有了朋友，只有自己在上，一个，孤零零，凄凉，寂寞，便反而感到了胜利的悲哀。然而，我们的阿 Q 却没有这样乏，他是永远得意的：这或许是中国精神文明冠于全球的一个证据了。\n\n21. 阿 Q 于是再看那些喝彩的人们。\n    在刹那中，他的思想又仿佛旋风似的在脑里一回旋了。四年之前，他曾在山脚下遇见一只饿狼，永是不近不远的跟定他，要吃他的肉。他那时吓得几乎要死，幸而手里有一柄斫柴刀，才得仗这壮了胆，支持到未庄；可是永远记得那狼眼睛，又凶又怯，闪闪的像两颗鬼火，似乎远远的来穿透了他的皮肉。而这回他又看见从来没有见过的最可怕的眼睛了，又钝又锋利，不但已经咀嚼了他的话，并且还要咀嚼他皮肉以外的东西，永是不近不远的跟他走。\n    这些眼睛们似乎连成一气，已经在那里咬他的灵魂。\n    “救命，……”\n    然而阿 Q 没有说。他早就两眼发黑，耳朵里嗡的一声，觉得全身仿佛微尘似的迸散了。至于当时的影响，最大的倒反在举人老爷，因为终于没有追赃，他全家都嚎啕了。其次是赵府，非特秀才因为上城去报官，被不好的革命党剪了辫子，而且又破费了二十千的赏钱，所以全家也嚎啕了。从这一天以来，他们便渐渐的都发生了遗老的气味。\n    至于舆论，在未庄是无异议，自然都说是阿 Q 坏，被枪毙便是他的坏的证据；不坏又何至于被枪毙呢？而城里的舆论却不佳，他们多半不满足，以为枪毙并无杀头这般好看；而且那是怎样的一个可笑的死囚呵，游了那么久的街，竟没有唱一句戏：他们白跟一趟了。（阿 Q 正传）\n\n22. 我这时突然感到一种异样的感觉，觉得他满身灰尘的后影，刹时高大了，而且愈走愈大，须仰视才见。而且他对于我，渐渐的又几乎变成一种威压，甚而至于要榨出皮袍下面藏着的“小”来。\n\n23. 我没有思索的从外套袋里抓出一大把铜元，交给巡警，说，“请你给他……”\n    风全住了，路上还很静。我走着，一面想，几乎怕敢想到自己。以前的事姑且搁起，这一大把铜元又是什么意思？奖他么？我还能裁判车夫么？我不能回答自己。（一件小事）\n\n24. 我于是记起旧事来，先前我住在会馆里，清早起身，只见大槐树下一片散乱的鸽子毛，这明明是膏于鹰吻的了，上午班长来一打扫，便什么都不见了，谁知道曾有一个生命断送在这里呢？我又曾路过西四牌楼，看见一匹小狗被马车轧得快死，待回来时，什么也不见了，搬掉了罢，过往行人憧憧的走着，谁知道曾有一个生命断送在这里呢？夏夜，窗外面，常听到苍蝇的悠长的吱吱的叫声，这一定是给蝇虎咬住了，然而我向来无所容心于其间，而别人并且不听到……\n    假使造物也可以责备，那么，我以为他实在将生命造的太滥了，毁的太滥了。\n\n25. 造物太胡闹，我不能不反抗他了，虽然也许是倒是帮他的忙……\n    那黑猫是不能久在矮墙上高视阔步了，我决定的想，于是又不由的一瞥那藏在书箱里的一瓶氰酸钾。（兔和猫）\n\n26. “啊，造物的皮鞭没有到中国的脊梁上时，中国便永远是这一样的中国，绝不肯自己改变一支毫毛”\n    “你们的嘴里既然并无毒牙，何以偏要在额上帖起‘蝮蛇’两个大字，引乞丐来打杀？……”\n\n27. “再见！请你恕我打搅，好在明天便不是双十节，我们统可以忘却了。”（头发的故事）\n\n28. 她心里计算：不过是梦罢了，这些事都是梦。明天醒过来，自己好好的睡在床上，宝儿\n    也好好的睡在自己身边。他也醒过来，叫一声“妈”，生龙活虎似的跳出去玩了。\n    老拱的歌声早经寂静，咸亨也熄了灯。单四嫂子张着眼，总不信所有的事。——鸡也叫了；东方渐渐发白，窗缝里透进了银白色的曙光。\n    银白的曙光又渐渐显出绯红，太阳光接着照到屋脊。\n\n29. 单四嫂子早睡着了，老拱们也走了，咸亨也关上门了。这时的鲁镇，便完全落在寂静里。只有那暗夜为想变成明天，却仍在这寂静里奔波；另有几条狗，也躲在暗地里呜呜的叫。（明天）\n\n30. 他平日安排停当的前程，这时候又像受潮的糖塔一般，刹时倒塌，只剩下一堆碎片了。（白光）\n\n#### 彷徨\n\n31. 我因为常见些但愿不如所料，以为未必竟如所料的事，却每每恰如所料的起来，所以很恐怖这事也一律。（预见祥林嫂死了）\n\n32. 直到她说到呜咽，她们也就一齐流下那停在眼角上的眼泪，叹息一番，满足的去了，一面还纷纷的评论着。\n\n33. 她未必知道她的悲哀经大家咀嚼赏鉴了许多天，早已成为渣滓，只值得烦厌和唾弃；但从人们的笑影上，也仿佛觉得这又冷又尖，自己再没有开口的必要了。她单是一撇她们，并不回答一句话。（祝福）\n\n34. 安宁和幸福是要凝固的，永久是这样的安宁和幸福。\n\n35. 记得有一夜，子君的眼里忽而又发出久已不见的稚气的光来，笑着和我谈到还在会馆时候的情形，时时又很带些恐怖的神色。我知道我近来的超过她的冷漠，已经引起她的忧疑来，只得也勉力谈笑，想给她一点慰藉。然而我的笑容一上脸，我的话一出口，却即刻变为空虚，这空虚又即刻发生反响，回向我的耳目里，给我一个难堪的恶毒的冷嘲。\n\n36. 她从此又开始了往事的温习和新的考验，逼我做出许多虚伪的温存的答案来，将温存示给她，虚伪的草稿便写在自己的心上。\n\n37. 在通俗图书馆里往往瞥见一闪的光明，新的生路横在前面。她勇猛的觉悟了，毅然走出这冰冷的家，而且，——毫无怨恨的神色。我便轻如行云，漂浮空际，上有蔚蓝的天，下是深山大海，广厦高楼，战场，摩托车，洋场，公馆，晴明的闹市，黑暗的夜……\n\n38. 我们总算度过了极难忍受的冬天，这北京的冬天；就如蜻蜓落在恶作剧的坏孩子的手里一般，被系着细绳，尽情玩弄，虐待，虽然幸而没有送掉性命，结果也还是躺在地上，只争着一个迟早之间。\n\n39. 我不信；但屋子里是异样的寂寞和空虚。我遍看各处，寻觅子君；只见几件破旧而黯淡的家具，都显得极其清疏，在证明着它们毫无隐匿一人一物的能力。我转念寻信或她留下的字迹，也没有；只是盐和干辣椒，面粉，半株白菜，却聚集在一处了，旁边还有几十枚铜元。这是我们两人生活材料的全副，现在她就郑重地将这留给我一个人，在不言中，教我借此去维持较久的生活。\n\n40. 我不应该将真实说给子君，我们相爱过，我应该永久奉献她我的说谎。如果真实可以宝贵，这在子君就不该是一个沉重的空虚。谎语当然也是一个空虚，然而临末，至多也不过这样地沉重。\n\n41. 四周是广大的空虚，还有死的寂静。至于无爱的人们的眼前的黑暗，我仿佛一一看见，还听得一切苦闷和绝望的挣扎的声音。(子君死了)\n\n42. 经过许多回的思量和比较，也还只有会馆是还能相容的地方。依旧是这样的破屋，这样的板床，这样的半枯的槐树和紫藤，但那时使我希望，欢欣，爱，生活的，却全都逝去了，只有一个虚空，我用真实去换来的虚空存在。\n\n43. 我要遗忘；我为自己，并且要不再想到这用了遗忘给子君陪葬。\n    我要向着新的生路跨进第一步去，我要将真实深深地藏在心的创伤中，默默地前行，用遗忘和说谎做我的前导……（伤逝）\n\n#### 故事新编\n\n44. “唉唉，你们儒者，说话称着尧舜，做事却要学猪狗，可怜可怜！”（非攻）\n\n#### 坟\n\n45. 说话说到有人厌恶，比起毫无动静来，还是一种幸福。天下不舒服的人们多着，而有些人却一心一意在造专给自己舒服的世界。这是不能如此便宜的，也给他们放一点可恶的东西在眼前，使他有时小不舒服，知道原来自己的世界也不容易十分美满。苍蝇的飞鸣，是不知道人们在憎恶他的；我却明知道，然而只要能飞鸣就偏要飞鸣。我的可恶有时自己也觉得，即如我的戒酒，吃鱼肝油，以望延长我的生命，倒不尽是为了我的爱人，大大半乃是为了我的敌人，——给他们说得体面一点，就是敌人罢——要在他的好世界上多留一些缺陷。君子之徒曰：你何以不骂杀人不眨眼的军阀呢？斯亦卑怯也已！但我是不想上这些诱杀手段的当的。木皮道人说得好，“几年家软刀子割头不觉死”，我就要专指斥那些自称“无枪阶级”而其实是拿着软刀子的妖魔。即如上面所引的君子之徒的话，也就是一把软刀子。假如遭了笔祸了，你以为他就尊你为烈士了么？不，那时另有一番风凉话。倘不信，可看他们怎样评论那死于三一八惨杀的青年。\n\n46. 所以虽然明知道过去已经过去，神魂是无法追蹑的，但总不能那么决绝，还想将糟粕收敛起来，造成一座小小的新坟，一面是埋葬，一面也是留恋。至于不远的踏成平地，那是不想管，也就无从管了。（题记）\n\n47. “世道浇漓，人心日下，国将不国”这一类话，本是中国历来的叹息。\n    因为如此叹息，不但针砭世人，还可以从“日下”之中，除去自己。所以君子固然相对慨叹，连杀人放火嫖妓骗钱以及一切鬼混的人，也都乘作恶余暇，摇着头说道：“他们人心日下了。”\n\n48. 社会上多数古人模模糊糊传下来的道理，实在无理可讲；能用历史和数目的力量，挤死不合意的人。\n\n49. 节烈这事，现代既然失了存在的生命和价值；节烈的女人，岂非白苦一番么？可以答他说：还有哀悼的价值。她们是可怜人；不幸上了历史和数目的无意识的圈套，做了无主名的牺牲，可以开一个追悼大会。\n    我们追悼了过去的人，还要发愿：要自己和别人，都纯洁聪明勇猛向上。要除去虚伪的脸谱，要除去世上害人害己的昏迷和强暴。\n    我们追悼了过去的人，还要发愿：要除去于人生毫无意义的苦痛，要除去制造并赏玩别人苦痛的的昏迷和强暴。\n    我们还要发愿：要人类都受正当的幸福。（我之节烈观）\n\n50. 不过在戏台上罢了，悲剧将人生的有价值的东西毁灭给人看，喜剧将那无价值的东西撕破给人看。（再论雷峰塔的倒掉）\n\n51. 那地方通行的“国骂”却颇简单：专一以“妈”为限，绝不牵涉余人。后来稍游各地，才始惊异于国骂之博大而精微：上溯祖宗，旁连姊妹，下递子孙，普及同性，真是“犹河汉而无极也”。而且，不特用于人，也以施之兽。\n    那么，俄国也有这类骂法的了，但因为究竟没有中国似的精博，所以光荣还得归到这边来。好在这究竟又并非什么大光荣，所以他们大约未必抗议。\n    我曾在家乡看见乡农父子一同午饭，儿子指着一碗菜向他父亲说：“这不坏，妈的你尝尝看！”那父亲回答道：“我不要吃。妈的你吃去罢！”则兼职已经醇化为现在时行的“我的亲爱的”的意思了。（论“他妈的”）\n\n52. 总之，社会不改良，“收起来”便无用，以“收起来”为改良社会的手段，是坐了津浦车往奉天。（天津到江苏）（坚壁清野主义）\n\n#### 热风\n\n53. “合群的自大”，“爱国的自大”，是党同伐异，是对少数的天才宣战：——至于对别国文明宣战，则尚在其次。他们自己毫无特别才能，可以夸示于人，所以把这国拿来做个影子；他们把国里的习惯制度抬得很高，赞美的不得了；他们的国粹，既然这样有荣光，他们自然也有荣光了!倘若遇见攻击，他们也不必自去应战，因为这种蹲在影子里张目摇舌的人，数目极多，只须用 mob(指乌合之众)的长技，一阵乱噪，便可制胜。胜了，我是一群中的人，自然也胜了；若败了时，一群中有许多人，未必是我受亏：大凡聚众滋事时，多具这种心理，也就是他们的心理。他们举动，看似猛烈，其实却很卑怯。至于所生结果，则复古，尊王，扶清灭洋等等，已经领教的多了。所以多有这“合群的爱国的自大”的国民，真是可哀，真是不幸！（随感录三十八）\n\n54. 不满是向上的车轮，能够载着不自满的人类，向人道前进，\n    多有不自满的人的种族，永远前进，永远有希望。\n    多有只知责人而不知反省的人的种族，祸哉祸哉！（不满）\n\n55. 中国现在的人心中，不平和愤恨的分子太多了。不平还是改造的引线，但必须先改造自己，再改造社会，改造世界；万不可单是不平。至于愤恨，则几乎全无用处。\n    愤恨只是恨恨而死的根苗，古人有过许多，我们不要蹈他们的覆辙。\n    我们更不要借了“天下无公理，无人道”这些话，掩盖自暴自弃的行为，自称“恨人”，一副恨恨而死的脸孔，其实并不恨恨而死。（恨恨而死）\n\n56. 凡有牺牲在祭坛前沥血之后，所留给大家的，实在只有“散胙”（祭祀以后，散发祭祀所用的肉，称为散胙）这一件事。（即小见大）\n\n#### 华盖集\n\n57. 意图生存，而太卑怯，结果就得死亡。\n    以中国古训中教人苟活的格言如此之多，而中国人偏多死亡，外族偏多侵入，结果适得其反，可见我们蔑弃古训，是刻不容缓的了。这实在是无可奈何，因为我们要生活，而且不是苟活的缘故。（北京通信）\n\n58. 可是我倒也并不很以“留言”为奇，如果要造，就听凭他们去造去。好在中国现在还不到“群众专制”的时候，即使有几十个人，只要“无权势”者叫一大群警察，雇些女流氓，一打，就打散了，正无须乎我来为“被压迫者”说什么“公平话”。即使说，人们也未必尽相信，因为“在这样的社会里”，有些“公平话”总还不免是“他或她的酒饭”填出来的。不过事过境迁，“酒饭”已经消化，吸收，只剩下似乎毫无缘故的“公平话”罢了。倘使连酒饭也失了效力，我想，中国也还要光明些。\n\n59. 每看见绅士将一点骗人的自以为所谓恩惠，颁给下等人，而下等人不大感谢时，则斥之曰“不识抬举”。（并非闲话）\n\n#### 华盖集续篇\n\n60. 有些东西，为要显示他伤害你的时候的公正，在不相干的地方就称赞你几句，似乎有赏有罚，使别人看去，很像无私……\n\n61. 当我写出上面这些无聊的文字的时候，正是许多青年受弹饮刃的时候。呜呼，人和人的魂灵，是不想通的。\n\n62. 如果中国还不至于灭亡，则以往的史实示教过我们，将来的事便要大出于屠杀者的意料之外——\n    这不是一件事的结束，是一件事的开头。\n    墨写的谎说，决掩不住血写的事实。\n    血债必须用同物偿还。拖欠的愈久，就要付更大的利息！\n\n63. 以上都是空话。笔写的，有什么相干？\n    实弹打出来的却是青年的血。血不但不掩于墨写的谎话，不醉于墨写的挽歌；威力也压它不住，因为它已经骗不过，打不死了。（无花的蔷薇）\n\n64. 人们的苦痛是不容易相通的。因为不易相通，杀人者便以杀人为唯一要道，甚至于还当作快乐。然而也因为不容易相通，所以杀人者所显示的“死之恐怖”，仍然不能够儆戒后来，是人民永远变作牛马。\n\n65. 中国的有志于改革的青年，是知道死尸的沉重的，所以总是“请愿”。殊不知别有不觉得死尸的沉重的人们在，而且一并屠杀了“知道死尸沉重的人”的心。（死地）\n\n66. 因为这是开首就准备给第三者看的，所以恐怕也未必很有真面目，至少，不利于己的事，现在总还要藏起来。\n\n67. 我的胃的八字不见佳，向来就担不起福泽的。\n\n68. 你要开医院，万不可收留些看来无法挽留的病人；治好了走出，没有人知道，死掉了抬出，就哄动一时了，尤其是死掉的如果是“名流”。\n\n69. 这是人的问题。做事不切实，便什么都可疑。吕端大事不糊涂，犹言小事不妨糊涂点，这自然很足以显示我们中国人的雅量，然而我的胃痛却因此延长了。在宇宙的森罗万象中，我的胃痛当然不过是小事，或者简直不算事。\n\n70. 午后，织芳从河南来，谈了几句，匆匆忙忙就走了，放下两个包，说这是“方糖”，送你吃的，怕不见得好。织芳这一回有点发胖，又这么忙，又穿着方马褂，我恐怕他将要做官了。\n    打开包来看时，何尝是“方”的，却是圆圆的小薄片，黄棕色。吃起来又凉又细腻，确是好东西。但我不明白织芳为什么叫它“方糖”？但这也就可以作为他将要做官的一证。\n\n71. 走进宣武门城洞下，又是一个破衣孩子拿着一把小纸片，但却默默地将一张塞给我，接来一看，是石印的李国恒先生的传单，内中大意，是说他的多年痔疮，已蒙一个国手叫做什么先生的医好了。\n\n72. “八毛！”他也立刻懂得，将五分钱让去，真是“从善如流”，有正人君子的风度。\n\n73. “回见回见！”我取了瓶子，走着说。“回见，不喝水么？”“不喝了，回见”\n    我们究竟是礼教之邦的国民，归根结蒂，还是礼让。\n\n74. 客厅外是很大的一块空地方，种着许多树。一株苹果树下常有孩子们徘徊；C 君说，那是在等候苹果落下来的；因为有定律：谁拾得就归谁所有。我很笑孩子们耐心，肯做这样的迂远事。然而奇怪，到我辞别出去时，我看见三个孩子手里已经各有一个苹果了。（马上日记）\n\n#### 而已集\n\n75. 这半年我又看见了许多血和许多累，\n    然而我只有杂感而已。\n    泪揩了，血消了；\n    屠伯们逍遥复逍遥，\n    用钢刀的，用软刀的。\n    然而我只有“杂感”而已。\n    连“杂感”也被“放进了应该去的地方”时，\n    我于是只有“而已”而已！\n\n76. 久受压制的人们，被压制时只能忍苦，幸而解放了便只知道作乐，悲壮剧是不能久留在记忆里的。\n\n77. 我想，恋爱成功的时候，一个爱人死掉了，只能给生存的那一个以悲哀。然而革命成功的时候，革命家死掉了，却能每年给生存的大家以热闹，甚而至于欢欣鼓舞。唯独革命家，无论他生或死，都能给大家以幸福。同是爱，结果却有这样的的不同，正无怪现在的青年，很有许多感到恋爱和革命的冲突的苦闷。（黄花节的杂感）\n\n78. 譬如一个烈士的追悼会开过之后，烈士的事情早已不提了，大家倒传诵着谁的挽联做得好：这实在是一件很稳妥的买卖。\n\n79. 如果先挂起一个题目，做起文章来，那又何异于八股，在文学中并无价值，更说不到能否感动人了。(革命时代的文学)\n\n#### 三闲集\n\n80. 以我这样没有什么可听的无聊的讲演，又在这样大雨的时候，竟还有这许多来听的诸君，我首先应当声明我的郑重的感谢。\n\n81. 中国人的性情是总喜欢调和、折中的。譬如你说，这屋子太暗，须在这里开一个窗，大家一定不允许的。但如果你主张拆掉屋顶，他们就会来调和，愿意开窗了。没有更激烈的主张，他们总连平和的改革也不肯行。\n\n82. 至于幼稚，尤其没有什么可羞，正如孩子对于老人，毫没有什么可羞一样。幼稚是会生长，会成熟的，只要不衰老，衰败，就好。（无声的中国）\n\n83. 惟有中国特别，知道跟着人称托尔斯泰为“卑污的说教人”了，而对于中国“目前的情状”，却只觉得在“事实上，社会各方面亦正受着乌云密布的势利的支配”，连他的“剥去政府的暴力，裁判行政的喜剧的假面”的勇气的几分之一也没有；知道人道主义不彻底了，但当“杀人如草不闻声”的时候，连人道主义式的抗争也没有。剥去和抗争，也不过是“咬文嚼字”，并非“直接行动”。我并不希望做文章的人去直接行动，我知道做文章的人是大概只能做文章的。（“醉眼”中的朦胧）\n\n#### 二心集\n\n84. 体制和精神都已硬化了的人民，对于极小的一点改革，也无不加以阻挠，表面上好像恐怕于自己不便，其实是恐怕于自己不利，但所设的口实，却往往见得极其公正而且堂皇。\n\n85. 他们居然因此念起久不相干的乡下的农夫，海上的舟子来。这真像煞有些博爱。\n\n86. 别的事也如此，倘不深入民众的大层中，于他们的风俗习惯，加以研究，解剖，分别好坏，立存废的标准，而于存于废，都慎选施行的方法，则无论怎样的改革，都将为习惯的岩石所压碎，或者只在表面上浮游一些时。\n\n87. 因为倘看不清，就无从改革，仅大叫未来的光明，其实是欺骗怠慢自己和怠慢听众的。（习惯与改革）\n\n#### 南腔北调集\n\n88. 人必有所缺，这才想起他所需。（由中国女人的脚，推定中国人之非中庸，又由此推定孔夫子有胃病）\n\n89. 真堂吉诃德的做傻相是由于自己愚蠢，而假堂吉诃德是故意做些傻相给别人看，想要剥削别人的愚蠢。\n\n90. 他们何尝不知道什么“中国固有文化”咒不死帝国主义，无论念几千万遍“不仁不义”或者金光明咒，也不会触发日本地震，使它陆沉大海。然而他们故意高喊恢复“民族精神”，仿佛得了什么祖传秘诀。意思其实很明白，是要小百姓埋头治心，多读修身教科书。这固有文化本来就毫无疑义：是岳飞式的奉旨不抵抗的忠，是听命国联爷爷的孝，是斫猪头，吃猪肉，而又远庖厨的仁爱，是遵守卖身契约的信义，是“诱敌深入”的和平。（真假堂吉诃德）\n\n91. 家是我们的生出，也是我们的死所。（家庭为中国之基本）\n\n#### 伪自由书\n\n92. 我们中国人总喜欢说自己爱和平，但其实，是爱斗争的，爱看别的东西斗争，也爱看自己们斗争。\n\n93. 然而军阀们也不是自己亲身在斗争，是使兵士们相斗争，所以频年恶战，而头儿个个是好的，忽而误会消释了，忽而杯酒言欢了，忽而共同御侮了，忽而立誓报国了，忽而……不消说，忽而自然不免又打起来了。（观斗）\n\n94. 孟夫子说，“以天下与人易（为天下得人难）”。其实，能够简单地双手捧着“天下”去“与人”，倒也不为难了。问题就在于不能如此。所以要一把眼泪一把鼻涕，哭哭啼啼，而又刁声浪气的诉苦说：我不入火坑，谁入火坑。（大观园的人才）\n\n95. 先前的开会，是听大众在空地上开的，现在却要防人“趁机捣乱”了，所以只得函请代表，齐聚洋楼，还要由军警维持秩序。先前的要人，虽然出来要“清道”（俗名“净街”,但还是走在地上的，现在却要更防人“谋为不轨”了，必得坐着飞机，须到出洋的时候，才能放心送给朋友。\n\n96. 总而言之，可靠的国之柱石，已经多在半空中，最低限度也上了高楼峻岭了，地上就只留着些可疑的百姓，实做了“下民”，且又民匪难分，一有庆吊（喜事与丧事），总不免“假名滋扰（制造事端进行扰乱）”。\n\n97. 但愿世界上大事件不要增加起来；但愿中国里惨案不要再有；但愿也不再有什么政府成立；但愿也不再有伟人的生日和忌日增添。否则，日积月累，不久就会成个“多难之年”，不但华洋当局，老是为难，连我们走在地面上的小百姓，也只好永远身带“嫌疑”，奉陪戒严，呜呼哀哉，不能喘气了。（“多难之月”）\n\n98. 呜呼，草野小民，生逢盛世，唯有逖听欢呼，闻风鼓舞而已！（王化）（天子的教化）\n\n99. 从我们的儿童和少年的头颅上，洗去喷来的狗血罢！（保留）\n\n#### 准风月谈\n\n100. 我们也真是善于“忍辱负重”的人民，只要不“落浦”，就大抵用一句滑稽化的话道：“吃了一只外国火腿”，一笑了之。（踢）\n\n101. 戏场里失了火。丑角站在戏台前，来通知了看客。大家以为这是丑角的笑话，喝彩了。丑角又通知说是火灾。但大家越加哄笑，喝彩了。我想，人世是要完结在当作笑话的开心的人们的大家欢迎之中的罢。（帮闲法发稳）\n\n102. “非礼勿视，非礼勿听，非礼勿言，非礼勿动”，静静的等着别人的“多行不义，必自毙”，礼也。（礼）\n\n#### 花边文学\n\n103. 不过，如果有人吵闹，有人谩骂，倒可以给作家的没有作品蒙羞，说是本来是要有的，现在给他们闹坏了。他于是就像一个落难小生，纵使并无作品，也能从看客赢得一掬一掬的同情泪。（推己及人）\n\n104. 假使有一个人，在路旁吐一口唾沫，自己蹲下去，看着，不久准可以围满一堆人；又假使又有一个人，无端大叫一声，拔步便跑，同时准可以大家都逃散。真不知是“何所闻而来，何所见而去”，然而又心怀不满，骂他的莫名其妙的对象曰“妈的”！但是，那吐唾沫和大叫一声的人，归根结蒂还是大人物。当然，沉着切实的人们是有的。不过伟人等等之名之被尊视或鄙弃，大抵总只是做唾沫的替代品而已。（一思而行）\n\n105. 不折一兵，不费一矢，单靠生殖机关便革了命，真是绝顶便宜。\n\n106. 一愿：从此不再胡乱和别人去攀亲。二愿：从此眼光离开脐下三寸。（中秋二愿）\n\n#### 且介亭杂文\n\n107. 我只在深夜的街头摆着一个地摊，所有的无非几个小钉，几个瓦碟，但也希望，并且相信有些人会从中寻出合于他的用处的东西。（自序，所谓且介即租界）\n\n108. 运命并不是中国人的事前的指导，乃是事后的一种不费心思的解释。\n\n109. 偌大的“运命”，只要化一批钱或磕几个头，就改换得和注定的一笔大不相同了——就是并不注定。（运命）\n\n110. 叶先生还画了一幅阿 Q 像，好像我那一本《呐喊》还没有在上茅厕时候用尽，倘不是多年便秘，那一定是又买了一本新的了。\n\n111. 所以要说专仗笔墨的作者，首先还得求之于破落户中。他先世也许暴发过，但现在是文雅胜于算盘，家景大不如意了，然而又因此看见世态的炎凉，人生的苦乐，于是真的有些抚今追昔，“缠绵悱恻”起来。一叹天时不良，二叹地理可恶，三叹自己无能。但这无能又并非真无能，乃是自己不屑有能，所以这无能的高尚，倒远在有能之上。你们剑拔弩张，汗流浃背，到底做成了些什么呢？惟我的颓唐相，是“十年一觉扬州梦”，惟我的破衣上，是“襟上杭州旧酒痕”，连懒态和污渍，也都有历史的甚深意义的。可惜俗人不懂得，于是他们的杰作上，就大抵放射着一种特别的神彩，是：“顾影自怜”。（文坛三户）\n     鲁迅散文诗歌精选集\n     野草\n     当我沉默着的时候，我觉得充实；我将开口，同时感到空虚。\n     过去的生命已经死亡。我对于这死亡有大欢喜，因为我借此知道它曾经存活。死亡的生命已经腐朽。我对于这腐朽有大欢喜，因为我借此知道它还非空虚。\n     生命的泥委弃在地面上，不生乔木，只生野草，这是我的罪过。\n     野草，根本不深，花叶不美，然而吸取露，吸取水，吸取陈死人的血和肉，各各夺取它的生存。当生存时，还是将遭践踏，将遭删刈，直至于死亡而腐朽。\n     但我坦然，欣然。我将大笑，我将歌唱。\n     我自爱我的野草，但我憎恶这以野草作装饰的地面。\n     地火在地下运行，奔突；熔岩一旦喷出，将烧尽一切野草，以及乔木，于是并且无可腐朽。\n     但我坦然，欣然。我将大笑，我将歌唱。\n     天地有如此静穆，我不能大笑而且歌唱。天地即不如此静穆，我或者也将不能。我以这一丛野草，在名与暗，生与死，过去与未来之际，献与友与仇，人与兽，爱者与不爱者之前作证。\n     为我自己，为友与仇，人与兽，爱者与不爱者，我希望这野草的死亡与腐朽，火速到来。要不然，我先就未曾生存，这实在比死亡与腐朽更其不幸。\n     去罢，野草，连着我的题辞。\n\n112. 他的口角上现出微笑，似乎自以为大有深意，而将繁霜洒在我的园里的野花草上。（秋夜）\n\n113. 我不过一个影，要别你而沉没在黑暗里了。然而黑暗又会吞并我，然而光明又会使我消失。\n     然而我不愿彷徨于明暗之间，我不如在黑暗里沉没。\n     然而我终于彷徨于明暗之间，我不知道是黄昏还是黎明。我姑且举灰黑的手装作喝干一杯酒，我将在不知道时候的时候独自远行。\n     呜呼呜呼，倘若黄昏，黑夜自然会来沉没我，否则我要被白天消失，如果现是黎明。\n\n114. 我独自远行，不但没有你，并且再没有别的影在黑暗里。只有我被黑暗沉没，那世界全属于我自己。（影的告别）\n\n115. 我早先岂不知我的青春已经逝去了？但以为身外的青春固在：星，月光，僵坠的蝴蝶，暗中的花，猫头鹰的不详之言，杜鹃的啼血，笑的渺茫，爱的翔舞……虽然是悲凉飘渺的青春罢，然而究竟是青春。\n     然而现在何以如此寂寞？难道连身外的青春也都逝去，世上的青年也多衰老了么？\n\n116. 然而现在没有星和月光，没有僵坠的蝴蝶以至笑的渺茫，爱的翔舞。然而青年们很平安。\n     我只得由我来肉搏这空虚中的暗夜了，纵使寻不到身外的青春，也总得自己来一掷我身中的迟暮。但暗夜又在哪里呢？现在没有星，没有月光以至笑的渺茫和爱的翔舞；青年们很平安，而我的面前又竟至于并且没有真的暗夜。\n     希望之为虚妄，正与希望相同。（希望）\n\n117. 她开开板门，迈步在深夜中走出，遗弃了背后的一切冷骂和毒笑。\n\n118. 我梦魇了，自己却知道是因为将手搁在胸脯上了的缘故；我梦中还用近平生之力，要将这十分沉重的手移开。（颓败线的颤动）\n\n119. 我懊恼的想：足下，我不是什么伟人，你无须到我身上来寻作论的材料。（死后）\n\n120. 记念几个死者和生者和未生者\n     目前的造物主，还是一个怯弱者。\n     他暗暗地使天变地异，却不敢毁灭一个这地球；暗暗地使生物衰亡，却不敢长存一切尸体；暗暗地使人类流血，却不敢使血色永远鲜秾；暗暗地使人类受苦，却不敢使人类永远记得。\n     他专为他的同类——人类中的怯弱者——设想，用废墟荒坟来衬托华屋，用时光来冲淡苦痛和血痕；日日斟出一杯微甘的苦酒，不太少，不太多，以能微醉为度，递给人间，使饮者可以哭，可以歌，也如醒，也如醉，若有知，若无知，也欲死，也欲生。他必须使一切也欲生；他还没有灭尽人类的勇气。\n     几片废墟和几个荒坟散在地上，映以淡淡的血痕，人们都在其间咀嚼着人我的渺茫的悲苦。但是不肯吐弃，以为究竟胜于空虚，各各自称为“天之僇民”，以作咀嚼着人我的渺茫的悲苦的辩解，而且悚息着静待新的悲苦的到来。新的，这就使他们恐惧，而又渴欲相遇。\n     这都是造物主的良民。他就需要这样。\n     叛逆的猛士出于人间；他屹立着，洞见一切已改和现有的废墟和荒坟，记得一切深广和久远的苦痛，正视一切重叠淤积的凝血，深知一切已死，方生，将生和未生。他看透了造化的把戏；他将要起来使人类苏生，或者使人类灭尽，这些造物主的良民们。\n     造物主，怯弱者，羞惭了，于是伏藏。天地在猛士的眼中于是变色。（淡淡的血痕中）\n\n121. 也许有人死伤了罢，然而天下却似乎更太平。窗外的白杨的嫩叶，在日光下发乌黑金光；榆叶梅也比昨日开得更烂漫。\n\n122. 缥缈的名园中，奇花盛开着，红颜的静女正在超然无事的逍遥，鹤唳一声，白云郁然而起……这自然使人神往的罢，然而我总记得我活在人间。（一觉）\n\n#### 朝花夕拾\n\n123. “叫呀，你父亲要断气了。快叫呀！”衍太太说。\n     “父亲！父亲！”我就叫起来。\n     “大声！他听不见。还不快叫？！”\n     “父亲！！！父亲！！！”\n     他已经平静下去的脸，忽然紧张了，将眼微微一睁，仿佛有一些苦痛。\n     “叫呀！快叫呀！”他催促说。\n     “父亲！！！”\n     “什么呢？……不要嚷。……不……”他低低地说，又较急地喘着气，好一会，这才复了原状，平静下去了。\n     “父亲！！！”我还叫他，一直到他咽了气。\n     我现在还听到那时的自己的这声音，每听到时，就觉得这却是我对于父亲的最大的错处。（父亲的死）\n\n124. 人说，讽刺和冷嘲只隔了一张纸，我以为有趣和肉麻也一样。孩子对父母撒娇可以看得有趣，若是成人，便未免有些不顺眼。放达的夫妻在人面前的互相爱怜的态度，有时略一跨出有趣的界线，也容易变为肉麻。\n\n#### 旧体诗\n\n125. 把酒论当世，先生小酒人。\n     大圜犹酩酊，微醉自沉沦。\n     此别成终古，从兹绝绪言。\n     故人云散尽，我亦等轻尘！\n\n126. 题赠冯蕙熹\n     杀人有将，救人为医。\n     杀了大半，救其孑遗 。\n     小补之哉，乌乎噫嘻！\n\n127. 忍看朋辈成新鬼，怒向刀丛觅小诗。\n\n128. 血沃中原肥劲草，寒凝大地发春华。\n\n129. 战云暂敛残春在，重炮清歌两寂然。\n\n130. 二十二年元旦\n     云封高岫护将军，霆击寒村灭下民。\n     到底不如租界好，打牌声里又新春。\n131. 好东西歌\n     南边整天开大会，北边忽地起烽烟，北人逃难南人嚷，请愿打电闹连天。\n     还有你骂我来我骂你，说得自己蜜样甜。\n     文的笑道岳飞假，武的却云秦桧奸。\n     相骂声中失土地，相骂声中捐铜钱，失了土地捐过钱，喊声骂声也寂然。\n     文的牙齿痛，武的上温泉，后来知道谁也不是岳飞或秦桧，\n     声明误解释前嫌，大家都是好东西，终于聚首一堂来吸雪茄烟。\n","tags":["读书"],"categories":["记录"]},{"title":"月亮与六便士-毛姆","url":"/posts/b56c83b9.html","content":"\n1. 这一定是世间无数对夫妻的故事。这种生活模式给人以安详亲切之感。它使人想到一条平静的小河，蜿蜒流过绿茸茸的牧场，与郁郁的树荫交相掩映，直到最后泻入烟波浩渺的大海中。但是大海却总是那么平静，总是沉默无言、声色不动，你会突然感到一种莫名的不安。也许这只是我自己心中的一种怪想法，我总觉得大多数人这样度过一生好像欠缺一点什么。我承认这种生活的社会价值，我也看到了它的井然有序的幸福，但是我的血液里却有一种强烈的愿望，渴望一种更狂放不羁的旅途。这种安详宁静的快乐好像有一种叫我惊惧不安的东西。我的心渴望一种更加惊险的生活。只要在我的生活中能有变迁——变迁和无法预见的刺激，我是准备踏上怪石嶙峋的山崖，奔赴暗礁满布的海滩的。\n<!--more-->\n2. 我看不透她要丈夫回来是因为爱他呢，还是因为怕别人议论是非；我还怀疑使她肠断心伤的失恋之痛是否也掺杂着虚荣心受到损害的悲伤；这种疑心也使我很惶恐。我那时还不了解人性多么矛盾，我不知道真挚中含有多少做作，高尚中蕴藏着多少卑鄙，或者，即使在邪恶里也找得着美德。\n\n3. “我告诉你我必须画画儿。我由不了我自己。一个人要是跌进水里。他游泳游得好不好是无关紧要的，反正他得挣扎出去，不然就得淹死。”\n\n4. 但是我总是害怕这出戏自己演的不像，并且不能一直演到底，这就妨碍了我装出一副道貌岸然的样子。\n\n5. 他似乎一点也没有灰心丧气。别人的意见对他是毫无影响的……在我同他打交道的时候，正是这一点让我狼狈不堪。有人也说他不在乎别人对他的看法，但这多半是自欺欺人。一般来说，他们能够自行其是是因为相信别人都看不出来他们的怪异的想法；最甚者也是因为有几个近邻知交表示支持，才敢违背大多数人的意见行事。如果一个人违反传统实际上是他这一阶层人的常规，那他在世人面前做出违反传统的事倒也不困难。相反地，他还会为此洋洋自得。它既可以标榜自己的勇气又不致冒什么风险。但我总觉得事事要邀获别人批准，或许是文明人类最根深蒂固的一种天性。一个标新立异的女人一旦冒犯了礼规，招致了唇枪舌剑的非议，再也没有谁会想她那样飞快的去寻找尊严体面的庇护了。那些告诉我他毫不在乎别人对他们的看法的人，我是绝不相信的。这只不过是一种无知的虚张声势。他们的意思是：他们相信别人根本不会发现自己的微疵小瑕，因此更不怕别人对这些小过失加以谴责了。\n\n6. “我还从来没有像恨他这样恨过一个人呢。你知道，我一直在宽慰自己说，不管这件事继续多久，最终他还是要我的。我想在他临终的时候他会叫我去，我也准备去。我会像一个母亲那样看护他，最后我还会告诉他，过去的事我不记在心里，我一直爱他，他做的任何事我都会原谅他。”\n   女人们总是喜欢在她们所爱的人临终前表现的宽宏大量，她们的这种偏好叫我实在难以忍受。有时候我甚至觉得她们不愿意男人寿命太长，就是怕把演出这幕好戏的机会拖得太久。\n\n7. “如果他的生活真的贫困不堪，我还是准备帮助帮助他。我会给你寄一笔钱去，在他需要的时候，你可以一点一点地给他。”\n   但是我知道她答应做这件事并不是出于仁慈的心肠。有人说灾难不幸可以使人性高贵，这句话并不对；叫人做出高尚行动的有时候反而是幸福得意，灾难不幸在大多数情况下只能使人们变得心胸狭小，报复心强。\n\n8. 我说不上她是不是爱他。这个可怜的傻瓜，他不是一个能引起女人爱情的人物。但施特略夫太太眼睛里的笑容是含着爱怜的，在他缄默后面也可能隐藏着深挚的感情。她并不是他那相思倾慕的幻觉中的令人神驰目眩的美女，但她却另有一种端庄秀丽的风姿。\n   她的这种体型可能对雕塑家比对服装商更有吸引力。\n   我并不认为她脑筋如何聪明或者有什么风趣，但她那种严肃、专注的神情却很使人感到兴趣。她的稳重沉默里似乎蕴藏着某种神秘。我不知道为什么她要嫁给戴尔克·施特略夫。虽然她和我是同乡，我却猜不透她是怎样一个人。我看不出她出身于什么社会阶层，受过什么教育，也说不出她结婚前干的是什么职业。她说话不多，但她的声音很悦耳，举止也非常自然。\n\n9. 她对自己的丈夫从来就没有什么感情，过去我认为她爱施特略夫，实际上只是男人的爱抚和生活的安适在女人身上引发的自然反应。大多数女人都把这种反应当作爱情了。这是一种对任何一个人都有可能产生的被动的情感，正像藤蔓可以攀附在随便哪棵树上一样。正是这种感情可以叫一个女孩子嫁给任何一个需要她的男人，相信日久天长便会对这个人产生爱情，所以世俗的见解便断定了它的力量。它只不过是对有保障的生活的满足，对拥有家资的骄傲，对有人需要自己的沾沾自喜，和对建立起自己的家庭洋洋得意而已。\n\n10. 护士用她那双宁静、慈祥的眼睛望着戴尔克，这双眼睛曾经看到过人世的一切恐怖和痛苦，但是因为那里面装的是一个没有罪恶的世界的幻景，所以她的目光是清澈的。\n\n11. “刚才在医院里他们对我说我可以等着。他们给我搬来一把椅子，我就在病房外面坐着。等到她已经不省人事的时候他们叫我进去了。她的嘴和下巴都被酸液烧伤了。看到她那可爱的皮肤满是伤痕真叫人心痛极了。她死得非常平静，还是护士告诉了我我才知道她已经死了。”\n\n12. “世界是无情的、残酷的。我们生到人世间没有人知道是为了什么，我们死后没有人知道到何处去。我们必须自甘卑屈。我们必须看到冷静寂寥的美妙。在生活中我们一定不要出风头、露头角，惹起命运对我们注目。让我们去追寻那些纯朴、敦厚的人的爱情吧。他们的愚昧远比我们的知识更为可贵。让我们保持沉默，满足自己的小小的天地，像他们一样平易温顺吧。这就是生活的智慧。”但是我不想同他争辩，宣讲我的处事方针。\n\n13. 人们动不动就谈美，实际上对这个词并不理解；这个词已经使用的太滥，失去了原有的力量；因为成千上万的琐屑事物都分享了“美”的称号，这个词已经被剥夺掉它的崇高含义了。一件衣服，一只狗，一篇布道词，什么东西人们都用“美”来形容，当他们面对面地遇到真正的美时，反而认不出它来了。他们用以掩饰自己毫无价值的思想的虚假夸大使他们的感受力变得迟钝不堪。正如一个假内行有时也会感觉自己是在无中生有地伪造某件器物的精神价值一样，人们已经失掉了他们用之过滥的赏识能力。但是施特略夫，这位本性无法改变的小丑，对于美却有着真挚的爱和理解，正像他的灵魂也是诚实、真挚的一样。对他来说，美就像虔诚教徒心目中的上帝一样；一旦他见到真正美的事物，他变得恐惧万分。\n\n14. 我觉得他还是有希望让过去的事成为过去的。我希望随着时间的流逝，现在他觉得无法忍受的悲痛会逐渐减轻，记忆会逐渐淡薄：老天是以慈悲为怀的！他终究会再度挑起生活的担子来的。他年纪还很轻，几年之后再回顾这一段惨痛遭遇，在悲痛中或许不无某种愉悦的感觉。或早或迟，他会同一个朴实的荷兰女人结婚，我相信他会生活的很幸福的。想到他这一辈子还会画出多少幅蹩脚的图画来，我的脸上禁不住浮现出笑容。\n\n15. 我开始觉得我对斯特里克兰德的厌恶只有靠我单方面努力才能维持下去。我认识到我精神上的弱点，看到我对他的态度实在有点儿装腔作势。\n\n16. 说不定作家在创作恶棍时实际上是在满足他内心深处的一种天性，因为在文明社会中，风俗礼仪迫使这种天性隐匿到潜意识的最隐秘的底层下；给予他虚构的人物以血肉之躯，也就是使他那一部分无法表露的自我有了生命。他得到的满足是一种自由解放的快感。\n    作家更关心的是了解人性，而不是判断人性。\n\n17. 每个人都被囚禁在一座铁塔里，只能靠一些符号同别人传达自己的思想；而这些符号并没有共同的价值，因此他们的意义是模糊的、不确定的。我们非常可怜的想把自己心中的的财富传送给别人，但是他们却没有接受这些财富的能力。因此我们只能孤独地行走，尽管身体互相依傍却并不在一起，既不能了解别人也不能为别人所了解。我们好像住在异国的人，对于这个国家的语言懂得非常少，虽然我们有各种美妙的、深奥的事情要说，却只能局限于会话手册上那几句陈腐、平庸的话。我们的脑子里充满了各种思想，而我们能说的只不过是像“园丁的姑母有一把伞在屋子里”这类话。\n\n18. “我想你失掉勇气了。你肉体的软弱感染了你的灵魂。我不知道是怎样一种无限思慕之情把你攫在手中，逼着你走上一条危险的、孤独的道路，你一直在寻找一个地方，希望到达那里就可以使自己从折磨着你的精灵手中解放出来。我觉得你很像一个终生跋涉的香客，不停地寻找一座根本不可能存在的神庙。我不知道你寻求的是什么不可思议的涅槃。你自己知道吗？也许你寻找的是真理同自由，在一个短暂的时间里你认为或许能在爱情中获得解脱。我想，你的疲倦的灵魂可能期望在女人的怀抱里求得休憩，当你在那里没能找到的时候，你就开始恨她了。你对她一点也不怜悯，因为你对自己就不怜悯。你把她杀死是因为惧怕，因为你还为你刚刚逃脱的危险而索索发抖呢。”\n\n19. 在他重新控制住自己以后，看到那个他发泄情欲的女人，他甚至会不寒而栗。他的思想这时会平静的漂浮在九天之上，他对那个女人感到又嫌弃又可怕，也许那感觉就像一只翩翩飞舞于花丛中的蝴蝶，见到它胜利的蜕身出来的肮脏的蛹壳一样。\n\n20. 我很怀疑，阿伯拉罕是否真的糟蹋了自己。做自己想做的事，生活在自己喜爱的环境里，淡泊宁静、与世无争，这难道是糟蹋自己吗？与此相反，做一个著名的外科医生，年薪一万磅，娶一位漂亮的妻子，就是成功吗？我想，这一切都取决于一个人如何看待生活的意义，取决于他认为对社会应尽什么义务，对自己有什么要求。但是我还是没有说什么；我有什么资格同一位爵士争辩呢？\n\n21. “世界上只有少数人能够最终达到自己的理想。我们的生活很单纯、很简朴。我们并不野心勃勃，如果说我们也有骄傲的话，那是因为在想到通过双手获得的劳动成果时的骄傲。我们对别人既不嫉妒，更不怀恨。唉，我亲爱的先生，有人认为劳动的幸福是句空话，对我说来可不是这样。我深深感到这句话的重要意义。我是个很幸福的人。”（布吕诺船长）\n\n22. 自踏进屋门的一分钟起，她就谈论这个、品评那个，话语滔滔不绝。我们刚才那场谈话在库特拉斯太太进屋以后显得非常遥远、非常不真实了。\n\n23. 上帝的磨盘转动的很慢，但是却磨得很细。\n\n24. 为了使灵魂安宁，一个人每天至少该做两件他不喜欢的事。\n\n25. 制造神话，是人类的天性。像那些出类拔萃的名人，人们总是对他们生活中的神秘或意外紧抓不放，深信不疑，缔造传奇，无限狂热。这是对平凡生活的浪漫抗议。传奇事件成为英雄通往不朽的最可靠的护照。\n\n26. 这样的安逸总让我惊惧。我的心渴望更加惊险的生活。只要我能有所改变——改变和不可预知的冒险，我将踏上怪石嶙峋，哪怕激流险滩。\n\n27. 女人总喜欢在爱人临终前表现的大度不凡，这始终让我感到不安。有时候，好像她们不情愿男人寿命太长，就是怕没机会把这一幕好戏尽早上演。\n\n28. 一个以身手敏捷为荣的扒手，一定会对一个粗心大意的女人感到愤慨，因为她把装满珠宝的包包随便落在了马车上。\n\n29. 我不太愿意摆出道德的架势愤慨指责，这样总显得洋洋得意，会让任何有幽默感的人觉得装腔作势，\n\n30. 这位医生留着胡子，身材矮小，穿着白大褂，态度很生硬。他显然只把病人当病人，把焦急的亲属当累赘，没有半点通融的余地。\n\n31. 护士用她那双平静、善良的眼睛望着德克，这双眼睛里不知看见过多少恐惧和痛苦，可那里面仍是一个没有罪恶的理想世界，所以依然平静。\n\n32. “世界冰冷而残酷。没有人知道我们从哪里来，到哪里去。我们必须身怀谦卑。我们必须看到宁静之美。我们必须隐忍的生活，这样命运之神才不会注目我们。让我们去追寻淳朴、善良者的爱吧。他们的无知比我们的知识更可贵。让我们保持沉默，满足于我们小小的角落，像他们一样平静温顺吧。这才是生活的智慧。”\n\n33. 我想起在蒙马特那间温馨的画室里，斯特洛夫和他的妻子，这幸福的一对儿，他们诚实善良，热情好客，但这种生活却被一桩偶然事件无情的击碎了，在我看来真是残酷；但最残忍的是，它发生了却和几乎没发生一样。世界依然继续，没有谁因这件事而活得更惨。我觉得，就连德克，也会很快忘记，他是一时悲痛，而非爱得深沉。至于布兰奇，无论她最初带着怎样光明的希望和梦想，死了就跟没来过世上一样。仿佛一切都很空虚，没有意义。\n\n34. 也许，在我们的潜意识中，我们很看重自己对别人的影响，别人是否重视我们对他的看法很重要，如果我们对他的看法没有影响到他，我们就很讨厌他。我想，这正是人性虚荣最痛的创伤。\n\n35. 在社会交往中，一个人只让你看到他希望别人接受的一面，你只能凭他不经意的举手投足，一颦一笑，对他有所了解。有时候，人们带着完美的假面，久而久之，真会弄假成真。\n\n36. 做自己最想做的事，过自己想过的生活，心平气和，怎么能叫作践自己？做一个有名的外科医生，一年赚一万英镑，娶一位漂亮的妻子，就是成功？我想，这取决于你如何看待生活的意义，取决于你对社会应尽什么义务，你对自己有什么要求。但我仍然闭口不言，我有什么资格和一位爵士争辩呢！\n\n37. 书译后记：我们从哪里来？我们是谁？我们到哪里去？这是最终极的精神追问。这幅画如此深邃而又震撼，而在小说中，它完成了主人公的精神性追问，最后被付之一炬，暗示着什么？当人类的精神抵达了它自身，它便超越了自我与他人、肉体与灵魂，它就在它自身中守护住它自身并且为这个自身而存在，不再需要任何物质性的东西，哪怕是所谓的艺术杰作。这正是艺术创作的心声：当你完成了最伟大的作品，它便离你而去，因为艺术的最高诉求并非任何实体，而是那遥不可及的精神的涅槃。付之一炬正是涅槃的象征（这话巧了，傻逼）。和高更相比，斯特里克兰的死和他的杰作的毁灭更显得撼动人心。\n","tags":["读书"],"categories":["记录"]},{"title":"看见-柴静","url":"/posts/48256932.html","content":"\n#### 第一章 别当了主持人就不是人了\n\n1. 白岩松有天安慰我：“人们声称的最美好的岁月其实都是最痛苦的，只是事后回忆起来的时候才那么幸运。\n\n2. 旁边站着一个戴赭黄色头巾的维族老人，我还没来得及张口问什么，她忽然回身把我抱住，在我肩头哭了起来。我下意识的搂着她一耸一耸的肩膀，脸贴着她的脸，她的皱纹冻得冰凉。\n\n  <!--more-->\n\n#### 第二章 那个温热的跳动就是活着\n\n3. 离开的时候，我看到另一张病床上的小伙子，脖子上帮着一个痰巾，上面有一血秽迹，小腿露在被子外面，全是曲张的静脉。我们走过的时候，他连看都不看一眼。我停下来看他。他没有昏迷，眼睛是睁着的，只是什么表情也没有。日后，我在很多绝望的人脸上看过同样的空白。我想跟他说几句话，调查员举手制止了。\n\n4. 我一下子睁大眼睛，血管在颈上蹦蹦的跳。我摸着血管，这就是最原始的东西。或者就是活着。在所有的灾难中，这个温热的跳动就是活着。\n\n#### 第四章 是对峙，不是反抗\n\n5. 像天贺这样柔善的胖子，如果能选，更愿意呆在家里跟金刚鹦鹉一起听交响乐，但他报告山西繁峙矿难，冒着漆黑的夜雨走山路进去，连个接应的人都没有。三十八位矿工死亡，被瞒报成二死两伤，遗体被隐匿或者焚毁。此事中有十一位记者收了现金和金元宝帮助隐瞒事实，被批露出来后，开会时领导表扬大胡子有职业操守，让他谈两句感想。他胖胖的一乐：“没人给我送啊。”大伙哄笑了事。\n   事后他说起那个矿井，一百三十米深，罐笼到底时，一声巨响，他的膝盖一阵哆嗦，抬起头，看不见洞口的蓝光。“生和死真他妈脆弱，就这么一百米，这些人天天这么过，超负荷的工作。我难过的是，他们很知足，觉得这么比在地里种地强多了。”他拍到那些被藏得尸体遗骸，闻了被烧过的裹尸布，“你要是真见过他们的样子，就不可能为了几个钱把灵魂卖了。”\n\n6. 《红楼梦》里写贾宝玉讨厌“世事洞明皆学问，人情练达即文章”这句话，觉得市侩。我原来也是，一腔少年狂狷之气，讲什么人情世故？采访时万物由我驱使，自命正直里有一种冷酷。这跟流血的手指要不是来自亲人一样的同事，我恐怕也不会在意，他对我一句责备也没有，也正因为这个，我隐隐有个感觉，为了一个目的———哪怕是一个正义的目的，就像车轮一样狠狠碾过人的心，也是另一种戾气。（柴静为了采访警察局长，同事托了警察同学的关系终于采访局长，而柴静却提问刁钻，咄咄逼人，不留情面，让同事很尴尬）\n\n#### 第五章 我们终将浑然难分，像水溶于水中\n\n7. 我问张北川：“我们的社会为什么不接纳同性恋者？”\n   他说：“因为我们的性文化里，把生育当做性的目的，把无知当做纯洁，把愚昧当作德行，把偏见当成原则。”\n\n8. 生和死，苦难和苍老，都蕴含在每一个人的体内，总有一天我们会与之遭逢。\n   我们终将浑然难分，像水溶于水中。\n\n#### 第六章 沉默在尖叫\n\n9. 这些早就干枯失血的花瓣给我一个刺激，人是一样的，对幸福的愿望一样，对自身完整的需要一样，只是她生在这儿，这么活着，我来到那儿，那么活着，都是偶然。\n\n#### 第八章 我只是讨厌屈服\n\n10. “钱数这么小，很多人觉得失去它并不可惜。”我说。\n    “今天你可以失去获得它的权利，你不抗争，明天你同样会失去更多的权利，人身权，财产权，包括土地、房屋。中国现在这种状况不是偶然造成的，而是长期温水煮青蛙的一个结果，大家会觉得农民的土地被侵占了与我何干，火车不开发票、偷税漏税与我何干，别人的房屋被强行拆迁与我何干，有一天，这些事情会落在你身上。”\n\n11. 陈丹青其他的学生都不再考了，他说：“我接触最多的情况不是质疑、反抗、叫骂，而是——这是让我最难过的，所有人都认了。”\n    “怎么叫‘认了’？”我问他。\n    他笑了一下:“我现在随便到马路上拉一个人来，你见到这个人，就知道他认了，从很深处认了。”\n\n12. 李刚说他非常意外：“不在预期当中”。\n    “为什么？”\n    他说：“因为老百姓在向强力机构发出疑问的时候，已经习惯了没有回应。”\n\n#### 第九章 许多事情，是有人相信，才会存在\n\n13. 我问一个哈佛的老教授，社会上这么多问题，改起来有很多惰性，怎么改？他说，让问题浮出水面，让它“不得不”改变。\n\n14. 你说得太天真，你能做的只有相信，却不能证明它的存在。\n\n#### 第十章 真相常流失于涕泪交加中\n\n15. 人们围拢的时候，表达的很可能只是一种情绪。\n\n16. 不能因为一样东西死去就神化它。\n\n17. “这个事件中没有人是正义的，别打着这个旗号，大家都是为了利益。”\n    我原以为，这是一个黑白分明的世界，分为被欺凌的弱者和使用暴力的劫掠者。对他提供的信息进行印证后，我才发现，拍卖中被他劫掠的人有些确实不是单纯的受害人，他们最初都是要从中牟利的，而且牟的都不是正常的利益，只不过，在丛林法则下，大鱼吃小鱼，最后被吃掉了。\n    那些向我们举报的人领头闹事，把一个厂长赶下台，焊上铁门不让厂子生产，私卖设备分了一部分钱，不久又把另外一个厂长赶下台，又分了一部分钱。等陈坤志把拍卖控制成交以后，他们以暴力相抗，拒不交地，把厂房和荒地拆成一个个格子租出去，又是一笔钱，都是这十几个人掌握了……这些人不是我出发前想象的受害工人阶级，没有群像，没有长得一模一样的穷苦人群体，只有一个一个诉求利益的人。\n    我没克制住好奇，请每个人把遗书念了一遍，每个人都声泪俱下。\n\n18. 保持对不同论述的警惕，才能保持自己独立性。探寻就是要不断相信、不断怀疑、不断幻灭、不断摧毁、不断重建，为的只是避免成为偏见的附庸。或者说，煽动各种偏见互殴，从而取得平衡，这是我所理解的“探寻”。\n\n19. 如果你用悲情贿赂过读者，你也一定用悲情取悦过自己，我猜想柴静做节目、写博客时，常是热泪盈眶的。很诚实的说，悲情、苦大仇深的心理基础是自我感动。自我感动取之便捷，又容易上瘾，对它的自觉抵制，便尤为可贵。每一条细微的新闻背后，都隐藏一条冗长的逻辑链，在我们这，这些逻辑链绝大多数是同一朝向，正是因为这不能言说又不言而喻的秘密，我们需要提醒自己：绝不能走到这条逻辑的半山腰就嚎啕大哭。\n    准确是这一工种最重要的手艺，而自我感动、感动先行是准确最大的敌人，真相常流失于涕泪交加中。\n\n#### 第十一章 只求了解与认识而已\n\n20. 是的，生命往往要以其他生命为代价，但那是出于生存。只有我们人类，是出于娱乐。\n\n21. 无论如何，你看到的总是你自己。死在路上的甲虫，它是像你一样为了生存而奋斗的生命，像你一样喜欢太阳，像你一样懂得害怕和痛苦，现在，它却成了腐烂的肌体，就像你今后也会如此。\n\n22. 如果我们对一只猫的死亡漫不经心，我们也会同样漫不经心地蔑视人的痛苦和生命。\n\n23. 有的笑容背后是咬紧牙关的灵魂。\n\n24. 真实的人性有无尽的可能。善当然存在，但恶也可能一直存在。歉意不一定能弥补，伤害却有可能被原谅，忏悔也许存在，也许永远没有，都无法强制，强制出来也没有意义。一个片子里的人，心里有什么，记者只要别把石头拦着，他自己会流淌出来的，有就有，没有就没有。\n\n25. 斯宾诺莎：希望和失望也绝不能是善。因为恐惧是一种痛苦，希望不能脱离恐惧而存在，所以希望和失望都表示知识的缺乏，和心灵的软弱无力。他界定观察的实质是：不赞美，不责难，甚至也不惋惜，但求了解认识而已。\n\n26. 什么是真实？真实是很丰富的，需要有强大的能力才能看到，光从恶中看到真实是很单一的，人能从洁白里拷打出罪恶，也能从罪恶中拷打出洁白。\n\n27. 预设主题进行创作，是一种可怕的习惯。往往大家认为拍弱者，都要拍成高尚的，或者让人同情心酸的，但是，马宏杰超越了这种“政治正确”。《耍猴人的江湖》\n\n#### 第十二章 新旧之间没有怨讼 唯有真与伪才是大敌\n\n28. 有一年他去日本 nhk 电视台，密密麻麻的中国影像资料。操作的小姐问他看什么？他说看东北。问东北什么，他说看张学良，“张学良调出来了，最早的是九一八事变三天后的九月二十一日，三十分钟，张学良的演讲。我记得很清楚，里面说了一句，委员长说，两年之内，不把日本人赶出满洲，他就辞职。这是张学良演讲里说的，我当时很受刺激。”\n    他的刺激是，我们也是电视工作者，但没有这样的资料，“而且这三十分钟拿回来，谁也不把它当回事”。\n    他跟我说：“是林语堂还是陈寅恪说的，这个民族有五千年历史，非常了不起。他说，不管怎么个混法，能混五千年就了不起。我觉得他一针见血。这个民族浅薄，没有文化，不重视历史。我说这个话就不怕得罪谁，就这么浅薄。\n\n29. “我对电视台的使命和节目编排没有什么想法，我也不愿意想，因为那样会耽误我干正事。我有那个时间，就能多采访一个人，多整理一些材料，这样可能更有功德。我现在想，我 2002 年为什么会得病，就是老想不该想的事，现在为什么快乐，就是不想那些事，只想怎么把该做的事情做好，这一点可能更重要。”（有一位同行请他谈一下对当下电视台纪录片的看法）（崔永元）\n\n#### 第十三章 事实就是如此\n\n30. 照片是山西省林业厅对外发布的，我们采访新闻发言人关克：“你们对外发布虎照时有什么依据？”\n    关克说：“我们没有鉴定记录，也没有开论证会，但我们的结论是真的。”\n    “为什么政府部分只发布一个结论而不发布依据？”\n    “我们这么多年就是这么做的。”\n    “那面对质疑，为什么不重新组织调查和鉴定呢？”\n    “只有民间的质疑啊，没有上级部门疑问。”\n    “政府不是首先要面对公众吗？”\n    “那我回答不了。”\n    “你怎么看公众的疑问？”\n    他说：“连国外的专家都没说是假的，这些人就是不爱国。”\n\n31. 唯有深刻的认识事物，才能对人和世界的复杂性有了解和体谅，才有不轻易责难和赞美的思维习惯。\n\n32. 2012 年四月，周正龙出狱，对媒体说，要用余生上山寻虎。\n\n#### 第十四章 真实自有万钧之力\n\n33. 我说怎么了，他说的非常委婉，生怕伤着我：“你太流畅了。”\n    “你是说我太刻意了？”\n    “你准备的太精心。”\n    “嗯，我倒也不是打好底稿，非要这样说的。”\n    “不是这个意思，我当时看到你的编导蹲在地上给你举着话筒，心里就咯噔一下。他还给你递着这些东西，我就觉得不舒服，这么大的事儿发生了，不该有这些形式和设计。其实那些东西放在地上，也没有关系，或者，你停一下，说，我去拿一下，更真实。”\n    史努比委婉的说了这么多，其实就是一句话：“你是真的么？”\n\n34. “就在两个大石板底下……”\n    我蹲下，听见他说：“她说叔叔，你救我。”\n    他呓语一样：“我说我会救你的，可是我搬不动啊，我喊了，我疯了一样的使劲，我搬不动啊柴静，我只给了她两个大白兔奶糖。”他转过头来，脸憋得青紫，啃咬着自己的拳头，要把什么东西堵住，再这样他会憋死的。\n    我把手放在他胳膊上，像拍婴儿一样拍着。\n    他的喉咙里像是突然拔掉塞子一样，哭声仰面向天喷出来：“只有两个……糖……啊……”\n    我没带纸，兜里只有皱巴巴的口罩，我拿出来，把铁线抽了，给他。\n    他攥着，拧着，也不擦脸，头上全是青筋。\n    我们俩盘腿坐在空空的水泥地上，头顶是三楼灯泡昏暗的灯。他大声哭号，我默然坐着，身边常常有人走过，没人奇怪，也没人注意。他们已经看得太多。\n\n35. 回到家里，等待我的是一叠叠的账单和空荡荡的冰箱。去超市买东西，我会完全迷失……一群女孩一边喝着水果颜色的饮料，一边谈着化妆品和电影，我看见她们的嘴唇在动，看见他们灿烂的笑容和挑染的头发，我不知该说些什么，我会低头看着自己的靴子，然后看到上面的血迹。（记者，做灾难和战争的报道）\n\n36. 挖墓穴的农民在边上抽烟谈笑，生老病死在这片土地是平淡的永恒。我坐在棺木边的地上，手里攥一把黄土，天上白云流过。\n\n#### 第十七章 无能的力量\n\n37. 如果已经理解，然后再去跟他们说一句话，跟反感而去说一句话是不一样的。\n\n38. 我又问了几个问题，问到他为什么到农村来，他说：“城市人思考的速度好快，我跟不上。”\n    “那个快会有问题吗？”\n    卢安克说：“我就是跟不上。他们提很多问题，我没办法思考，慢慢的来，他们早就已经到下一个话题了。”\n\n39. “……我们去那孩子家，那时候正烧火。你说你冷了，他很认真的，他一定要把那个木柴劈开来给你取暖。后来他发现，你是有目的的，你想采访有一个好的气氛，有做事情的镜头，有火的光，有等等这样的目的。他发现的时候，就觉得你没有百分之百地把自己交给他，他就不愿意接受你，而你要他带你去菜地看，他不愿意。”\n\n40. “目的是好的，但是是空的。”\n    “空的？”\n    “空的，做不了的。如果是有了目的，故意去做什么了，没有用的，没有效果，那是假的。”他的声音很慢，我从没听过一个人在镜头面前的语速这么慢。\n    “你是说这样影响不到别人？”我喃喃自语。\n    “这个很奇怪，想影响别人，反而影响不到。因为他们会感觉到这是为了影响他们，他们才不接受。”\n    “很多时候我们的困难是在于说，我们是……”——不，不要说“我们”了，不要再伪装成“我们”来说话了，……我们是成年人，这些经验成为一种障碍，我能够意识到它，但是不知道该怎么去做。”\n    “把学生的事情当成认真的，自己的事情不要有目的，我觉得就可以。”\n\n41. “因为我最大的恐惧就是跟别人不一样，我会被挑出来站在什么地方。大家说，看，他跟我们不一样。怎么才能克服这种恐惧？”\n    “以前我不想见记者，不想给别人看到我做的事情。后来我看到曼德拉说的一句话，他说，如果因为怕别人看到就不做自己觉得该做的事情，把它隐藏起来，那就等于说谁都不能做这个事情。如果自己把它做出来并让别人看到，那就等于说谁都可以这样做，然后很多人都会这样去做。因为这句话我才考虑接受你们的采访。”\n\n42. 我们在路上多见到醉汉，卢安克说他曾经反感这里的人总是喝酒，后来他理解这些成年人，跟打打杀杀的孩子一样，“情感得不到发挥，生活不允许，如果太清醒，他难受了。”\n\n43. 我问：“可是就连在你身边这些小男孩的身上，我都能看到他们对人本能的一种喜爱或者接近，这好像是天性吧？”\n    “他们属于我，跟爱情的那种属于我是不一样的。一种能放开，一种是放不开的。”\n    “能放开什么？”我还是没听明白。\n    “学生走了，他们很容易就放开了，没有什么依赖的。但我看电视剧上那种爱情是放不开的，对方想走很痛苦的。”\n    “你不向往这种依赖和占有？”\n    “不。”\n    我可以从智力上理解这句话，但人性上我抵达不了。我问：“这样的自由你能承受吗？”\n    他微微一笑：“我愿意。”\n\n44. 小时候，他跟双胞胎哥哥都很内向，不管别的小孩怎么欺负，都不反抗。他写过：“这些痛苦也不是没有用，从痛苦的经历中我得到将来面对问题时需要的力量。”\n\n45. 事后他写：“这些事情全都失败了，失败得非常严重。但假如我当时就成功，不成熟的事情就会变得很大，而我自己就会变成我不喜欢的哪种人，命运通过失败指出应该走的路。”\n\n46. “如果自己作为老师，想象学生怎么样，总是把他们的样子跟觉得该怎么样比较，是教育上最大的障碍。这样我没办法跟他们建立关系，这个想象就好像一面隔墙在学生和我之间，所以我不要这个想象。”\n    “我们平常接触的很好的老师也会说，我想要一个有创造力的、有想象力的学生，难道你没有吗？”\n    “那学生做不到，他会不会放弃呢？会不会怪这个学生？”\n\n47. “我以前考虑过很多方法，最后放弃了，方法都没有用，总是想着这个，没办法真正去看学生是什么样子的，如果很开放地看得到，很自然的就会有反应，适合学生的反应，而这种反应学生很喜欢，很容易接受。”\n    我说：“那很多人觉得，你只是一个生活中陪着他们的人，你并没有在教育他们啊？”\n    “教育就是两个人之间发生的事，不管是故意还是不故意。”\n    我憋不住，直接问：“那这个孩子说你死跟我有什么关系，这话你听了不会感到不舒服吗？”\n    他笑了一下，脸上纹路很稠，说：“我把命交给他们了，不管他们怎么对待我，我都承受了。”\n\n48. “他们说你太温柔了，如果凶一点会更好。”\n    他说：“有的人他没有承受能力，别人骂他，或者对待他不好，他承受不了，所以他必须反应，本来不想打人，但因为受不了就必须打人。他控制不了自己，就是心理不自由。”\n    所以他说：“我像接受淋雨一样，接受他们带来的后果。”\n    “语言很多时候是假的，一起经历过的事情才是真的。”\n    “文明，就是停下来想一想自己在做什么。”\n\n49. 我问过卢安克：“你写过，中国农村和城市的人，都有一个最大的问题是太着急了。怎么叫‘太着急了’？”\n    卢安克说：“来不及打好基础，就要看见成果。”\n    我说：“会有人觉得那就太漫长了。”——那人就是我，那人就是我。\n    他说：“小学老师教了一批一批，都看不到自己的成果。”\n    “如果想改变中国的现状，然后带着这个目的，做我做的事情，那我不用做了。幸好我不是这样的，我不想改变，我没有这个压力。”\n    “如果不是为了改变，把我们做什么？”\n    “当然会发生改变，改变自会发生，但这不是我的目的，也不是我的责任，不是压在我肩膀上的。”\n    “改变不是目的？”我喃喃自语。\n    “它压着太重了，也做不到。”他说，“但你不这么想的时候，他会自己发生。”\n    我问：“你原来也有过那种着急想要改变的状态，怎么就变了，就不那样了？”\n    “慢慢理解为什么是这个样子，理解了就觉得当然是这样了。”\n    “你对现实完全没有愤怒？”\n    “没有。”\n    “你知道还会有一种危险是，当我们彻底的理解了现实的合理性，很多人就放弃了。”这是我的困惑。\n    “那可能还是因为想到自己要改变，所以没办法了，碰到障碍了，就放弃了。我也改变不了，但也不用改变，他还是会变。”\n    “那我们做什么？”\n    “把自己的事情做好。”\n\n50. 我曾以为卢安克有信仰，我直接问了，他笑了一下，说：“为了自己的灵魂和需要向神倾诉吗？太自私了吧。”\n    他明确的写过，很多人的信仰是没有独立个人意识的迷信，是一种提出条件的思想——“如果我做什么，就得到什么结果”，这是一种“教育上的误会”，想要影响人类的精神，故意采取什么固定的策略是无效的。\n\n51. 节目播出后的那个暑假，有三所大学和几十名志愿者去班列小学给学生补课，搞晚会，来来去去。卢安克说，学生“被忘记”的状态改变了，成为“被关注后又被忘记”。他在博客上写：“请你先弄清楚：你是不是只因我才想来？是不是期待着看到什么？如果是，你面对学生就不是真实的，对学生不可能是纯粹的，所以你也就会被他们否认。如果你仅仅是为了学生，你也不一定需要选择一个已经有志愿者的学校。”\n\n52. 他写过：“我最害怕的是崇拜者，因为崇拜基于的往往是幻想。崇拜最终的结果也只能是失望。”\n\n53. 他一再说：“很多人需要我告诉他们一个怎么样才正确的生活，但我真的没有办法告诉他们。假如我知道那么多，这些积累的知识也只会阻碍我的行为。如果一个老师不理睬自己的感受，仅仅根据知识去做，这会让学生感到虚假。怎么会有対和错的事呢？根据自己的感受去做，这就是对的吧。”\n    他写过，“感受”不是欲望和情绪，没有“要达到什么”的动机，只是“诚实和持续不断地对事物平静观察”。卢安克要的不是别人按他的生活方式，恰恰是要让人从“非人”的社会经验里解放出来，成为独立的自己。人们不需要从他那里寻找超我，只需要不去阻止自己身上饱含的人性。\n\n54. 人类大部分的苦都是因为期待的存在。其实，在人生中不存在任何必须的事情，只存在不必要的期待。没有任何期待和面子的人生是最美好和自由的，因为这样，人才能听到自己的心。\n\n55. 教育是人与人之间，也是自己与自己之间发生的事，它永不停止，“就像一棵树摇动另一棵树，一朵云触碰另一朵云，一个灵魂唤醒另一个灵魂，只要这样的传递和唤醒不停止，我们就不会告别卢安克。”\n    第十八章 采访是病友间的相互探问\n\n56. 为什么人声称追索公正，要求死亡，但死亡来到这一刻，你感到的不是满足，也不是为他的残酷而惊骇，而是一种空茫？它让你意识到，剥夺生命是什么意思？就是一切的发展，一切的可能，结束了。张妙死了，药家鑫死了，但如果只是死，结束了就过去了，那就是白白死了。\n\n57. 每一个犯了错的人，别人都有权利把你以前的言论拿出来印证你。\n    就是我真的是对真实的人生缺少……我连敬畏都没有，就是缺少大量的认识（高晓松）\n\n58. 上世纪三十年代，吴经熊曾是上海特区法院的院长，签署过不少死刑判决。他在自传中写道：“我当法官时，常认真的履行我的职责，实际上我也是如此做的。但在我内心深处，潜伏着这么一种意识：我只是在人生的舞台上扮演着一个法官的角色。每当我判一个人死刑，都秘密地向他的灵魂祈求，要他原谅我这么做，我判他的刑只因为这是我的角色，而非因为这是我的意愿。我觉得像彼拉多一样，并且希望洗干净我的手，免得沾上人的血，尽管他也许有罪。唯有完人才有资格向罪人扔石头，但是，完人是没有的。”\n\n#### 第二十章 陈虻不死\n\n59. 一个国家是由一个个具体的人构成，它由这些人创造并且决定，只有一个国家拥有那些寻求真理的人，能够独立思考的人，能够记录真实的人，能够不计利害为这片土地付出的人，能够捍卫自己宪法权利的人，能够知道世界并不完美、但仍然不言乏力不言放弃的人，只有一个国家拥有这样的头脑和灵魂，我们才能说我们为祖国骄傲。只有一个国家能够珍重这样的头脑和灵魂，我们才能说，我们有信心让明天更好。\n\n60. 湖在脚下，乳白色清凉的雾里全是青草的味儿。没有人，听很久，茂密的草丛深处才听到水声。水无所起止，只知流淌，但总得流淌。山高月小，它要滴落，乱石穿空，它要拍岸，遇上高山峡谷，自成江河湖海。此刻这水正在平原之上，促急的劲儿全消，自顾自的缓下来，一个温柔的转弯推动另一个温柔的转弯，无穷无尽，连石头都被打磨得全是圆润结实，就这么不知所终，顺流而去。\n","tags":["读书"],"categories":["记录"]},{"title":"局外人-加缪","url":"/posts/c4928502.html","content":"\n1. 因为狗比人的寿命短，所以他们就一同都老了。\n\n2. 但是在他看来，它真正的病是衰老，而衰老是治不好的。\n\n3. 我希望今天夜里外面那些狗不要叫，否则我会以为那是我的狗在叫。\n<!--more-->\n4. 坐下来后，他们都看着我，令人困惑地摇着头，他们的嘴唇深陷在牙齿掉光的牙龈里。我不知道他们是在向我打招呼并试图说点什么，还是因为年迈导致的不自然的动作。我倾向于认为他们跟我打招呼，但他们这样一来，造成了一种奇怪的效果，看着这些老人围坐在门房身边，一边严肃地看着我，一边摇晃着脑袋。有一阵子，我有了一种荒谬的感觉：他们坐在这里审判我。\n\n5. 我们换好衣服后，她盯着我的黑领带，问我是否在服丧。我解释说我妈妈昨天死了。“什么时候？”她问。我回答：“昨天。”她没说话，但我认为她有点害怕。我正要向她解释，说这不是我的错，但转念想到我向老板做过同样的解释，这样做很傻。但是，不管傻还是不傻，人们总是难免感到一点愧疚。\n\n6. 像往常那样，当我听某个人说话听烦了，想要摆脱他时，就装出欣然同意的样子。\n\n7. 我一直不理解，在何种程度上，既可说日子漫漫难挨，又可说苦短天多。日子，过起来当然就长，但是拖拖拉拉，日复一日，年复一年，最后就混淆成了一片。每个日子都丧失了自己的名字。对我来说，只有“昨天”与“明天”这样的字，才具有一定的意义。\n\n8. 他说我不想见妈妈的遗容，说我抽了烟、睡了觉、喝了牛奶咖啡。这时，我感到有某种东西激起了全大厅的愤怒，我第一次觉得我真正有罪。\n\n9. 可以说，人们好像是在把我完全撇开的情况下处理这桩案子。所有这一切都是在没有我参与的情况下进行的。我的命运由他们决定，而根本不征求我的意见。\n\n10. 我听着他侃侃而谈，听见了他说我这个人很聪明。但我难以理解，为什么一个普通人身上的优点，到了罪人身上就成为了他十恶不赦的罪状。\n\n11. 我对开枪杀人的行为，的确一直并不怎么悔恨。但他那么慷慨激昂，却使我感到奇怪。我真想亲切地、甚至是带着友情地向他解释，我从来没有对某件事真正悔恨过。我总是为将要到来的事，为今天或明天的事忙忙碌碌，操心费神。但是，在我目前这种处境下，我当然不能以这种口吻对任何人说话。我没有权利对人表示友情，没有权利抱有善良的愿望。想到这里，我又试图去倾听检察官的演说，因为他开始评说我的灵魂了。\n\n12. 他说他一直在研究我的灵魂，结果发现其中空虚无物。他说我实际上没有灵魂，没有丝毫人性，没有任何一条在人类灵魂中占神圣地位的道德准则，所有这些都与我格格不入。他补充道：“当然，我们也不能因此而谴责他。他既然不能获得这些品德，我们也就不能怪他没有。但是，我们现在是在法庭上，宽容可能产生的消极作用应该予以杜绝，而代之以正义的积极作用，这样做并不那么容易，但是更为高尚。特别是在今天，我们在此人身上所看到的如此大的灵魂黑洞，正在变成整个社会有可能陷进去的深渊，就更有必要这样做。”\n\n13. 重要的是，要有逃跑的可能性，要一下就跳出那不容触犯的规矩，发狂的跑，跑，就可以给希望提供种种机会。当然，所谓希望，就是在街道的某处，奔跑之中被一颗流弹击倒在地。尽管作了这么一番畅想，但现实中没有任何东西允许我去享受这种奇遇，所有的一切都禁止我作此非分之举，那无情的机制牢牢地把握掌握在手中。\n\n14. 比方说，有好几次，我就制定起法律来。我改革了刑罚制度，我注意到最重要的是要给被判处决者一个机会。即使是千分之一的机会，也足以把很多事情都安排好。这样，我觉得人就可以发明一种化学合成品，服用后有百分之九十的把握可使受刑者死去(我想的就是受刑者)。条件是，让受刑者本人事先知道。经过反复考虑，冷静权衡，我认为断头台的缺点就是没有给任何机会，绝对没有。一锤落定，绝无回旋，受刑者必死无疑。那简直就是一桩铁板钉钉的公案、一个不可更改的安排、一份已经谈妥了的协议，再没有回旋余地。如果由于特殊情况，那断头机失灵，就又得再砍一次。因此产生了一个令人烦恼的问题，那就是被处决者还得期望断头机运转正常。我这里说的是不完善的一方面。在某种意义上，事情的确如此。但是在另一种意义上，我不能不承认，整个严密机制的全部奥秘也在于此。总而言之，被处决者在精神上不能不与整个机制配合。他要关心的就是一切运转正常，不发生意外。\n\n15. 这时，不知是为什么，好像我身上有什么东西爆裂开来，我扯着嗓子直嚷，我叫他不要为我祈祷，我抓住他长袍的领子，把我内心深处的喜怒哀乐猛地一股脑儿倾倒在他头上。他的神气不是那么确信有把握吗？但他的确信不值女人的一根头发，他甚至连自己是否活着都没有把握，因为他干脆就像行尸走肉。而我，我好像是两手空空，一无所有，但我对自己很有把握，对我所有的一切都有把握，比他有把握得多，对我的生命，对我即将来到的死亡，都有把握。是的，我只有这份把握，但至少我掌握了这个真理，正如这个真理抓住了我一样。我以前有理，现在有理，将来永远有理。我以这种方式生活过，我也可能以另外一种方式生活。我干过这，没有干过那；我做过这样的事，而没有做过那样的事。而以后呢?似乎我过去一直等待的就是这一分钟，就是我也许会被判无罪的黎明。没有任何东西，没有任何东西是有重要性的，我很明白是为什么。他也知道是为什么。在我所度过的整个那段荒诞生活期间，一种阴暗的气息从我未来前途的深处向我扑面而来，它穿越了尚未来到的岁月，所到之处，使人们曾经向我建议的所有一切彼此之间不再有高下优劣的差别了，未来的生活也并不比我已往的生活更真切实在。其他人的死，母亲的爱，对我有什么重要?既然注定只有一种命运选中了我，而成千上万的生活幸运儿都像他这位神甫一样跟我称兄道弟，那么他们所选择的生活，他们所确定的命运，他们所尊奉的上帝，对我又有什么重要?他懂吗?大家都是幸运者，世界上只有幸运者。有朝一日，所有的其他人无一例外，都会判死刑，他自己也会被判死刑，幸免不了。这么说来，被指控杀了人，只因在母亲的葬礼上没有哭而被处决，这又有什么重要呢?沙拉玛诺的狗与他的妻子没有什么区别，那个自动机械式的小女人与马松所娶的那个巴黎女人或者希望嫁给我的玛丽，也都没有区别，个个有罪。雷蒙是不是我的同伙与塞莱斯特是不是比他更好，这有什么重要?今天，玛丽是不是又把自己的嘴唇送向另一个新默尔索，这有什么重要？他这个也被判了死刑的神甫，他懂吗?从我未来死亡的深渊里，我喊出了这些话，喊得喘不过气来。但这时，有人把神甫从我手中救了出去，看守们狠狠吓唬我。而神甫却劝他们安静下来，他默默地看了我一会儿。他眼里充满了泪水，他转过身去走开，消失掉了。\n\n16. 他走了以后，我也就安静下来了。我筋疲力尽，扑倒在床上。我认为我是睡着了，因为醒来时我发现满天星光洒落在我脸上。田野上万籁作响，直传到我耳际。夜的气味，土地的气味，海水的气味，使我两鬓生凉。这夏夜奇妙的安静像潮水一样浸透了我的全身。这时，黑夜将尽，汽笛鸣叫起来了，它宣告着世人将开始新的行程，他们要去的天地从此与我永远无关痛痒。很久以来，我第一次想起了妈妈。我似乎理解了她为什么要在晚年找一个“未婚夫”，为什么又玩起了“重新开始”的游戏。那边，那边也一样，在一个个生命凄然去世的养老院的周围，夜晚就像是一个令人伤感的间隙。如此接近死亡，妈妈一定感受到了解脱，因而准备再重新过一遍。任何人，任何人都没有权利哭她。而我，我现在也感到自己准备好把一切再过一遍。好像刚才这场怒火清除了我心里的痛苦，掏空了我的七情六欲一样，现在我面对着这个充满了星光与默示的夜，第一次向这个冷漠的世界敞开了我的心扉。我体验到这个世界如此像我，如此友爱融洽，觉得自己过去曾经是幸福的，现在仍然是幸福的。为了善始善终，功德圆满，为了不感到自己属于另类，我期望处决我的那天，有很多人前来看热闹，他们都向我发出仇恨的叫喊声。\n\n17. 默尔索在感受到人的生存荒诞性的同时，又面临着人类世俗与社会意识形态荒诞的致命压力\n","tags":["读书"],"categories":["记录"]},{"title":"鼠疫-加缪","url":"/posts/d2678620.html","content":"\n1. 因为缺乏实践和思考，人们都只能彼此相爱而不加深思。\n\n2. “你能毫无保留地发表谴责当前状况的新闻吗？”\n   “对那些有所保留的东西，我的陈述是毫无用处的，”他补充说，“所以我不会提供支持你的信息。”\n   里厄平静地告诉他，自己对圣茹特斯特一无所知。他说的只是一个对自己所处的世界感到恶心和厌倦的人说的话——尽管他喜欢他的同胞——但就他自己而言，他拒绝和不公平及妥协的真相发生任何关系。\n\n<!--more-->\n\n3. 到了第四天，老鼠开始成批死亡。他们像潮水一样从地下室、阁楼、下水道涌出来，来到光亮的地方，身体毫无指望地摇晃着，然后做出一个像芭蕾舞一样的转体动作，倒毙在惊恐的旁观者脚下。\n\n4. 就像承载我们房屋的地面正在净化自己的体液，把体内形成的脓疮和脓液抛到体表一样。\n\n5. 人们或许会说，米歇尔的死标志着第一个时期即那些令人困惑的异象的结束，以及另一个非常难过的时期的开始，在后一个时期里，早些日子的困惑逐渐被惊恐取代。根据后来发生的事件回顾第一个阶段，市民们认为他们绝对想象不到，我们的小镇会被选中成为大批老鼠在光天化日下死亡，或守门人身患怪病不治而死的场所。在这方面他们是错的，他们的看法显然需要修正。尽管如此，如果事情到此为止，习惯的力量无疑会像平常一样获得胜利。但我们社区的其他成员，不全是佣工或穷人，将要走上米歇尔所走的同样的道路。自那以后，恐惧以及伴随着恐惧的认真反思，开始了。\n\n6. 但是鼠疫迫使他们过静止的生活，把他们的活动限制在市里某个令人乏味的地方，让他们日复一日地在思念中寻找慰藉。因为当他们漫无目的地闲逛的时候，由于这座城市的小，他总是回到同样的街道上，而这些街道常常是在快乐的日子里和现在不在身边的人曾经走过的地方。\n\n7. 因此，他们也认识了所有囚犯和流放者的根深蒂固的悲哀，那就是生活在毫无用处的回忆里。即使他们无时无刻不思念的过去，也只有苦涩的味道。因为他们本可以把那些令人遗憾的和亲人来不及做的事情一起加进回忆里，如果他们等待的亲人归来，那些事情也许已经完成了；正像在所有的活动里一样，即使是他们作为囚徒生活里相对快乐的活动，他们也一直徒劳的希望不在场的亲人加入。因此他们的生活里总是有一些缺失的东西。对过去的敌视，对现状的不耐烦，对未来的逃避，我们像那些被迫在铁窗背后生活的人，心怀愤懑。然而逃脱的唯一办法是在想象里让火车再次开动起来，用虚构出来的门铃的叮咚声来填满寂静，然而实际上门铃顽固地保持着缄默。\n\n8. 毫无疑问，这些人你在任何时候都能在尘土飞扬的城里看到，他们孤单地徘徊着，默默思念着只有他们才熟悉的令他们更快乐的家乡的黄昏和黎明。稍纵即逝的想象，像飞舞的燕子一样扰乱人心的消息，清晨时的露珠，或者阳光偶尔在空荡荡的大街上造成的奇怪的闪光，所有的一切都能成为他们苦恼的来源。\n\n9. 因此我们每个人都必须独自面对冷漠的苍天，满足于过一天算一天的生活。这种被抛弃的感觉也许能够及时给人们的性格里加入一些好脾气，然而，人性遭到的破坏已经使其失去了意义。\n\n10. 而且，在这种极端孤独的情况下，谁也不能指望邻居的帮助；每个人都必须独自忍受自己的烦恼。如果有偶然的机会，我们中间的一个人试着向别人说了心里话，或者吐露了自己的一些想法，那么无论得到的回答是什么，十有八九是会令他伤心的。然后他会发现他和那人谈不到一起去。因为当他倾诉自己长期埋藏在心里的个人痛苦，已经在爱情和悔恨之火中慢慢成形的感受时，这些东西对他的倾诉对象却毫无意义，后者认为那是司空见惯的感情，是批量生产在市场上交易的悲伤。无论是友好还是恶意，回答通常是不得要领的，而交流的尝试也不得不放弃。至少对那些无法忍受寂寞的人而言，这是千真万确的。由于别人无法找到那些真正有表现力的词汇，他们只好退而求其次，聊聊流行话题，平淡无奇的老生常谈，趣闻轶事及日报上的新闻。所以在这种情况下，即使最真挚的悲伤也要用日常交谈的套话来勉强应付。只能借助这种表达方式，鼠疫的囚徒们才能确保看守的同情和听众的兴趣。\n\n11. 比如说，如果他们中的一个碰巧被疾病带走，几乎在他还没有意识到的情况下就发生了。从和幽灵般的记忆漫长而无声的交流中，突然被拉进永恒的寂静，不再有任何痛苦。这是幸运，还是不幸？\n\n12. 我很爱你，但是现在我太累了。我走了会痛苦，当一个人重新开始不需要很多快乐。\n\n13. 是的，在那个时候，他能够安心地感到她是完全属于他的。因为凌晨 4 点人们很少做别的事情，即使前一个夜晚是不忠的夜晚，这一刻他们也会沉睡。是的，每个人都在沉睡，这种想法使人安心，因为无法安宁的心盼望持久而真实地占据爱人的心；或者，如果关山阻隔，就让爱人进入持续不醒的无梦长眠，直到重聚的那一天。\n\n14. 人们清清楚楚地看到春天已经耗尽了自己的力量，把所有的热情投入到千千万万朵处处盛开的花朵之上后，此刻正在和炎热和鼠疫联合作用下奄奄一息。\n\n15. 在早期的时候，当他们认为这次的传热病和其他的流行病很相像的时候，宗教是能够稳住阵脚的。但是一旦这些人认识到迫在眉睫的危险，他们就转而考虑及时行乐。所有白天刻在他们脸上的可怕的恐惧，在火热而布满尘土的黄昏都变成了一种使他们热血沸腾的狂热的兴奋和原始的自由感。\n\n16. 然后我不得不时常经历人们的死亡。你知道有些拒绝死亡的人吗？你听到过一个垂死的女人用最后一口气发出的“我不要死”的尖叫吗？啊，我都经历过。后来我明白我永远不可能面对这种情景无动于衷。我那时候还年轻，我对这一切感到愤怒。后来我变得平和多了。只是，我永远做不到眼睁睁看着人们死去。我想就是这样。然而——\n    然而，既然世界的秩序注定是死亡，如果我们不仰面看着没有任何回应的苍天，拒绝信仰上帝，用我们的力量和死亡作斗争，那样会不会对上帝更好呢?\n\n17. 愚昧无知是人世间罪恶的根源，如果缺乏认知，好心能造成和恶意同样大的危害。总体而言，人类的善是多于恶的，但这不是问题的关键。关键在于人类或多或少是愚昧的，这就是我们称为恶习和美德的东西。最不可救药的恶习是一种认为自己无所不知，因此认为自己有权力杀戮的愚昧。杀人者的灵魂是盲目的，而缺乏透彻的认知，就不可能有真正的善和真正的爱。\n\n18. 从地球的各个角落，隔着千万里的陆地和海洋，善良而好心的演说者们试图表达他们感同身受的心情，他们确实说了，但同时也证明每个人都是无力分担他们看不见的痛苦的。“奥兰！奥兰！”呼叫声徒劳地越过海洋，里厄也满怀希望地徒劳地听着；每当一场长篇大论的演说开始，都带来一道横亘在格朗和演说人之间的无法逾越的鸿沟。“奥兰，我们和你同在！”他们充满感情地呼喊。不，医生对自己说，只有爱和携手赴死——“这是唯一的路。他们太遥远了。”\n\n19. 月光下，只看到灰白的城墙和横平竖直的街道，没有树木的阴影，也完全听不到路人的脚步或狗叫声。这座死寂的城市只是一堆庞大的、一动不动的立方体，其中一尊尊被人遗忘的捐助者和伟人的雕塑无言地凝立着，石头或金属雕刻出来的脸庞显示出人类过去的样子。在沉沉的天幕下，这些平庸的偶像占据着空无一人的十字路口，冷漠的表情正如我们死水一样的生活，或者说，我们生活的归宿。即一座死亡之城，瘟疫，石头和黑暗将灭绝一切声响。\n\n20. 因为全城的经济活动被迫中断，出现了大量的失业人口。在多数情况下，从他们中间找不到管理人员，但是招募干粗活的人很容易。从那时开始，贫穷显示出了比恐惧更大的力量，特别是因为存在风险，这类工作有比较高的报酬。\n\n21. 市民们已经适应了，他们不得不默默承受，因为除此别无他途。自然，他们仍然有痛苦和不幸，但他们不再感到难熬。可是里厄却认为这是不幸的，因为习惯绝望比绝望本身更令人灰心丧气。\n\n22. 他唯一的抵御办法是拉紧内心用来约束感情的绳结，让自己变得强硬起来。\n\n23. “这孩子的病情早上没有得到缓解，是吗，里厄？”\n    里厄说没有，但这个孩子比平常人坚持的时间更长。\n    背靠墙壁的帕纳卢似乎有几分支持不住自己，他阴郁地说：\n    “如果不幸夭折，他受的苦也更长。”\n\n24. 这些人是被遗忘的人，而且他们都明白。他们的熟人因为考虑其他事情忘记了他们，这是可以理解的。至于那些爱他们的人，因为求情或筹划把他们弄出隔离营而耗尽了心力，也忘记了他们。他们一心想把他救出去，结果却忽视了要营救出来的人。这也是正常的。一旦想到这里，你会发现即使在最不幸的时候，一个人也无法真正牵挂另一个人。因为，真正牵挂一个人，那就意味着每分每秒，一心一意的牵挂，无论是家务事，有苍蝇飞过，还是想挠痒痒，都不能分心。但是人们总会为苍蝇和发痒而分心。这就是日子难过的原因。而且这些人都很明白。\n\n25. 这个没有爱情的世界就像死掉的世界，总有一天，当一个人厌倦了牢狱、工作和勇气时，就会渴望起另一个人的笑容、关切和挚爱的心灵。\n\n26. 在城市的一面，痛苦在紧闭的百叶窗后继续，而不远处的大街上则一片欢腾。即将来临的解放也是两面，一面是欢笑，一面是泪水。\n\n27. 我母亲也像这样，我喜欢她那种同样的谦逊，我一直想和她在一起。8 年来，我始终不能承认她过世。她只是比平时更不显眼而已，然而我回过头，她却不在哪里了。\n\n28. 塔鲁的脸扭曲着，露出一个微笑。\n    “谢谢你。我不想死，我会争取活下去。但是如果我失败了，我也想死得体面一点。”\n\n29. 然而鼠疫再次竭尽全力试图打乱人们用来对付它的办法，它在最令人意想不到的时候忽然出现，然而又在看似牢牢站稳脚跟的时候突然消失了踪影。又一次，它企图把水搅浑。\n\n30. 然而病魔似乎被寒冷、灯光和人群驱赶，从城市的黑暗深处逃了出来，躲进这个温暖的房间，对一动不动的塔鲁展开最后的袭击。瘟疫已经无力在天上挥舞它的连枷，而是在这个房间沉重的空气里轻声呼啸。这就是里厄听了几个小时的声音，他要制止它，让它在这里也承认失败。\n\n31. 在那时他谈起过病人在病床上过世之后，从病床上感受到的那种平静。是的，这一刻都是同样的，同样肃穆的间隙，战斗过后的暂时平静，这是一种失败的平静。但是这一刻的寂静包围着他的朋友，似乎触手可及，又和从鼠疫中解放出来的街道和城市中的寂静是如此的浑然一体，面对此情此景，里厄感到这是一次决定性的失败，这场失败结束了战争，又把和平本身变成了一种无可救药的痛苦。里厄不知道塔鲁最终是否找到了安宁，现在一切都结束了，但他感觉自己从此以后是不可能找得到内心的平静了。就像一个和亲骨肉分离的母亲，或一个埋葬了朋友的男人一样，暂时的麻木之后是永恒的哀伤。\n\n32. 里厄知道母亲在想什么，她爱自己。可是爱一个人是不够的，或者至少可以说，爱没有足够的力量来自我表达。\n\n33. 当火车停下来的时候，始于同一个站台的令人肝肠寸断的分离也在一瞬间，在贪婪地拥抱住已经变得生疏的躯体的同时宣告结束。\n\n34. 不过，这些泪水也使他无法断定埋在他肩窝里的那张脸是他曾经朝思暮想的脸，还是正相反，是一个陌生女人的脸。以后他会弄明白的这个疑团的。至于眼下，他只想像周围的所有人一样，相信鼠疫来了又去，但爱情始终如一。\n\n35. 他们一对对依偎着回到家里，带着战胜鼠疫的欢欣，对周围的世界视而不见，全然忘记了痛苦和那些乘坐同一辆火车却发现没人等候他们、默然无语、正打算回家证实他们担心的事情的人。对那些现在只感到新的痛苦，或者正在悼念失去亲人的人而言，情况是非常不同的，他们的离别之情反而在此刻达到了顶峰。这些母亲，丈夫，妻子或爱人，他们的一切快乐已经随着某个被埋葬在无名墓地或已经化为灰烬的人远去，对他们而言，鼠疫还在那里。\n\n36. 几个月来，他们一直把个人的感情放在次要地位，在这一天，他们把几个月来累积的热情全部发泄了出来；这一天是他们得以幸存的日子。明天再去过沉默拘谨的正经日子吧，至于眼前，人们无论出身，都像亲兄弟一样挤在一起。死亡的威胁不能达到的平等，至少在这几个小时时间里，在解放的快乐中得到实现。\n\n37. 许多男女和家庭看似在平静地散步，其实更大程度上是在重温他们曾经遭受过苦难的地方，同时向新来者指出或明显或隐藏的鼠疫的痕迹，或者说历史的遗迹。在少数情况下，他们乐于充当向导——作为有阅历和经历过鼠疫的人——\n    他们不提恐惧，却对鼠疫的危险夸夸其谈。这是一种无伤大雅的乐趣。\n\n38. 每当他想在成千上万名受害者痛苦的呼声里加入自己的评论时，就会想到他自己的痛苦没有一种不是别人的痛苦，而在一个痛苦往往需要一个人孤独承受的世界上，这反而是一种好处，于是他就因此作罢。\n\n39. 就像变魔法一样，街道两边紧闭的百叶窗齐齐打开，窗户口挤满了好奇的观众，警戒线后也一下子冒出很多人。\n\n40. “告诉我，医生，他们打算为鼠疫中死掉的人树一座纪念碑，这事是真的吗？”\n    “报纸上是这样说的。纪念碑或者纪念柱。”\n    “我就知道！还会有人演讲呢。”\n    老人笑得气都透不过来。\n    “我都能听见他们说什么了：‘我们亲爱的……’接着他们就回去吃大餐了。”\n\n41. 但这个晚上是解放的夜晚，不是叛乱的夜晚。远处，一片暗红色标记出城里的大街和灯火通明的广场。这个自由的夜晚，欲望无拘无束，汇成了里厄耳边的声声洪流。\n\n42. 城外黑沉沉的港口升起了政府的第一批庆祝礼花。城里的人用一片悠长低沉的欢呼声迎接了这一刻的到来。科塔尔，塔鲁，那些里厄爱过而又失去的男男女女，所有这些人，无论是死去的还是有罪的，都被遗忘了。\n\n43. 里厄医生正是在此时决定撰写这篇记录的，他的目的是不在事实面前保持沉默，为鼠疫的受害者作证，为他们遭受的暴力和不公平留下一点回忆，也是为了记录一个人在这样的苦难中学到的东西：在人类身上，令人赞赏的东西总是多于令人鄙弃的东西。\n\n44. 是的，里厄一边倾听城里的欢呼，一边想到，这样的欢乐终究是处在威胁之中的，他了解这些快乐的人们所不了解但可以在教科书上看到的东西，那就是：鼠疫杆菌绝不会完全死亡或消失，它们能够在家具或衣物里休眠数十年。他们在浴室、地下室、行李箱、手帕和旧纸张里耐心地潜伏着，等待着冥冥中的指令或人类的不幸，到那时，鼠疫将再次唤醒它的鼠群，送它们去某座幸福的城市传播死亡。\n","tags":["读书"],"categories":["记录"]},{"title":"小王子摘录(英文)","url":"/posts/c4a48f8c.html","content":"\n1. All grown-ups were once children—although few of them remember it.\n\n2. Grown-ups never understand anything by themselves and it is tiresome for children to be always and forever explaining things to them.\n\n3. There is no harm in putting off a piece of work until another day. But when it is a matter of baobabs that always means a catastrophe. I knew a planet that was inhabited by a lazy man. He neglected three little bushes…….\n\n<!--more-->\n\n4. “You know—one loves the sunset when one is so sad……”\n   “Were you so sad then?” I asked,” on the day of the forty-three sunsets?”\n   But the little prince made no reply.\n\n5. His face turned from white to red as he continued:\n   “If someone loves a flower of which just one single blossom grows in all the millions and millions of stars, it is enough to make him happy just to look at the stars. He can say to himself,‘Somewhere my flower is there…..’But if the sleep eats the flowers, in one moment all his stars will be darkened…….And you think that is not important!”\n   He could not say anything more. His words were chocked by sobbing.\n\n6. It is such a secret place, the land of tears.\n\n7. The shrub (矮树、灌木)soon stopped growing and began to get ready to produce a flower. The little prince, who was present at the first appearance of a huge bud felt at once that some sort of miraculous apparition must emerge(浮现、形成、出现、显露)from it. But the flower was not satisfied to complete the preparations for her beauty in the shelter of her green chamber(室、房间). She chose her colours with the greatest care. She adjusted her petals one by one. She did not wish to go out into the world all rumpled(凌乱的)like the field poppies(罂粟花). It was only in the full radiance(光辉、发光)of her beauty that she wished to appear. Oh, yes!\n\n8. And after working with all this painstaking(辛苦、苦心、工夫)precision(精密、精确), she yawned and said:\n   “Ah! I am scarcely awake. I beg that you will excuse me. My petals are still disarranged….”\n   But the little prince could not restrain his admiration:\n   “Oh! How beautiful you are!”\n   “Am I not?” the flower responded sweetly.” And I was born at the same moment as the sun….”\n\n9. So, the little prince in spite of all the good will that was inseparable from his love had soon come to doubt her. He had taken seriously words which were importance and it made him very unhappy. （所以小王子虽然很愿意去爱护她，但也很快产生了怀疑。小王子总是把她的话当真，但很多话她其实只是随口说说而已，这让小王子很不高兴。）\n\n10. And when he watered the flower for the last time and prepared to place her under the shelter of her glass, he realized that he was very close to tears.\n    “Goodbye,” he said to the flower.\n    But she made no answer.\n    “Goodbye,” he said again.\n    The flower coughed. But it was not because she had a cold.\n    “I have been silly,” she said to him at last, “I asked your forgiveness. Try to be happy….”\n    He was surprised by this absence of reproaches. He stood there all bewildered(困惑的), the glass globe held arrested in mid-air. He did not understand this quiet sweetness.\n    “Of course, I love you,” the flower said to him. “It is my fault that you have not known it all the while. That is of no importance. But you—you have been just as foolish as I. Try to be happy……let the glass be. I don’t want it anymore.”\n    “But the wind— “\n    “My cold is not so bad as all that……. the cool night air will do me good. I am a flower.”\n    “But the animals— “\n    “Well, I must endure(忍耐) the presence of two or three caterpillars if I wish to become acquainted with the butterflies. It seems that they are very beautiful. And if not the butterflies—and the caterpillars—who will call upon me? You will be far away……as for the large animals—I am not at all afraid of any of them. I have my claws.”\n    And naively(天真的) she showed her four thorns. Then she added:\n    “Don’t linger(逗留，消磨，徘徊) like this. You have decided to go away. Now go!”\n    For she did not want him to see her crying. She was such a proud flower……\n\n11. He breathed a sigh of regret and said to himself again:\n    “That man is the only one of them all whom I could have made my friend. But his planet is indeed too small. There is no room on it for two people…...”\n    What the little prince did not dare confess(承认，坦白，忏悔，供认)was that he was sorry most of all to leave his planet because it was blest(幸福的，神圣的) every day with 1440 sunsets!\n\n12. “Is my flower in danger of speedy disappearance?”\n    “Certainly it is.”\n    “My flower is ephemeral(短命的，短暂的，朝生暮死的)，” the little prince said to himself,” and she has only four thorns to defend herself against the world. And I have left her on my planet all alone!”\n\n13. “I wonder,” he said,” whether the stars are set alight in heaven so that one day each one of us may find his own again…… Look at my planet. It is right there above us. But how far away it is!” (我在想，他说，星星那么亮，是不是为了让每个人终有一天能回到自己的星球？你看看我的星球，它就在我的们的上方……但它离得太远啦。)\n\n14. “I can carry you farther than any ship could take you,” said the snake.\n    He twined himself around the little prince’s ankle like a golden bracelet(手镯).”\n    “Whomever I touch I send back to the earth from whence(来处、根源) he came,” the snake spoke again,” But you are innocent and true and you come from a star……”\n    The little prince made no reply.\n    “You move me to pity—you are so weak on this Earth made of granite,” the snake said,” I can help you some day, if you grow too homesick for your own planet. I can— “\n    “Oh! I understand you very well,” said the little prince,” But why do you always speak in riddles?”\n    “I solve them all,” said the snake.\n    And they were both silent.\n\n15. And he was overcome(战胜) with sadness. His flower had told him that she was the only one of her kind in all the universe. And here were five thousand of them all alike in one single garden.\n    “She would be very much annoyed,” he said to himself,“if she should see that……she would cough most dreadfully(非常、可怕的)and she would pretend that she was dying to avoid being laughed at. And I should obliged(要求、约束)to pretend that to humble(低下的、谦卑的)myself also she would really allow herself to die……”\n    Then he went on with his reflections:” I thought that I was rich with a flower that was unique in all the world; and all I had was a common rose. A common rose and three volcanoes that come up to my knee—and one of them perhaps extinct forever……that doesn’t make me a very great prince……”\n    And he lay down in the grass and cried.\n\n16. “Just that,” said the fox,” to me, you are still nothing more than a little boy who is just like a hundred thousand other little boys. And I have no need of you. And you, on your part, have no need of me. To you, I am nothing more than a fox like a hundred thousand other foxes. But if you tame me, then we shall need each other. To me, you will be unique in all the world. To you, I shall be unique in all the world……”\n\n17. But if you tame me, it will be as if the sun came to shine on my life. I shall know the sound of a step that will be different from all the others. Other steps send me hurrying back underneath the ground. Yours will call me, like music out of my burrow(洞穴). And then look: you see the grain-fields down yonder(那边)？ I don’t eat bread. Wheat is of no use to me. The wheat fields have nothing to say to me. And that is sad. But you have hair that is the colour of gold. Think how wonderful that will be when you have tamed me! The grain which is also golden will bring me back the thought of you. And I shall love to listen to the wind in the wheat……”\n\n18. “What must I do to tame you?” asked the little prince.\n    “You must be very patient,” replied the fox,” First you will sit down at a little distance from me—like that—in the grass. I shall look at you out of the corner of my eye and you will say nothing. Words are the source of misunderstandings. But you will sit a little closer to me every day……”\n    The next day the little prince came back.\n    “It would have been better to come back at the same hour,” said the fox,” If, for example, you come at four o’clock in the afternoon, then at three o’clock I shall begin to be happy. I shall feel happier and happier as the hour advances. At four o’clock I shall already be worrying and jumping about(坐立不安). I shall show you how happy I am! But if you come at just any time. I shall never know at what hour my heart is to be ready to greet you……”\n\n19. So, the little prince tamed the fox. And when the hour of his departure drew near—\n    “Ah,” said the fox,” I shall cry.”\n    “It is your own fault,” said the little prince.” I never wished you any sort of harm; but you wanted me to tame you……”\n    “Yes, that is so.” said the fox.\n    “But now you are going to cry!” said the little prince.\n    “Yes, that is so.” said the fox.\n    “Then it has done you no good at all!”\n    “It has done me good,” said the fox,” because of the color of the wheat fields.” And then he added:\n    “Go and look again at the roses. You will understand now that yours is unique in all the world. Then come back to say goodbye to me and I will make you a present of a secret.\n    The little prince went away to look again at the rose.\n    “You are not all like my rose,”he said,” As yet you are nothing. No one has tamed you and you have tamed no one. You are like my fox when I first knew him. He was only a fox like a hundred thousand other foxes. But I have made him my friend and now he is unique in all the world.”\n    And the roses were very much embarrassed.\n    “You are beautiful, but you are empty,” he went on.” One could not die for you. To be sure an ordinary passerby would think that my rose looked just like you—the rose that belongs to me. But in herself alone she is more important than all the hundreds of you other roses: because it is she that I have watered; because it is she that I have put under the glass globe; because it is she that I have sheltered behind the screen(挡风板); because it is for her that I have killed the caterpillars(except the two or three that we saved to become butterflies); because it is she that I have listened to when she grumbled(抱怨，嘟囔)or boasted(夸夸其谈)or ever sometimes when she said nothing. Because she is my rose.\n    And he went back to meet the fox.\n    “Goodbye,” he said.\n    “Goodbye,” said the fox,” And now here is my secret, a very simple secret: It is only with the heart that one can see rightly; what is essential is investible to the eye.”\n    “What is essential is investible to the eye,” the little prince repeated so that he would be sure to remember.\n    “It is the time you have wasted for your rose that makes your rose so important.”\n    “It is the time I have wasted for my rose— “said the little prince so that he would be sure to remember.\n    “Men have forgotten this truth,” said the fox,” But you must not forget it. You become responsible forever for what you have tamed. You are responsible for your rose……”\n    “I am responsible for my rose,” the little prince repeated so that he would be sure to remember.\n\n20. “Were they not satisfied where they were?” asked the little prince.\n    “No one is ever satisfied where he is,” said the switchmen.\n    And they heard the roaring(咆哮的，轰鸣的)thunder of a third brilliantly lighted express.\n    “Are they pursuing the first travelers?” demanded the little prince.\n    “They are pursuing nothing at all,” said the switchman.” They are asleep in there or if they are not asleep they are yawning. Only the children are flattening(压扁)their noses against the windowpanes.”\n    “Only the children know what they are looking for,” said the little prince,” They waste their time over a rag doll and it becomes very important to them; and if anybody takes it away from them, they cry…….”\n    “They are lucky,” the switchman said.\n\n21. “Why are you selling those?” asked the little prince.\n    “Because they save a tremendous amount of time,” said the merchant,” Computations have been made by experts. With these pills, you save fifty-three minutes in every week.”\n    “And what do I do with those fifty-three minutes?”\n    “Anything you like……”\n    “As for me,” said the little prince to himself,” if I had fifty-three minutes to spend as I liked. I should walk at my leisure toward a spring of fresh water.”\n\n22. “My friend the fox— “the little prince said to me.\n    “My dear little man, this is no longer a matter that has anything to do with the fox!”\n    “Why not?”\n    “Because I am about to die of thirst……”\n    He did not follow my reasoning and he answered me:\n    “It is a good thing to have had a friend even if one is about to die. I, for instance, am very glad to have had a fox as a friend….”\n\n23. “Then you are thirsty, too?” I demanded.\n    But he did not reply to my question. He merely said to me:\n    “Water may also be good for the heart……”\n\n24. “The stars are beautiful because of a flower that cannot be seen.”\n    “What makes the desert beautiful,” said the little prince,” is that somewhere it hides a well……”\n\n25. As the little prince dropped off to sleep. I took him in my arms and set out walking once more. I felt deeply moved and stirred(搅动). It seemed to me that I was carrying a very fragile treasure. It seemed to me even that there was nothing more fragile on all Earth. In the moonlight, I looked at his pale forehead, his closed eyes, his locks of hair that tremble in the wind and I said to myself:” What I see here is nothing but a shell. What is the most important is invisible……”\n    As his lips opened slightly with the suspicious of a half-smile. I said to myself again:” What moves me so deeply about this little prince who is sleeping here is his loyalty to a flower—the image of a rose that shines through his whole being like the flame of a lamp(那朵花的模样也像灯火般在他心里闪耀), even when he is asleep……”And I felt him to be more fragile still. I felt the need of protecting him as if he himself were a flame that might be extinguished(熄灭、灭绝) by a little puff（吹，一阵喷烟） of wind……\n    And as I walked on so, I found the well at daybreak.\n\n26. But the eyes are blind. One must look with the heart……”\n    I had drunk the water. I breathed easily. At sunrise, the sand was the color of honey. And that honey color was making me happy, too. What brought me then this sense of grief(忧伤、忧愁、悲痛、不幸)？\n\n27. “Your baobabs—they look a little like cabbages.”\n    “Oh!”\n    I had been so proud of my baobabs!\n    “Your fox—his ears look a little like horns; and they are too long.” And he laughed again.\n\n28. So then I made a pencil sketch(素描、草图)of a muzzle. And as I gave it to him, my heart was torn.\n    “You have plans that I do not know about.” I said.\n    But he did not answer me. He said to me instead:\n    “You know—my descent(下降)to the earth……Tomorrow will be its anniversary.”\n    Then after a silence, he went on:\n    “I came down very near here.”\n    And he flushed(脸发红).\n    And once again without understanding why I had a queer(奇怪的，不舒服的)sense of sorrow. One question, however, occurred to me:\n    “Then it was not by chance that on the morning when I first met you—a week ago—you were strolling(散步)along like that, all alone, a thousand miles from any inhabited region? You were on the your back to the place where you landed?”\n    The little prince flushed again.\n    And I added with some hesitancy(犹豫、踌躇).\n    “Perhaps it was because of the anniversary?”\n    The little prince flushed once more. He never answered questions—but when one flushed does that not mean” Yes”?\n    “Ah,” I said to him,” I am a little frightened— “\n    But he interrupted me.\n    “Now you must work. You must return to your engine. I will be waiting for you here. Come back tomorrow evening……”\n    But I was not reassured(使放心的)I remembered the fox. One runs the risk of weeping a little, if one lets himself be tamed……\n\n29. Once again I felt myself frozen by the sense of something irreparable(不能修补的，不能挽回的). And I knew that I could not hear the thought of never hearing that laughter anymore. For me, it was like a spring of fresh water in the desert.\n\n30. “It is just like as it is with the flower. If you love a flower that lives on a star, it is sweet to look at the sky at night. All the stars are abloom(开花的)with flowers…..”\n\n31. “And at night you will look up at the stars. Where I live everything is so small that I cannot show you where my star is to be found. It is better, like that. My star will just be one of the stars, for you. And so, you will love to watch all the stars in the heavens……they will all be your friends. And, besides, I am going to make you a present……”\n    He laughed again.\n    “Ah, little prince, dear little prince! I love to hear that laughter!”\n    “That is my present. Just that. It will be as it was when we drank the water……”\n    “In one of the stars I shall be living. In one of them I shall be laughing. And so, it will be as if all the stars were laughing when you look at the sky at night……you--only you—will have stars that can laugh!”\n\n32. “And when your sorrow is comforted( time soothes(安慰，使平静)all sorrows) you will be content you have known me. You will always be my friends. You will want to laugh with me. And you will sometimes open your windows, so, for the pleasure(因为这个缘故)……and your friends will be properly astonished to see you laughing as you look up at the sky! Then you will say to them,’ Yes, the stars always make me laugh!’ And they will think you are crazy. It will be a very shabby(低劣的，卑鄙的，吝啬的)trick that I shall have played on you……”\n    And he laughed again.\n    “It will be as if in place of the stars. I had given you a great number of little bells that knew how to laugh……”\n    And he laughed again. Then he quickly became serious；\n    “Tonight—you know……do not come,” said the little prince.\n    “I shall not leave you.”I said.\n    “I shall look as if I were suffering. I shall look a little as if I were dying. It is like that. Do not come to see that. It is not worth the trouble……”\n    “I shall not leave you.”\n\n33. “You understand……it is too far. I cannot carry this body with me. It is too heavy.”\n    “But it will be like an old abandoned shell. There is nothing sad about old shells……”\n    “You know, it will be very nice. I, too, shall look at the stars. All the stars will be wells with a rusty pulley(生锈的转轮). All the stars will pour out fresh water for me to drink……”\n    “That will be so amusing! You will have five hundred million little bells and I shall have five hundred million springs of fresh water……”\n    “You know—my flower……I am responsible for her. And she is so weak! She is so naïve! She has four thorns, of no use at all, to protect herself against all the world……”\n","tags":["读书"],"categories":["记录"]},{"title":"JavaScript Date对象","url":"/posts/614ea15c.html","content":"\n创建一个新 Date 对象的唯一方式是通过 new 操作符，若将它作为常规函数调用将返回一个字符串。\n\n```javascript\nlet time1 = new Date()\nconsole.log(time1)\n//Mon May 17 2021 13:57:48 GMT+0800 (中国标准时间)\ntypeof time1\n//\"string\"\n\nlet time2 = new Date()\nconsole.log(time2)\n//Mon May 17 2021 13:57:48 GMT+0800 (中国标准时间)\ntypeof time2\n//\"object\"\n```\n\n<!--more-->\n\n#### Date()构造函数有四种基本形式。\n\n```javascript\nnew Date()\nnew Date(value)\nnew Date(datestring)\nnew Date(year, monthIndex [, day [, hours [, minutes [, seconds [, milliseconds]]]]])\n```\n\n- 没有参数\n  新创建的 Date 对象表示实例化时刻的日期和时间\n\n- value unix 时间戳\n  一个 Unix 时间戳（Unix Time Stamp），它是一个整数值，表示自 1970 年 1 月 1 日 00:00:00 UTC（the Unix epoch）以来的毫秒数\n  ```javascript\n  new Date(1621231068000)\n  //Mon May 17 2021 13:57:48 GMT+0800 (中国标准时间)\n  ```\n- dateString 时间戳字符串\n  dateString 表示日期的字符串值，该字符串应该可以被 Date.parse()识别。仅有日期的字符串(2021-5-17)会被处理为 UTC 而不是本地时间。\n\n  ```javascript\n  Date.parse('2021.5.17 13:57')\n  Date.parse('2021-5-17 13:57')\n  Date.parse('2021,5,17 13:57')\n  Date.parse('2021/5/17 13:57')\n  Date.parse('2021 5 17 13:57')\n  Date.parse('17 May 2021 13:57')\n  //以上不同字符串表示的结果一致 1621231020000\n  Date.parse('2021-5-17')\n  //1621180800000\n  //以上可以被Date.parse解析的日期格式都能由Date()构造函数识别\n  ```\n\n- 至少两个参数\n  缺省值中，日期的默认参数为 1，时间的默认为 0\n  year 表示年份的整数值。 0 到 99 会被映射至 1900 年至 1999 年，其它值代表实际年份。\n  monthIndex 表示月份的整数值，从 0（1 月）到 11（12 月）。\n  ```javascript\n  new Date(99, 11)\n  //Wed Dec 01 1999 00:00:00 GMT+0800 (中国标准时间)\n  ```\n\n#### 方法\n\n- Date.now()\n  返回自 1970-1-1 00:00:00 UTC（世界标准时间）至今所经过的毫秒数。\n- Date.parse()\n  解析一个表示日期的字符串，并返回从 1970-1-1 00:00:00 所经过的毫秒数。\n- Date.UTC()\n\n#### 实例方法\n\n根据本地时间查询结果\n\n- getDate() 返回月份中的第几天(1-31)\n- getDay 返回星期中的第几天(0-6) 星期日是 0\n- getFullYear() 返回四位数年份\n- getYear() 返回 2-3 位的年份\n- getTime() 返回从 UTC 时间到该日期经过的毫秒数\n- getMinutes() getHours() getSeconds() getMilliseconds()\n\n(根据 UTC 时间查询结果在前面加 UTC)\n\n#### 转换方法\n\n- toString()\n  返回一个表示该日期对象的字符串\n- toTimeString()\n  以人类易读格式返回日期对象时间部分的字符串。\n- toDateString()\n  以人类易读的形式返回该日期对象日期部分的字符串。\n\n  ```javascript\n  const time = new Date('2021-5-17 13:57')\n  time.toString()\n  //\"Mon May 17 2021 13:57:00 GMT+0800 (中国标准时间)\"\n  time.toTimeString()\n  //\"13:57:00 GMT+0800 (中国标准时间)\"\n  time.toDateString()\n  //\"Mon May 17 2021\"\n  ```\n\n- toISOString() 　 toJSON()\n  把一个日期转换为符合 ISO 8601 扩展格式的字符串。\n\n  ```javascript\n  time.toISOString()\n  time.toJSON()\n  //\"2021-05-17T05:57:00.000Z\"\n  ```\n\n- toLocaleString()\n  返回一个表示该日期对象的字符串，该字符串与系统设置的地区关联（locality sensitive）\n- toLocaleDateString()\n  返回一个表示该日期对象日期部分的字符串\n- toLocaleTimeString()\n  返回一个表示该日期对象时间部分的字符串，\n\n  ```javascript\n  time.toLocaleString()\n  //\"2021/5/17下午1:57:00\"\n  time.toLocaleDateString()\n  //\"2021/5/17\"\n  time.toLocaleTimeString()\n  //\"下午1:57:00\"\n  ```\n\n- valueOf() 返回一个日期对象的原始值。\n\n  ```javascript\n  time.valueOf()\n  time.getTime()\n  //1621231020000\n  ```\n\n#### 应用\n\n- JavaScript 的时间由世界标准时间（UTC）1970 年 1 月 1 日开始，用毫秒计时，一天由 86,400,000 毫秒组成，中国时区比 utc 快八个小时，即 UTC+8，因此计算的时候要加 8 小时\n\n  ```javascript\n  const date = new Date()\n  const localDate = date.getTime() + 288e5 // 288e5 = 8 * 3600 * 1000\n  ```\n\n- ISO 时间\n\n  ISO 代表了国际通用的日期时间格式，排列顺序为 YYYY-MM-DD HH:mm:ss:SSS\n  每个日期和时间都有固定的位数，不够的位数用 0 补齐\n  ISO 格式不允许空格，T 用来间隔日期和时间，Z 表示时间为 UTC 时间，不带空格\n\n  ```javascript\n    <!-- 获得一个标准格式日期 -->\n    const ISO = new Date(localDate).toISOString()\n    //\"2022-12-30T07:34:24.914Z\"\n    new Date(localDate).toISOString().replace('T', ' ').slice(0, 19)\n    //\"2022-12-30 07:34:24\"\n  ```\n\n---\n\n参考链接：\n[MDN-Date](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Date)\n","tags":["JavaScript"],"categories":["program"]},{"title":"HTML的dataset属性","url":"/posts/1dcf8778.html","content":"\n```html\n<style>\n  * {\n    margin: 0;\n    padding: 0;\n  }\n  .content {\n    padding: 200px;\n    text-align: center;\n    width: 800px;\n    height: 100vh;\n    margin: auto;\n  }\n  button {\n    width: 80px;\n    height: 40px;\n    margin: 10px;\n    outline: none;\n    border: none;\n    cursor: pointer\n    border-radius: 5px;\n  }\n</style>\n<body>\n  <div class=\"content\">\n    <button>click</button>\n    <button>click</button>\n    <button>click</button>\n    <button>click</button>\n    <button>click</button>\n  </div>\n  <script>\n    const button = document.querySelectorAll('button');\n    const color = ['lightblue', 'lightcoral', 'lightcyan', 'lightpink', 'lightgreen'];\n    color.map((item, index) => {\n      button[index].dataset.color = item;\n      button[index].style.background = item;\n      button[index].textContent = item;\n    });\n    button.forEach((item, index) => {\n      item.addEventListener('click', () => {\n        const btnColor = item.dataset.color;\n        document.querySelector('body').style.background = btnColor;\n      });\n    });\n  </script>\n</body>\n```\n","tags":["HTML"],"categories":["program"]},{"title":"了解Chrome插件","url":"/posts/fccf7b75.html","content":"\nChrome 插件可以笼统的分为五个部分，manifest.json、backgorund、content scripts、popup page、option page，其中 manifest.json 是一个描述文件，囊括插件所有的部署信息。background 一直在后台运行监听事件，content scripts 与页面交互，唯一可以获取页面的 Dom 信息的地方，popup page 插件主体界面，option page 选项界面。\n\n<!--more-->\n\nChrome 插件在 2021.1.19 推出了 V3 版本，因此这里讲的都是 V3 版本。\n\n- manifest.json\n\n  ```json\n  {\n    \"name\": \"demo\",\n    \"description\": \"this is a demo\",\n    \"version\": \"1.0\",\n    \"manifest_version\": 3,\n    //有了上面的基本配置信息就可以直接在浏览器里加载出来一个插件。\n    \"action\": {\n      \"default_popup\": \"popup.html\",\n      \"default_icon\": \"icon.png\", //导航栏右侧展示的icon\n      \"default_title\": \"wukong design\"\n    },\n    \"icons\": { \"128\": \"icon.png\" }, //扩展程序列表的icon\n    \"background\": {\n      \"service_worker\": \"backgorund.js\"\n    },\n    \"permissions\": [\"notifications\", \"tabs\", \"webRequest\", \"storage\", \"activeTab\", \"scripting\", \"declarativeContent\"],\n    \"host_permissions\": [],\n    \"content_scripts\": [\n      {\n        \"matches\": [\"https://www.baidu.com/\"],\n        \"run_at\": \"document_idle\",\n        \"js\": [\"js/contentScript.js\"],\n        \"css\": []\n      }\n    ],\n    \"options_page\": \"options.html\"\n  }\n  ```\n\n  配置文件的 action 指的是插件在启用后显示的图标、标题以及在点击之后出现的界面。在 API 里有个 chrome.action 就是作用在这个地方的一些功能。在 V2 版本里，action 又分为 page action 和 browser action，page 是在特定特面生效，而 browser 在所有的页面生效。  \n   permissions 顾名思义就是在这个地方声明需要用到的权限，tabs 是用来获取选项卡信息，storage 的存储功能跟页面的 localStorage 相似，scripting 在当前网页里嵌入 script 脚本。  \n   host_permsissions 在这里指明插件需要请求的后台网址，这样就不会受到跨域限制。在 V2 版本里，host_permissions 与 permissions 写在一起。  \n   content_scirpts 在匹配到指定的网址后加载指定的 js 文件，可以与该页面交互，操作 Dom。\n\n- background\n  插件是事件驱动型的程序，通过监听事件以修改和增强网页浏览体验，例如监听新页面的加载，书签的变化，标签栏的变化。插件利用后台的 service worker 脚本文件一直在后台运行以监控浏览器的变化对不同的事件及时作出反应。\n  在 V2 版本里，background 可以是一个 page 即 html，但在 V3 版本里 servcie_worker 只能是 js 文件。另外，service_worker 所指定的文件必须在根目录里，不能包含在其他目录中。\n\n  ```javascript\n  chrome.runtime.onMessage.addListener((message) => {\n    if (message == 'notify') {\n      registration.showNotification('', {\n        body: '网络请求成功',\n        icon: 'images/icon.png',\n      });\n    }\n  });\n  ```\n\n  backgorund 可以使用插件所有的 API，写这篇文章的时候，在 background 里使用 chrome.notifications.create()接口会出现问题，看到 stackflow 上讲这是目前 V3 版本存在的 bug，可以用上面的方法替换，V2 版本正常。\n\n- content scripts\n\n  ```javascript\n  chrome.runtime.sendMessage('notify');\n  document.querySelector('#s_kw_wrap input').value = 'hello motherfucker';\n  document.querySelector('#s_btn_wr input').click();\n  ```\n\n  content scripts 能够获取网页的 Dom 信息与网页直接交互，因此可以加载 js 或者 css 文件对页面进行操作和修改。但是它只能直接获取部分的 API：_runtime_ _storage_ 和 _i18n_ ，注入脚本有两个方式，静态注入(本例)或者在代码里手动注入。  \n  content scripts 在一个隔绝的环境里，与它所在的选项卡绑定在一起，因此打开几个匹配的页面就会运行几个执行文件，而这几个不同的执行文件之间由所在选项卡 Id 区分。因此想要向某个网页的 content script 发送信息时需要指定 tab Id，如 chrome.tabs.sendMessage(tabId,message)。\n\n- popup page 和 options page\n  分别是弹出界面和选项界面，和普通 html 网页相似，可以加入 js 和 css 文件。\n\n- 常用的 API\n  - action 修改插件 icon 界面的图标、徽标、标题信息\n  - notification 发送通知\n  - runtime 通信\n  - scripting 向 web 嵌入脚本\n  - storage 相当于 localStorage\n  - tabs 关于选项卡信息，每个选项卡都有一个 id\n  - webRequest 网络请求\n\n---\n\n参考链接：  \n[Chrome 插件官方文档](https://developer.chrome.com/docs/extensions/mv3/)\n","tags":["Chrome Extention"],"categories":["program"]},{"title":"隐秘的callback 隐秘的快乐","url":"/posts/45645f90.html","content":"\n讲代码的时候讲到 callback,旁边的大哥和我一样都想到脱口秀大会.\n\ncallback 在我的理解里是前面设下一个不起眼的伏笔,到后面再把伏笔拾起来,当这个从头到尾都不起眼的东西形成一个融洽的逻辑时却能产生一些隐秘的快乐.像是在漫威电影里这种 callback 喜闻乐见,而且即便你注意不到这些细节也并不影响电影情节.\n\n在大概两三年前我刷推特的时候看到一件 T 恤,在淘宝上没有搜到,前段时间发豆瓣话题的时候又想到这个 T 恤顺便在淘宝上又搜了一下也是没有结果.\n直到前几天刷微博的时候终于发现了这件 T 恤是来自一个叫做梦家的淘宝店铺,于是生活就在这样莫名的契机里得到融洽,这也算是一种 callback 吧.\n","categories":["记录"]},{"title":"一段代码-关于async await","url":"/posts/6cd5756e.html","content":"\n```javascript\nlet arrayTest = [1, 2, 3, 4, 5, 6];\nasync function test() {\n  await asyncForeach(arrayTest, (data) => {\n    console.log(data);\n  });\n  console.log('inner');\n}\nasync function asyncForeach(array, callback) {\n  for (let index = 0; index < array.length; index++) {\n    await callback(array[index]);\n  }\n}\ntest();\nconsole.log('out');\n```\n\n<!--more-->\n\n- js 中的回调函数\n\n  ```javascript\n  const startPrint = (message, callback) => {\n    message = message.split(' ');\n    callback(message);\n  };\n  startPrint('hello motherfucker', (data) => {\n    data = data.concat('hello world'.split(' '));\n    console.log(data);\n  });\n  startPrint('hello motherfucker', (data) => {\n    console.log(data);\n  });\n  ```\n\n  即将一个函数作为另一个函数的参数传递，并且这个函数会对原函数的传入的其他参数作处理然后返回。\n\n- async 关键字  \n  在函数声明之前添加 async 关键字，会将函数变成异步函数，返回值是 promise\n  ```javascript\n  const hello = async () => {\n    return 'Hello';\n  };\n  console.log(hello);\n  console.log(hello());\n  hello().then((value) => {\n    console.log(value);\n  });\n  ```\n  ![运行结果](/blog_images/2021-5-8-async.png)\n- await 关键字\n  await 只在异步函数里面才起作用，它可以放在任何基于 promise 的函数之前。它会在所在行上暂停代码执行，直到 promise 完成，然后返回结果值。\n  ```javascript\n  const hello = async () => {\n    result = await Promise.resolve('hello');\n    console.log(result);\n  };\n  hello();\n  ```\n  ![运行结果](/blog_images/2021-5-8-await.png)\n- await 在函数里不同位置的影响\n\n  ```javascript\n  let arrayTest = [1, 2, 3, 4, 5, 6];\n  async function test() {\n    await asyncForeach(arrayTest, (data) => {\n      console.log(data);\n    });\n    console.log('inner');\n  }\n  async function asyncForeach(array, callback) {\n    for (let index = 0; index < array.length; index++) {\n      await callback(array[index]);\n    }\n  }\n  test();\n  console.log('out');\n  ```\n\n  **打印结果** _1 out 2 3 4 5 6 inner_\n\n  ```javascript\n  let arrayTest = [1, 2, 3, 4, 5, 6];\n  async function test() {\n    asyncForeach(arrayTest, (data) => {\n      console.log(data);\n    });\n    console.log('inner');\n  }\n  async function asyncForeach(array, callback) {\n    for (let index = 0; index < array.length; index++) {\n      await callback(array[index]);\n    }\n  }\n  test();\n  console.log('out');\n  ```\n\n  **打印结果** _1 inner out 2 3 4 5 6_\n\n  ```javascript\n  let arrayTest = [1, 2, 3, 4, 5, 6];\n  async function test() {\n    await asyncForeach(arrayTest, (data) => {\n      console.log(data);\n    });\n    console.log('inner');\n  }\n  async function asyncForeach(array, callback) {\n    for (let index = 0; index < array.length; index++) {\n      callback(array[index]);\n    }\n  }\n  test();\n  console.log('out');\n  ```\n\n  **打印结果** _1 2 3 4 5 6 out inner_\n\n  ```javascript\n  let arrayTest = [1, 2, 3, 4, 5, 6];\n  async function test() {\n    asyncForeach(arrayTest, (data) => {\n      console.log(data);\n    });\n    console.log('inner');\n  }\n  async function asyncForeach(array, callback) {\n    for (let index = 0; index < array.length; index++) {\n      callback(array[index]);\n    }\n  }\n  test();\n  console.log('out');`\n  ```\n\n  **打印结果** _1 2 3 4 5 6 inner out_\n","categories":["program"]},{"title":"Hexo添加搜索功能","url":"/posts/8a5f8a50.html","content":"\n随着东西越来越多，终于该为博客添加搜索功能了，以前想想就觉得会很麻烦，现在不得不铁着头试一下了。这里用的终究是别人做好的插件，hexo-generator-search。\n\n<!--more-->\n\n#### hexo-generator-search 插件\n\n- 安装\n\n  ```bash\n  $ npm install hexo-generator-search\n  ```\n\n- 配置\n  安装模块之后在 hexo 的根目录的\\_config 配置\n\n  ```yaml\n  search:\n  path: search.json\n  field: post\n  content: true\n  ```\n\n  插件会在 hexo g 之后生成 search.json 文件，如果 path 的配置是 \\*.xml 生成的是 xml 格式文件\n\n- 屏蔽搜索\n  在博客 markdown 的顶部信息里添加 `indexing:false`\n\n  ```yaml\n  ---\n  title: hexo 添加搜索功能\n  tags: hexo\n  indexing: false\n  ---\n  ```\n\n#### 补充代码\n\n- 添加搜索框\n\n  ```html\n  <div class=\"search-area\">\n    <div>\n      <input type=\"text\" id=\"search-input\" autocomplete=\"off\" placeholder=\"搜索内容\" />\n    </div>\n    <div id=\"search-result\"></div>\n  </div>\n  ```\n\n- 添加 js 代码\n\n  ```javascript\n  const searchFunc = function (path, search_id, content_id) {\n    const resultContent = document.getElementById(content_id);\n    const input = document.getElementById(search_id);\n    if (!input) return;\n    fetch(path)\n      .then((response) => response.json())\n      .then((blogs) => {\n        input.addEventListener('input', function () {\n          const keywords = this.value\n            .trim()\n            .toLowerCase()\n            .split(/[\\s\\-]+/);\n          resultContent.innerHTML = '';\n          let content = '';\n          if (keywords.length === 1 && keywords[0].length === 0) {\n            return;\n          }\n          // perform local searching\n          blogs.forEach(function (blog) {\n            let isMatch = true;\n            if (!blog.title || blog.title.trim() === '') {\n              blog.title = 'Untitled';\n            }\n            const data_title = blog.title.trim().toLowerCase();\n            const data_content = blog.content\n              .trim()\n              .replace(/<[^>]+>/g, '')\n              .toLowerCase();\n            const data_url = blog.url;\n            let index_title = -1;\n            let index_content = -1;\n            let first_occur = -1;\n            // only match artiles with not empty contents\n            if (data_content !== '') {\n              keywords.forEach(function (keyword, i) {\n                index_title = data_title.indexOf(keyword);\n                index_content = data_content.indexOf(keyword);\n                if (index_title < 0 && index_content < 0) {\n                  isMatch = false;\n                } else {\n                  if (index_content < 0) {\n                    index_content = 0;\n                  }\n                  if (i == 0) {\n                    first_occur = index_content;\n                  }\n                }\n              });\n            }\n            // show search results\n            if (isMatch) {\n              content += `<li><a href=\"${data_url}\" class=\"search-title\">${data_title}</a>`;\n              if (first_occur >= 0) {\n                // cut out 100 characters\n                var start = first_occur - 20;\n                var end = first_occur + 80;\n                if (start < 0) {\n                  start = 0;\n                }\n                if (start == 0) {\n                  end = 100;\n                }\n                if (end > data_content.length) {\n                  end = data_content.length;\n                }\n                var match_content = data_content.substring(start, end);\n                // highlight all keywords\n                keywords.forEach(function (keyword) {\n                  var regS = new RegExp(keyword, 'gi');\n                  match_content = match_content.replace(regS, `<span class=\"search-keyword\">${keyword}</span>`);\n                });\n                content += `<p class=\"search-content\">${match_content}...</p>`;\n              }\n              content += '</li>';\n            }\n          });\n          if (content.length > 0) {\n            let str = `<ul class=\"search-result-list\">${content}</ul>`;\n            resultContent.innerHTML = str;\n          }\n        });\n      });\n  };\n  searchFunc('/search.json', 'search-input', 'search-result');\n  ```\n\n---\n\n参考链接:\n[hexo-generator-search github](https://github.com/wzpan/hexo-generator-search)\n","tags":["Hexo"],"categories":["program"]},{"title":"vim操作命令指北","url":"/posts/117ef761.html","content":"\nvim 是从 vi 衍生出来的，兼容 vi 并且拥有一些新的特性。  \nvim 的三种基本模式\n\n- 普通模式 移动光标，删除文本等，是 vim 启动后的默认模式\n- 插入模式 向编辑文件插入文本\n- 命令行模式 执行命令(:)(/)(?)(!)\n\n<!--more-->\n\n#### 移动\n\n**h** 左　 　**l** 右　 　**j** 下　 　**k** 上\n**w** 移动到下一个单词　　**b** 移动到上一个单词\n\n#### 进入插入模式\n\n- **i** 在当前光标处进行编辑\n- **a** 在光标后插入编辑\n- **I** 在行首插入　　**A** 在行末插入\n- **o** 在当前行后插入一个新行\n- **O** 在当前行前插入一个新行\n- **cw** 替换从光标所在位置后到一个单词结尾的字符\n\n#### 命令行模式下退出 vim\n\n- **:q!** 强制退出，不保存　　**:q** 退出\n- **:wq!** 强制保存并退出\n- **:w<文件路径>** 另存为　　**:saveas 文件路径** 另存为\n- **:x** 保存并退出　　**:wq**保存并退出\n\n#### 普通模式下退出 vim\n\n- **Shift + zz**\n\n#### 普通模式下删除 vim 文本信息\n\n- **x** 删除游标所在的字符(Delete 同)\n- **X** 删除游标所在的前一个字符\n- **dd** 删除整行(ndd 删除 n 行)\n- **dw** 删除一个单词\n- **d$或 D** 删除至行尾\n- **d^** 删除至行首\n- **dG** 删除至文档结尾处\n- **d1G** 删除文档至文档首部\n\n#### vim 重复命令\n\n在普通模式下，.(小数点)表示重复上一次的命令操作\n\n在命令前面添加数字 N，表示重复命令的次数\n\n- 10x 删除 10 个连续字符\n- 3dd 删除 3 行文本\n- d5w 删除连续 5 个单词\n\n#### 游标的快速跳转\n\n在命令行里输入**set nu**以显示行号\n\n- 行间跳转\n  **nG 或 ngg** 游标移动到第 n 行\n  **gg** 游标移动到第一行\n  **G 或 Shift + g** 移动到最后一行\n  **Ctrl + o** 快速回到上一次光标位置\n- 行内跳转\n  **w** 到下一个单词的开头\n  **e** 到当前单词的结尾\n  **b** 到前一个单词的开头\n  **ge** 到前一个单词的结尾\n  **0 或^** 到行头 **$** 到行尾\n  **f<字母>** 向后搜索字母并跳转到第一个匹配的位置\n  **F<字母>** 向前搜索字母并跳转到第一个匹配的位置\n  **t<字母>** 向后搜索字母并跳转到第一个匹配位置之前的一个字母\n  **T<字母>** 向前搜索字母并跳转到第一个匹配位置之后的一个字母\n\n#### 复制及粘贴文本\n\n- **yy** 复制游标所在的整行\n- **y^或 y0** 复制到行首,不包含光标所在字符\n- **y$** 复制到行尾，包含包括所在字符\n- **yw** 复制一个单词(ynw 复制 n 个单词)\n- **yG** 复制到文本末 **y1G**复制到文本开头\n- **p(小写)** 粘贴至光标后 **P(大写)** 粘贴至光标前\n\n#### 字符的替换及撤销\n\n- **r+带替换字符** 将游标所在字符替换为指定字母\n- **R** 连续替换，直到按下 Esc\n- **cc** 替换整行，即删除游标所在行，并进入插入模式\n- **cw** 替换一个单词，即删除一个单词，并进入插入模式\n- **C(大写)** 替换游标以后至行末\n- **~** 反转游标所在字母大小写\n- **u** 撤销一次操作({n}u 撤销 n 次操作)\n- **U(大写)** 撤销当前行的所有修改\n- **Ctrl + r** 撤销'撤销'的操作\n\n#### 缩进操作\n\n- **>>** 整行向右缩进\n- **<<** 整行向左回退\n- 在命令行输入**set shiftwidth=n** 可以设置缩进长度\n- 命令行模式下输入**ce** 使光标所在行内容居中，同理还有 **ri** 和 **le**\n\n#### 快速查找\n\n- 普通模式下输入 **/** 然后输入要查找的字符串，回车后就会进行查找。\n- **?** 与 **/** 功能相同，只不过 **?** 是在当前位置向上查找而 **/** 是在当前位置向下查找\n- 进入查找之后，**n** 是查找下一个内容，**N** 是查找上一个内容\n- 命令行**noh** 然后回车即可取消搜索\n\n#### 高级查找\n\n- 普通模式下输入 **\\\\\\*** 寻找游标所在处的单词\n- 普通模式下输入 **\\\\\\#** 同上，但 **\\\\\\#** 是向前（上）找，**\\\\\\*** 则是向后（下）找\n- 普通模式下输入 **g\\\\\\*** 同 **\\\\\\*** ，但部分符合该单词即可\n- 普通模式下输入 **g\\\\\\#** 同 **\\\\\\#** ，但部分符合该单词即可\n","tags":["Linux"],"categories":["program"]},{"title":"ssh连接linux虚拟机","url":"/posts/1b816091.html","content":"\nSSH 的软件架构是服务器-客户端模式（Server - Client）。在这个架构中，SSH 软件分成两个部分：向服务器发出请求的部分，称为客户端（client），OpenSSH 的实现为 ssh；接收客户端发出的请求的部分，称为服务器（server），OpenSSH 的实现为 sshd。\n\n<!--more-->\n\n#### ssh 密码登录\n\n```bash\n$ ssh user@hostname\nor\n$ ssh -l user hostname\n```\n\nuser 是服务端的用户名，hostname 是 ip 地址或者域名，连接之后会提示输入密码登录\n\n#### 密钥登录\n\nSSH 密钥登录分为以下的步骤。\n\n- 预备步骤，客户端通过 ssh-keygen 生成自己的公钥和私钥。\n- 第一步，手动将客户端的公钥放入远程服务器的指定位置。\n- 第二步，客户端向服务器发起 SSH 登录的请求。\n- 第三步，服务器收到用户 SSH 登录的请求，发送一些随机数据给用户，要求用户证明自己的身份。\n- 第四步，客户端收到服务器发来的数据，使用私钥对数据进行签名，然后再发还给服务器。\n- 第五步，服务器收到客户端发来的加密签名后，使用对应的公钥解密，然后跟原始数据比较。如果一致，就允许用户登录。\n\n**总之，私钥在客户端手里，公钥给服务器**\n\n```bash\n$ ssh-keygen -t rsa #指定 rsa 算法生成密钥对\n```\n\n密钥默认在当前管理员路径下的.ssh/文件夹下面，包括 id_rsa 和 id_rsa.pub\n生成密钥后，修改权限为仅文件拥有者可读写\n\n```bash\n$ chmod 600 ~/.ssh/id_rsa\n$ chmod 600 ~/.ssh/id_rsa.pub\n```\n\n有了密钥，现在需要将公钥发送给服务器端\n\n- 手动上传公钥\n\n  ```bash\n  $ cat ~/.ssh/id_rsa.pub | ssh user@host \"mkdir -p ~/.ssh && cat >> ~/.ssh/authorized_keys\"\n  or\n  $ scp ~/.ssh/id_rsa.pub user@host:~/.ssh/authorized_keys\n  ```\n\n  同样需要设置 authorized_keys 的权限\n\n  ```bash\n  $ chmod 644 ~/.ssh/authorized_keys\n  ```\n\n- ssh-copy-id 自动上传公钥\n\n  ```bash\n  $ ssh-copy-id -i ~/.ssh/id_ras user@host\n  ```\n\n  -i 是指定公钥文件，公钥文件可以不指定路径和.pub 后缀名，命令会自动在~/.ssh 目录下寻找\n\n- 关闭密码登录\n  启用密钥登录后，可以关闭服务器的密码登录，打开服务器 sshd 的配置文件/etc/ssh/sshd_config,将 PasswordAuthentication 设置为 no，重启 sshd\n  ```bash\n  # 重启\n  $ sudo systemctl restart sshd.service\n  ```\n\n#### scp 命令\n\nscp 是 secure copy 的缩写，相当于 cp 命令 + SSH。它的底层是 SSH 协议，默认端口是 22，相当于先使用 ssh 命令登录远程主机，然后再执行拷贝操作。\n\nscp 主要用于以下三种复制操作。\n\n- 本地复制到远程。\n- 远程复制到本地。\n- 两个远程系统之间的复制。\n\n```bash\n$ scp source destination\n```\n\nsource 和 destination 都可以包含用户名和主机名，即\n\n```bash\n#主机和文件之间使用冒号(:)分割\n$ scp user@hostname:foo.txt bar.txt\n#将远程主机的foo.txt文件复制为本地的bar.txt\n$ scp foo.txt user@hsotname:bar.txt\n#将本地的foo.txt文件复制到远程的bar.txt\n```\n\n---\n\n参考链接：\n[阮一峰-SSH 教程](https://wangdoc.com/ssh/)\n","tags":["SSH"],"categories":["program"]},{"title":"韩国惊悚片榜单","url":"/posts/dbdd2e7.html","content":"\n![豆瓣榜单](/blog_images/韩国惊悚片榜.png)\n第一次无底线狂轰乱炸一个榜单，好坏参半，于是也是第一次集中看了许多无聊的电影。\n\n<!--more-->\n\n大部分时间里，我都处于一种没有耐心的状态，看电影都倾向于打打杀杀的无脑爽片，像这个榜单的电影也都是一些爽片，而且都有一些复仇的情节。像是朴赞郁的所谓复仇三部曲，**老男孩**、**我要复仇**、**亲切的金子**都在这个榜单里，尽管除了**我要复仇**之外，其他的我都不怎么喜欢。当然，上面所讲的不包括电影**潘多拉**，这不是一部爽片，这只会让人想要吃屎。\n\n**潘多拉**，豆瓣评分 7.6 分，就是这部电影逼得我看完去厕所吃了坨屎才冷静下来。电影讲的是类似于切尔诺贝利的故事，用力气做了一个很大的场面，然后就放纵地矫情，妈的，我从来没有见过这么多情的电影，核电站为了让主角能够尽情的矫情一再的延迟爆炸时间，现在想想都他妈有种吃屎的冲动，垃圾电影！\n还有其他几部看起来很无聊的，**邻居**，**柏林**，**不可饶恕**，又长又臭，自我感觉无聊得很。奉俊昊的**汉江怪物**也无聊得很，感觉电影想讲的很多，但零零星星凑不成一团。**母亲**似乎是奉俊昊比较著名的电影，我倾向于无感，但是这个电影让我看到了神经病人是可以多么无辜又同时可以有这么大的杀伤力。\n\n榜单剩下的好电影： **杀人回忆**、**蒙太奇**、**追击者**、**走到尽头**、**局内人**、**南山的部长们**、**看见恶魔**，我在看**走到尽头**的时候意识到之前看过的郭富城和王千源的**破局**就是翻拍的这部电影。  \n另外期间还看了朴赞郁的**共同警备区**也很好看，主角是李秉宪和宋康昊，看李秉宪的电影还挺舒服的，上面讲过的**局内人**、**南山的部长们**和**看见恶魔**都有他。\n![共同警备区](/blog_images/共同警备区.jpg)\n\n一讲到韩国电影，总难免要拿出国产电影做个比较，然后做出韩国电影甩国产好几条街这种结论。的确如此，当然我也希望早日看到国产电影里袒胸露乳，但就现在而言，没有胸根本比不上人家。\n\n前段时间看亲爱的安德烈时候，安德烈讲过一句话：\n\n> 在这种与“国家”保持距离的文化和教育中长大，我看见它的优点：我们这一代人身上，真的很少很少爱国宣传的影响一一政客要操弄我们太不容易了；当你对“国家”抱着种不信任的态度的时候，你比较能够冷静地去分析它的问题所在。\n\n就我目前为止的阅片经验，总觉得韩国的电影就是这样始终对国家抱着不信任的态度，时时刻刻不在对国家作最坏的揣测，**局内人**、**恐怖直播**，以至于像**流感**、**汉江怪物**、**潘多拉**这种灾难性的片子里都要使劲黑一黑政府，真是了不起哦。  \n而且就韩国总统都很难善终这件事，说明韩国对政府的不信任是有历史原因的，但我觉得奇怪的是，这长长的难善终总统列表里，为什么总是后人哀之而不鉴之呢？此处有李明博时期纪录片**共犯者们**，朴槿惠时期的纪录片**那天，大海**、**潜水钟**。\n","tags":["电影"],"categories":["记录"]},{"title":"你在教我做人?","url":"/posts/2f178655.html","content":"\n以前看过 Ellen Show 的主持人 Ellen 在一个大学毕业时候的讲话视频，作为一个幽默系节目的主持人，她嘻嘻哈哈讲了一些道理，在结尾的时候又讲：'我最后的一个忠告就是不要听别人的建议，follow your passion，never follow someone else’s path...'\n\n<!--more-->\n\n当初看的时候单纯觉得讲话很好玩，后面大概是在我看王小波的时间段里我又想起她讲的话才觉得这就是大智慧啊,在那段时间里我就慢慢发展出一种抗拒--对'世俗道理'的抗拒。\n\n这里顺便又想起罗永浩当年在节目里对王自如讲的话:\n\n> 大家都是成年人，在不涉及是非对错的问题上，你给我人生忠告是什么意思？\n\n![人生的忠告](/blog_images/罗永浩-人生的忠告.png)\n大概是王小波写过的关于我们文化的东西让我从头开始反思这件事情，我们的道德体系绝大多数单纯是人为规定的，也就是说我们的道德体系都是别人的建议，孔子的建议，朱熹的建议，并没有经过严肃的思辨就被普适性了。这就是为什么我们经常看到我们文化里的一些谚语或者名言总是互相矛盾的，似乎是我们的教育又让我们对这些语句太信以为真，太拿它当回事了，我们就喜欢信奉着一句话以为然，然后被自己信奉的一句话所约束着。\n\n我扒了些王小波书上的内容再次抄录：\n\n> 假设历史上曾有一位大智者，一下发现了一切新奇、一切有趣，发现了终极真理，根绝了一切发现的可能性，我就情愿到该智者以前的年代去生活。这是因为，假如这种终极真理已经被发现，人类所能做的事就只剩下了依据这种真理来做价值判断。从汉代以后到近代，中国人就是这么生活的。我对这样的生活一点都不喜欢。\n> 沉默的大多数·五　王小波\n\n> 首先就是:我要反对愚蠢。一个只会明辨是非的人总是凭胸中的浩然正气做出一个判断，然后加上一句:难道这不是不言而喻的吗?任何受过一点科学训练的人都知道，这世界上简直找不到什么不言而喻的事，所以这就叫做愚蠢。\n> 沉默的大多数·自序　王小波\n\n> 西方人以为，人的主要情感源于自身，所以就重视解决肉体的痛苦。中国人以为，人的主要情感是亲亲敬长，就不重视这种问题。这两种想法哪种更对?当然是前者。现在还有人说，西方人纲常败坏，过着痛苦的生活--这种说法是昧良心的。西方生活我见过，东方的生活我也见过。西方人儿女可能会吸毒，婚姻可能会破裂，总不会早上吃两片白薯干，中午吃两片白薯干，晚上再吃两片白薯干，就去挑一天担子，推一天的重车!从孔孟到如今，中国的哲学家从来不挑担、不推车。所以他们的智慧从不考虑降低肉体的痛苦，专门营造站着说话不腰疼的理论。\n> 沉默的大多数·二　王小波\n\n> 西方人看来，人所受的苦和累可以减少，这是一切的基础。假设某人做出一份牺牲，可以给自己或他人带来很多幸福，这就是崇高--洛克就是这么说的。孟子不是这么说，他的崇高另有根基，远不像洛克的理论那么能服人。据我所知，孟子远不是个笨蛋。除了良知良能，他还另有说法。他说反对他意见的人(杨朱、墨子)都是禽兽。由此得出了崇高的定义:有种东西，我们说它是崇高，是因为反对它的人都不崇高。这个定义一直沿用到了如今。细想起来，我觉得这是一种模糊不清的混蛋逻辑，还不如直说凡不同意我意见者都是王八蛋为好。总而言之，这种古怪的论证方式时常可以碰到。\n> 在七十年代，发生了这样一回事:河里发大水，冲走了一根国家的电线杆。有位知青下水去追，电杆没捞上来，人也淹死了。这位知青受到表彰，成了革命烈士。这件事引起了一点小小的困惑:我们知青的一条命，到底抵不抵得上一根木头?结果是困惑的人惨遭批判，结论是:国家的一根稻草落下水也要去追。至于说知青的命比不上一根稻草，人家也没这么说。他们只说，算计自己的命值点什么， 这种想法本身就不崇高。坦白地说，我就是困惑者之一。现在有种说法，以为民族的和传统的就是崇高的。我知道它的论据:因为反民族和反传统的人很不崇高。但这种论点吓不倒我。\n> 沉默的大多数·三　王小波\n\n> 时隔二十多年，我也读了一些书，从书本知识和亲身经历之中，我得到了这样一种结论:自打孔孟到如今，我们这个社会里只有两种人。一种编写生活的脚本，另一种去演出这些脚本。前一种人是古代的圣贤，七十年代的政工干部;后一种包括古代的老百姓和近代的知青。所谓上智下愚、劳心者治人劳力者治于人，就是这个意思吧。从气质来说，我只适合当演员，不适合当编剧，但是看到脚本编得太坏时，总禁不住要多上几句嘴，就被当落后分子来看待。这么多年了，我也习惯了。\n> 沉默的大多数·关于崇高　王小波\n\n> 我还看过朱熹的书，因为本科是学理工的，对他“格物”的论述看得特别的仔细。朱子用阴阳五行就可以格尽天下万物，虽然阴阳五行包罗万象，是民族的宝贵遗产，我还是以为多少有点失之于简单。举例来说，朱子说，往井底下一看，就能看到一团森森的白气。他老人家解释道，阴中有阳，阳中有阴(此乃太极图之象)，井底至阴之地，有一团阳气，也属正常。我相信，你往井里一看，不光能看到一团白气，还能看到一个人头，那就是你本人(我对这一点很有把握，认为不必做实验了)。不知为什么，这一点他没有提到。可能观察得不仔细，也可能是视而不见，对学者来说，这是不可原谅的。还有可能是井太深，但我不相信宋朝就没有浅一点的井。用阴阳学说来解释这个现象不大可能，也许一定要用到几何光学。虽然要求朱子一下推出整个光学体系是不应该的，那东西太过复杂，往那个方向跨一步也好。但他根本就不肯跨。假如说，朱子是哲学家、伦理学家，不能用自然科学家的标准来要求，我倒是同意的。可怪的是，咱们国家几千年的文明史，就是出不了自然科学家。\n> 假如有人说，我如此立论，是崇洋媚外，缺少民族感情，这是我不能承认的。但我承认自己很佩服法拉第，因为给我两个线圈一根铁棍子，让我去发现电磁感应，我是发现不出来的。牛顿、莱布尼兹，特别是爱因斯坦，你都不能不佩服，因为人家想出的东西完全在你的能力之外。这些人有一种惊世骇俗的思索能力，为孔孟所无。按照现代的标准，孔孟所言的“仁义”啦，“中庸”啦，虽然是些好话，但似乎都用不着特殊的思维能力就能想出来，琢磨得过了分，还有点肉麻。这方面有一个例子:记不清二程里哪一程，有一次盯着刚出壳的鸭雏使劲看。别人问他看什么，他说，看到毛茸茸的鸭雏，才体会到圣人所说“仁”的真意。这个想法里有让人感动的地方，不过仔细一体会，也没什么了不起的东西在内。毛茸茸的鸭子虽然好看，但再怎么看也是只鸭子。再说，圣人提出了“仁”，还得让后人看鸭子才能明白，起码是词不达意。我虽然这样想，但不缺少民族感情。因为我虽然不佩服孔孟，但佩服古代中国的劳动人民。劳动人民发明了做豆腐，这是我想象不出来的。\n> 沉默的大多数·我看国学　王小波\n\n附:Youtube 上 Ellen 的演讲视频：\n\n{% youtube M6pPBqfrAnI %}\n","tags":["读书","随想"],"categories":["记录"]},{"title":"Scrapy初体验","url":"/posts/8768d45c.html","content":"\n> Scrapy is an application framework for crawling web sites and extracting structured data which can be used for a wide range of useful applications, like data mining, information processing or historical archival.\n\n<!--more-->\n\n#### 设置 python 虚拟环境\n\n为了避免安装第三方依赖时总是安装在全局而导致不同项目之间的冲突，python 可以使用虚拟环境的方式满足不同应用的需求。\n\n> The solution for this problem is to create a virtual environment, a self-contained directory tree that contains a Python installation for a particular version of Python, plus a number of additional packages.\n\n```bash\npython -m venv virtual-env\n```\n\n命令会创建一个 virtual-enviroment 的文件夹，里面包含 python 编译器、标准库和其他一些文件,其中在 Scripts 文件夹下包含激活虚拟环境的执行文件。\n\n- activate.bat 在 windows cmd 里运行 `virtual-env\\Scripts\\activate.bat`\n- Activate.PS1 在 windows pwd 里运行 `virtual-env\\Scripts\\Activate.PS1`\n- activate 在 Unix 和 MacOs 里运行 `source virtual-env/bin/activate`\n- deactivate.bat 取消虚拟环境\n\n后面安装 scrapy 等都会安装在虚拟环境里\n\n#### Scrapy 开始项目\n\n```bash\nscrapy startproject tutorial test\n```\n\n在 test 文件夹下创建名为 tutorial 的 Scrapy project，test 文件夹下有以下内容\n\n```\n    scrapy.cfg            # deploy configuration file\n    tutorial/             # project's Python module, you'll import your code from here\n        __init__.py\n        items.py          # project items definition file\n        middlewares.py    # project middlewares file\n        pipelines.py      # project pipelines file\n        settings.py       # project settings file\n        spiders/          # a directory where you'll later put your spiders\n            __init__.py\n```\n\n在 spiders 目录下写自己的爬虫文件，在 setting.py 里可以配置请求头等一些内容\n\n```python\n#spiders/douban250_spider.py\nimport scrapy\nclass DoubanSpider(scrapy.Spider):\n    name = 'douban'\n    start_urls = [\n        'https://movie.douban.com/top250']\n    def parse(self, response):\n        for title in response.css('div.hd'):\n            yield{\n                'title':title.css('span.title::text').get()\n            }\n        yield from response.follow_all(css='span.next a',callback=self.parse)\n```\n\n```python\n#setting.py\nDEFAULT_REQUEST_HEADERS = {\n    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9',\n    'Accept-Encoding': 'gzip, deflate',\n    'Accept-Language': 'zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7',\n    'Content-Type': 'text/html; charset=utf-8',\n    'Cache-Control': 'max-age=0',\n    'Connection': 'keep-alive',\n    'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/89.0.4389.128 Safari/537.36'\n}\nFEED_EXPORT_ENCODING = \"UTF-8\" #设置导出编码格式\n```\n\n```bash\nscrapy crawl douabn -O douban-250.json #执行并导出结果为 json 文件\n```\n\n```bash\nscrapy shell \"https://movie.douban.com/top250\" #在命令行里测试请求的页面信息\n```\n\n---\n\n参考链接：\n[Scrapy 文档](https://docs.scrapy.org/en/latest/intro/tutorial.html)\n","tags":["Python"],"categories":["program"]},{"title":"Angular模块module","url":"/posts/5b583158.html","content":"\nangular 模块的作用\n\n- 声明某些组件、指令和管道属于这个模块。\n- 公开其中的部分组件、指令和管道，以便其它模块中的组件模板中可以使用它们。\n- 导入其它带有组件、指令和管道的模块，这些模块中的元件都是本模块所需的。\n- 提供一些供应用中的其它组件使用的服务。\n<!--more-->\n\n#### 特性模块\n\n根据不同目的又将模块进行了区分：\n\n- 领域模块：领域模块围绕特性、业务领域或用户体验进行组织。\n\n- 带路由的模块：模块的顶层组件充当路由器访问这部分路由时的目的地。\n\n- 路由配置模块：路由配置模块为另一个模块提供路由配置。\n\n- 服务模块：服务模块提供实用服务，比如数据访问和消息传递。\n\n- 小部件：小部件模块可以为其它模块提供某些组件、指令或管道。\n\n- 共享模块：共享模块可以为其它的模块提供组件，指令和管道的集合。\n","tags":["Angular"],"categories":["program"]},{"title":"Angular管道","url":"/posts/7530d0c9.html","content":"\n管道用来对字符串、货币金额、日期和其他显示数据进行转换和格式化。管道是一些简单的函数，可以在模板表达式中用来接受输入值并返回一个转换后的值。例如，你可以使用一个管道把日期显示为 1988 年 4 月 15 日，而不是其原始字符串格式。\n\n<!--more-->\n\n[管道 API 文档](https://angular.cn/api/common#pipes)\n\n#### KeyValuePipe\n\n我用到最多的是`KeyValuePipe 将 Object 或 Map 转换为键值对数组。`\n\n```html\n<!-- data = { name: 'foo', age: 12 }; -->\n<div *ngFor=\"let item of data | keyvalue\">\n  <h5>{{ item.key }}:{{ item.value }}</h5>\n</div>\n```\n\nkeyvalue 输入数组将通过键名排序，如以上的示例的输出顺序是 _age:12_ 　*name:foo*\n关于如何设置 keyvalue 的输出顺序按照属性原本的顺序，stack overflow 上有一个提问[angular-keyvalue-pipe-sort-properties-iterate-in-order](https://stackoverflow.com/questions/52793944/angular-keyvalue-pipe-sort-properties-iterate-in-order)\n\n#### 自定义管道\n\n对于 log 记录文本‘将姓名由张三变更李四’，现下想要将文本处理成‘将姓名由 张三 变更 李四’的样式。于是可以通过 Angular 自定义管道处理。\n\n```bash\nng g pipe log --module=core\n```\n\n```typescript\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'logPipe',\n})\nexport class LogPipe implements PipeTransform {\n  transform(value: string): any {\n    value = value.replace('由', '由 ');\n    value = value.replace('变更', ' 变更 ');\n    return value;\n  }\n}\n```\n\n以上生成了 logPipe 的管道，并将指定了该管道所属的模块，因为 core 是一个共享模块，所以，需要同时在模块里导出管道。\n\n```Typescript\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LogPipe } from './pipe/log.pipe';\n\n@NgModule({\n  declarations: [LogPipe],\n  imports: [CommonModule],\n  exports: [LogPipe],\n})\nexport class CoreModule {}\n```\n\n```HTML\n  <nz-timeline-item\n        nzPosition=\"left\"\n        *ngFor=\"let detail of log.f_exit_details\">\n    {{ detail | logPipe }}\n  </nz-timeline-item>\n```\n\n#### Angular 以 html 格式插值\n\n```html\n<p>{{htmlSnippet}}</p>\n<p [innerHTML]=\"htmlSnippet\"></p>\n```\n\n插值的内容总会被编码 - 其中的 HTML 不会被解释，所以浏览器会在元素的文本内容中显示尖括号。\n如果希望这段 HTML 被正常解释，就必须绑定到一个 HTML 属性上，比如 innerHTML。如果插值包含\\<script\\>标签，Angular 认为这些值是不安全的，并自动进行无害化处理，它会移除 \\<script\\> 标签，但保留安全的内容及标签。\n","tags":["Angular"],"categories":["program"]},{"title":"关于kitsch","url":"/posts/79134a3e.html","content":"\n> Kitsch 让两颗眼泪快速出场。第一颗眼泪说：孩子在草地上跑，太感动了！第二颗眼泪说，孩子在草地上跑，被感动的感觉实在太棒了，跟全人类一起被感动，尤其棒！\n> 使 Kitsch 成为 Kitsch 的，是那第二颗眼泪。(《生命中不可承受之轻》) ​​​​\n\n<!--more-->\n\n> Kitsch，中文一般翻译为「媚俗」，是十九世纪出现的德文字，起初是用来评论艺术品的贬意词，形容为迎合大众口味、粗制滥造的艺术作品。后来米兰昆德拉（Milan Kundera）扩阔其意，将它应用到政治、美好生活中。\n> 梁文道解释过米兰昆德拉何故把媚俗形容大众的情绪，他说：「『媚俗』无非就是一种情绪的专制。这种专制的重点不在于控制人民的行为，也不在于控制每个人的思想，而在于控制他们的情绪。以正义和正确之名，它要求大家必须在恰当的场合表达出恰当的情绪，哪怕那些表达有点违心或矫揉造作。」\n\n#### 维基百科 刻奇\n\n刻奇（德语：Kitsch）是一种被视为次等的视觉艺术形式，对现存艺术风格欠缺品味地作复制，又或是对已获广泛认同的艺术作毫无价值的模仿。这个概念亦有关于任何刻意地在作品中使用被公认为文化象征的元素然后廉价地大量生产这些非原创的东西。\n\n“刻奇”亦是指那些在美学上有所不足（不论是否伤感、迷人、具戏剧性或创意），在创意上只是通过重复惯例和公式，流于表面地模仿艺术作品的某些艺术种类。伤感的泛滥亦与刻奇有关。\n\n当代对刻奇的定义是带贬意的，用以描述那些并非创作出来表达自我，而仅是为了迎合商业目的和大众需求的作品。刻奇一般用作形容那些无重要性而又俗气、精心计算来讨好大众、被视为造作和空洞，而非真正的艺术的作品。\n\n刻奇这个概念最初所描述的一类艺术作品，是对 19 世纪在美学上传达夸张的伤悲和情绪的艺术手法（例如通俗剧）的一种回应，所以，“刻奇艺术”和“伤感艺术”有密切关系。\n\n由于这个概念与一般的“媚俗”仍有差异，在中文使用中被音译为“刻奇”或意译为“自媚”，即讨好自己、迎合自己。涵义是：**个体的认知与情感表达主动地或者不自觉地遵从外在的强大的秩序，以判断这种体验是否正当的、高尚的、合法的、被接纳的、合乎时宜的。从而个体的认知体验与情感表达变成了一件工具，一种矫揉造作的表演，一种讨好和谄媚。肤浅的自我感动类的情感更容易成为刻奇的情感。**\n\n#### 百度百科 媚俗\n\n媚俗就是过份迁就迎合受众，彻底放弃自己尊严，以作态取悦上级或大众的行为，而且要讨最大多数人好的一种态度，为了讨好，就必须确定什么是大家都想听的，必须为固有的观念服务。关于媚俗（kitsch），原意之一是指“俗气的艺术”。日常意义的“媚俗”显然是一个贬义词，通常用来批评那种有意迎合、巴结庸众/低级趣味的艺术行为，接近拍马屁的意思。\n任何人只要顾忌到公众的存在，而不是依从本心行事，就不免陷入媚俗的泥淖。媚俗是人类境况的一个组成部分，制定人类生存中一个基本不能接受的范围，并排拒来自这个范围内的一切。\n换句话说，媚俗要求抹煞人类生存方式中一些本来就存在的东西，而这些东西有时又实在不可避免，而社会又禁止（从行为和意识两方面）人们承认这些东西。\n\n因为媚俗，人们就往往用社会意志代替个人追求。扭曲自我的价值判断以迎合整体的价值取向。一旦两者之间出现不可调和的矛盾和分裂，整个价值判断体系就会完全失控，善与恶，美与丑，好与坏从此无从判别，甚至形成善恶两极的同位合一。为了短期的商业效益，而不惜牺牲崇高和责任。在“眼球经济”的招摇下，影视艺术的娱乐化、名人猎奇、商业炒作、隐私曝光等低俗的、恶俗的、庸俗的低趣味的媚俗现象大行其道，更可怕的是人们已经习以为常。媚俗就是把受众的心理体验压缩在了一个狭隘、浅薄的表层空间，使艺术失去了原有的深刻理性和美感，使受众失去思想的震撼和心灵的深度。远离了崇高和责任，媚俗便成了生命之重。\n\n---\n\n#### 刻奇国里说刻奇--蒋方舟\n\n一个人的自我欺骗叫做矫情，一群人的自我欺骗叫做刻奇。\n\n我们从小到大都处于刻奇之中：小时候写作文“看着胸前的红领巾我骄傲地笑了”，军训结束之后抱着教官哭得稀里哗啦，在人山人海的地方求婚，引来千人围观如同商场促销。\n\n这些时刻的共同点是：当事人带着激动和赞美看着自己的灵魂，感慨自己的崇高。\n\n网络时代，刻奇变得越来越专制：灾难之后，微博上满屏插遍红蜡烛，拒绝加入感伤洪流的人被视为冷酷或居心叵测；微信上大量的“男人一生要懂的 10 句话”“母亲 20 个让你流泪的瞬间”“关于小日本你不知道的 99 件事”，大多缺乏逻辑和审美，极尽煽情之能事，让人躲避不及。\n\n刻奇用“珍爱生活，快乐当下”的空洞慰藉，掩盖人生的千疮百孔。刻奇用热泪高呼和呐喊，欺骗了人们渺小的灵魂。刻奇用粗糙简单的“正能量”包装苦难，让我们对社会顺从。\n\n刻奇，是一切真实的反面。\n\n**格林伯格与刻奇**\n\n“刻奇（kitsch)”一词来源于 19 世纪的德国，它的原意如今并不可考。一说是指在三明治上涂抹一些精美的东西，来抚慰孩童；另一种说法是说保留一些破烂，作为人生中某个时刻的纪念。刻奇被广泛认知的定义，是指一些通俗的、商业化的艺术和文学，包括杂志封面、广告、廉价油画、畅销小说、好莱坞电影等等。刻奇也指一种简单化的艺术风格，比如用黄昏来表示柔和氛围，用儿童、奔跑的小狗来表示天真无邪。\n\n1939 年，美国最重要的艺术批评家之一克莱门特·格林伯格发表了一篇《前卫与刻奇》的文章，最早预言了刻奇将会是艺术的坟墓。\n\n根据格林伯格的理论：刻奇是工业革命的产物。在此之前，穷人居住在乡下，富人住在城市，地理的差距让他们的生活井水不犯河水，而读写能力也是区别彼此趣味的工具。工业革命之后，穷人转移到城市，成为了无产阶级和小资产阶级，并且为了更有效率地工作而学会了读写。\n\n于是，阶级之间的隔阂被打破，居住空间上的隔阂被打破，文化享受上的隔阂也被打破。然而，工人并没有贵族累积下来的审美体验，也没有那么多的闲暇，甚至没有那么多用来欣赏艺术的预算。于是，刻奇文化应运而生——为那些对真正的文化价值麻木、却又渴望得到审美体验的人设计。\n\n看廉价的爱情小说，就可以获得的感动，何必去费劲读莎士比亚？看列宾的画就一目了然的情感与故事，何必去在毕加索的一堆颜料和线条当中猜测作者意图？\n\n这就是刻奇为艺术带来的伤害：观众用廉价的成本，获得廉价的眼泪，并且深深为此满足。\n\n格林伯格对于刻奇的批评，体现出艺术批评家的清高。他的清高当然是对的，这是自古艺术家的最高价值。明朝文人沈德符曾经说过自己识别出的三重审美趣味：文人雅士居上，士绅热衷艺术者居中，易上当受骗的新安或徽州商人居末。\n\n然而真正的、严肃的艺术必然是高成本的——无论是物质上还是时间上。古代有个故事，说有个商人想得到一幅《水月观音》，再三央求，前后十数年，画家终于答应下来，历时三年才完成，当画完成送给商人的时候，其人已经故去。\n\n无法阻止普罗大众有享受艺术的要求，也无法要求一个工人为一幅名画穷尽一生，要求一个家庭妇女精准地理解陀思妥耶夫斯基页里行间的绝望。于是，我们抱怨刻奇、嘲笑它，去无法逃避它如洪水一般的席卷。\n\n格林伯格生活在一个真正的艺术与刻奇肉搏的年代，而如今，刻奇文化已经取得了世界性的压倒性的胜利。\n\n一百年前，没有非洲人是刻奇的，而如今，义乌小商品市场都能批发到非洲风情的硬木雕塑。被格林伯格斥为“高等刻奇产品”的《纽约客》现在只剩下“高等”两个字。艺术家要么是热闹的，要么在表演着孤独。\n\n刻奇是人们找到的一条通往高雅的捷径，殊不知，就是这条小道毁了高雅。\n\n人类正在走向虚张声势，而刻奇，就是我们的缩影。\n\n**昆德拉与刻奇**\n\n捷克作家米兰·昆德拉在《生命中不能承受之轻》当中，给了刻奇新的含义：\n\n看到一个小孩子在草地上奔跑，第一颗眼泪说：孩子在草地上跑，太感动了！第二颗眼泪说：和所有的人类在一起，被草地上奔跑的孩子们所感动，多好啊——使刻奇成为刻奇的，是那第二颗眼泪。\n\n在昆德拉的口中，刻奇不仅是一种艺术表现方式，而是成为了一种情感——\n\n一种能够被分享的情感。\n\n格林伯格认为刻奇的反面是艺术，而昆德拉认为刻奇的反面是粪便。\n\n昆德拉小时候看到一本木刻插画的《圣经》，看到上帝的形象，想如果他有嘴，就得吃东西；如果吃东西，就有肠子。这个想法让他不寒而栗：一种上帝和粪便共存的事实。\n\n一个刻奇的世界，就是一个既不承认粪便，也不承认亚当和夏娃之间有性亢奋的世界。一个刻奇的世界，是为了扩张领土而发动战争，然而把战争的目的包装得崇高而神圣的世界。\n\n昆德拉对于刻奇的反对，与其说是道德层面的，不如说是美学层面的。他反感统治者在检阅台上高高在上的笑容，同样反感抗议者的热泪与激情。\n\n一个二十多岁拿起枪去山区参加游击队的男青年，与其说是收到某种召唤，不如说是被自己的形象迷住：在一个汇聚着成千上万目光注视下的伟大舞台。\n\n刻奇是自我迷恋，是灵魂的膨胀。昆德拉写道：“促使人举起拳头，握住枪，共同保卫正义的或者非正义的事业的，不是理智，而是恶性膨胀的灵魂。它就是碳氢燃料。没有这碳氢燃料，历史的发动机就不能转动。”\n\n《华尔街日报》曾经刊载过一篇名为《为什么独裁者爱刻奇》的文章。文章的配了一幅图：金正日端坐在巨幅图画前，画中是奔流的瀑布和几只小鸟。\n\n报道说，这幅画就是典型的刻奇艺术，采取的是非常浅白的隐喻：奔流而猛烈的瀑布象征着领导人的绝对力量，而几只小鸟象征着乐园中的人民。\n\n属于刻奇艺术的，还有伊拉克前总统萨达姆修建的“胜利之手”的雕塑。两只巨大的手按照萨达姆的手建造，各握一只巨大的剑在天空中汇合。同样被批评为“幼稚的刻奇”的，还有普京裸着上身蝶泳和骑马的照片，“显示出自己超级汉子，而且把自己视为超越常人的象征”。\n\n刻奇，作为一种宣传，是不惜一切讨好所有人的态度。为了说服所有人，它让生命超越自身，呈现出一种不自然的美感。\n\n**我们与刻奇**\n\n人们期待得到高于自身的人物的赞扬，在很久之前，这个评价的人是神、是上帝、是高于自己的生命体。文艺复兴和科学的发展，把人们从上帝那里解救出来。没有了上帝，我们要在日常生活中寻找一个上帝的化身，所以要赋予生命一个崇高而神圣的意义，一个热泪盈眶的理由，一个感觉自己与其他人类同在的时刻。\n\n然而，在大多数时候，这种神圣的时刻并没有出现。所以我们只能自我欺骗，并寻求认同。\n\n我们寻找容易擦掉的眼泪：韩剧中得绝症死掉的女主角，电影里妻离子散、母子分离得哭天抢地、妈妈的白发和爸爸的驼背；我们寻找成本极低的崇高：在微博上呐喊“不转不是中国人”“这一夜我们都是 XX 人”；我们寻找轻而易举的共鸣：“能哼出《黑猫警长》的主题歌说明你老了”“还记得小时候拍过的“圣斗士星矢”的画片么？”\n\n欺骗是对别人掩盖真情，自欺是对自己掩盖真情。自我欺骗很难克服，因为它如同气球爆炸一样在瞬间发生，自身甚至毫无察觉。\n\n克服刻奇，首先要做到的是克服孤独。当其他人共同感动、流泪、愤怒、快乐的时候，要有足够的勇气不与他人同悲同喜。\n\n克服刻奇，并不是靠嘲笑他人“刻奇”来实现，而是靠捍卫自身的情感，如同捍卫自己的城堡。\n\n---\n\n#### 文艺青年与“刻奇” --蒋方舟\n\n前段时间我去参加了一个文艺活动，是个读诗会。读的是波兰著名女诗人辛波斯卡的诗，参加者大多数是某个专门读诗歌的公共微信账号的声优和听众。\n\n我从来没有参加过如此文艺的活动，活动之前，我以为人数并不会很多——最多十几人吧，因为辛波斯卡并不是一个非常大众的诗人。令我诧异的是，冬日的晚上，小小的场地竟然挤得满满当当，人群挤在门口探着头。\n\n陌生读者聚在一起去分享一个作者是一件很有意思的事情。一部作品一旦面世，就成了读者的财产，被读者按照自己的意愿去理解。比如东欧作家只是按照作家的本能书写现实，却被西方理解成政治寓言与符号。而在读诗会，每个参与者都愿意相信自己与诗人有种说不出的神秘联系：“这首诗是为我写的。”\n\n让我印象深刻的一个女性，她专门坐了好几个小时的火车，从外地赶来。她说读诗让自己摆脱出庸常的琐事，希望自己像辛波斯卡一样，面对世俗的荒谬，有一双清亮的眼睛。她说得真诚，读得动情，听者也无不感动。\n\n这是一个不失温馨的晚上，所有人沉浸在同样一种文艺的感动氛围中。但到了最后，不知道为什么，我稍微有点出戏。我有种感觉：任何情感一旦被组织化，就有宗教化的嫌疑。组织中的所有人进入了一种接近幻觉的自我感动，看到谁都亲切，任何一句话都觉得说中了内心深处最柔软的角落。\n\n我想到了魏晋时候，文人雅士空谈玄学时要服食五石散——也就是嗑药。它的作用是能让人的思维和身体都变得异常敏感，因为需要喝酒来发散药力，所以每个人都嗨赖赖。我还读过一个未经证实的野史，说古人弹古琴前焚香洗手，焚的香就是致幻剂。清醒的时候听古琴声并不悦耳，略有些生涩，然而在致幻剂的作用下，那声音对听众来说宛如排山倒海。如果无法设想其效果，可以想象一下在酒精和大麻作用下听摇滚乐。\n\n人群聚集时去践行一种共同情感时，是需要一些幻觉的。人生中经常有这种时刻，处在群众之中，感情起伏之剧烈仿佛脱离自己的掌控，当回到现实生活，会有恍若隔世之感。\n\n我上一次有同样感觉的场合，是关于台湾女作家三毛的读者分享会。到场的以女性为主，每个人都视三毛为灵魂知己，是世界上的另一个自己。所有人都讲述着关于“心灵与爱”的故事，轻声说着散文诗里才会出现的词汇，让你觉得在这种场合下问旁边人一句“一会儿去哪儿吃饭？”是一件不雅而亵渎的事情。\n\n“刻奇”，这是无需服用的致幻剂，是不会对身体造成伤害的五石散。\n\n刻奇（kisch），根据景凯旋在《大众的坏品味》中的叙述，这个词源于德语 Kitschen，原义是“涂抹”，指在三明治上抹上一点精美的东西，用来抚慰受到伤害的孩子。本来是用来形容廉价而矫作的艺术品，比如画给中产阶级的风景油画。\n\n后来，米兰·昆德拉把这个词上升到心理学层面，他在《生命中不能承受之轻》中，举了一个经典的例子：“第一种眼泪说：看见孩子们在草地上奔跑着，多好啊！第二种眼泪说：和所有的人类在一起，被草地上奔跑的孩子们所感动，多好啊！ 第一种眼泪顶多能被称为“自媚”，或者说有点“矫情”，基本无可厚非；第二种眼泪，就是十足的 kitsch 了。”\n\n“刻奇”由于在很长时间内都被译作“媚俗”而被误会，把它和畅销书、贺岁片、低级笑话、袒胸露乳的女郎联想在一起。其实并不是这样，“刻奇”是很多，是文艺青年聚集在一起，被自己以及彼此感动；也是小众范围内口碑好的艺术电影，是金碧辉煌的土豪别墅，也是刻意朴素简约的艺术住宅。\n\n人人都不能免俗地有着“刻奇”时刻，哪怕你再清醒与警惕。人无法只依靠衣食住行吃喝拉撒地在这个世界上活着，而必须对生活的意义进行包装，对崇高情感（例如集体荣誉、爱国、牺牲）的追求，对美学的向往，对终极目标的想象。因为有这些东西，人更能解释“为什么要活着”。而当我们把它代入日常生活，植入社群，由自我欣赏变成一种群体共鸣，我们就陷入了“刻奇”。\n\n没有必要——也不可能远离“刻奇”，它并不是一件值得嘲笑的情感。至少，文艺青年因为它而不再孤独。\n","tags":["读书"],"categories":["记录"]},{"title":"通过 Github Action 自动部署 Hexo","url":"/posts/89195a6e.html","content":"\n以前将 Github page 页面代码和 Hexo 源码分别放在了一个仓库的两个分支里面，每次更新文章或者修改格式两个分支都要单独 push 一下。  \n今天终于打破怪圈去尝试通过 Github Action 自动部署 Github page，而且将 Hexo 源码单独放在了一个私有的仓库里，只要我往这个仓库提交代码，Action 就会自动将代码处理部署到 Github page 上去。以前因为仓库是 Github page 没法设置私有，心理总有些难受，现在意外实现了源码私有竟然对我潜在的强迫症有治愈效果。\n\n<!--more-->\n\n为仓库设置一个 github action 需要在.github/workflows 路径下添加一个 yaml 格式的配置文件。也可以直接在 github action 仓库里使用 Node.js 的 workflow，然后自己再编辑配置文件。\n\n配置文件的重点在于如何通过 action 成功登录到 github 账户将代码部署到仓库，github 免密码登录有两种方式，请求 token 和 ssh 密钥登录。\n\n> token:Personal access tokens function like ordinary OAuth access tokens. They can be used instead of a password for Git over HTTPS, or can be used to authenticate to the API over Basic Authentication.\n\n不同的方法，对应 hexo 的配置文件\\_config.yml 里部署的仓库链接也不一样\n\n```yaml\n# Deployment\n## Docs: https://hexo.io/docs/one-command-deployment\ndeploy:\n  type: git\n  repo:\n    #token方式-> https://github.com/yourname/yourname.github.io.git\n    #ssh方式-> git@github.com:yourname/yourname.github.io.git\n  branch: master\n```\n\n我使用 ssh 的方式连接，下面是我的 workflow 的配置文件。\n\n```yaml\nname: hexo-deploy\non:\n  push:\n    branches: [master]\n  pull_request:\n    branches: [master]\n\nenv:\n  TZ: Asia/Shanghai\n\njobs:\n  build:\n    runs-on: ubuntu-latest\n    strategy:\n      matrix:\n        node-version: [15.x]\n        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/\n    steps:\n      - name: 将仓库内 mater 分支下载到工作目录\n        uses: actions/checkout@v2\n      - name: Use Node.js ${{ matrix.node-version }}\n        uses: actions/setup-node@v2\n        with:\n          node-version: ${{ matrix.node-version }}\n      - name: install packages\n        run: npm ci\n      - name: Setup hexo env\n        env:\n          DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}\n        run: |\n          #set up private key for deploy\n          mkdir -p ~/.ssh/\n          echo \"$DEPLOY_KEY\" | tr -d '\\r' > ~/.ssh/id_rsa\n          chmod 600 ~/.ssh/id_rsa\n          ssh-keyscan github.com >> ~/.ssh/known_hosts\n          git config --global user.name 'yourname'\n          git config --global user.email 'youremail'\n      - name: Deploy\n        run: npm run deploy\n```\n\nssh 密钥登录采用的是非对称加密，需要先获取一对密钥，私钥和公钥。\n\n```bash\n$ ssh-keygen -t rsa\n```\n\n复制公钥，在 github Settings/SSH and GPG keys 里选择添加新 ssh key，随意命名，粘贴公钥。  \n复制私钥，在源码的仓库 Settings/Secrets 里选择添加新的仓库 secret，记住命名，粘贴私钥 (我这里的命名是 DEPLOY_KEY)。\n\n> 关于 secrets: Secrets are environment variables that are encrypted. Anyone with collaborator access to this repository can use these secrets for Actions.\n> Secrets are not passed to workflows that are triggered by a pull request from a fork. Learn more.\n\n关于配置文件的说明：\n\nnpm ci 相当于 npm install，但速度快于 npm install\n\n```bash\n    mkdir -p ~/.ssh/\n    echo \"$DEPLOY_KEY\" | tr -d '\\r' > ~/.ssh/id_rsa\n    chmod 600 ~/.ssh/id_rsa\n    #客户端的私钥需要放在当前管理员路径下的.ssh 目录，默认命名 id_rsa，将其权限设置为 600，仅允许文件所有者读取。\n    #变量 DEPLOY_KEY 加双引号，避免不必要的转义\n    ssh-keyscan github.com >> ~/.ssh/known_hosts\n    #获取服务器的域名 github.com 的公钥哈希值，并将其保存到文件 known_hosts，设为已知主机。\n```\n\n**更新：意外发现文章时间显示不正确，在配置文件里添加时区就好了 env:TZ: Asia/Shanghai**\n\n---\n\n参考链接：\n[阮一峰-SSH 教程](https://wangdoc.com/ssh/)\n","tags":["Hexo","Github"],"categories":["program"]},{"title":"原型Prototype","url":"/posts/1138741b.html","content":"\nJavaScript 常被描述为一种基于原型的语言 (prototype-based language)——每个对象拥有一个原型对象，对象以其原型为模板、从原型继承方法和属性。原型对象也可能拥有原型，并从中继承方法和属性，一层一层、以此类推。这种关系常被称为原型链 (prototype chain)，它解释了为何一个对象会拥有定义在其他对象中的属性和方法。\n\n<!--more-->\n\n#### JS 是靠原型链传递属性和方法\n\n在传统的 OOP 中，首先定义“类”，此后创建对象实例时，类中定义的所有属性和方法都被复制到实例中。在 JavaScript 中并不如此复制——而是在对象实例和它的构造器之间建立一个链接（[[prototype]]），之后通过上溯原型链，在上层对象中找到这些属性和方法。\n\n#### JS 对象的[[prototype]]\n\n```javascript\nObject.getPrototypeof(Object.prototype); //null\n```\n\nJavaScript 的对象都有一个特殊的[[prototype]]内置属性，这个属性指向了创建该对象的构造函数的原型，就是这个属性将对象连接在了一起，构成了 JavaScript 的原型链。  \n所有的[[prototype]]链最终都指向 Object.prototype，这就是所有对象都有 valueOf 和 toString 方法的原因，因为这是从 Object.prototype 继承的。而 Object.prototype 的原型是 null，null 就是原型链的尽头。\n\n```javascript\nconst obj1 = {\n  str1: 'hello motherfucker',\n};\nconst obj2 = Object.create(obj1); //create方法为创建的对象指定原型对象\nconsole.log(obj2); //{}\nconsole.log(obj2.str1); //'hello mothercfucker'\nObject.getPrototypeof(obj2) === obj1; //true\n```\n\nobj1 对象有一个变量 str1，通过 Object.create()方法为新建的对象 obj2 指定它的原型对象为 obj1。  \n当访问 obj2.str1 时，会首先查找 obj2 是否存在这个属性，如果不存在通过它的内置属性[[prototype]]访问它的原型对象 obj1，查找原型对象里是否存在这个属性。\n\n**访问对象的[[prototype]]属性**\n\n因为对象的[[prototype]]属性是内置属性，没有办法直接访问，但是可以通过 Object.getPrototypeof 和对象的\\_\\_proto\\_\\_方法访问。  \n\\_\\_proto\\_\\_方法存在于内置的 Object.prototype 中，它就像是 getter/setter 方法，访问\\_\\_proto\\_\\_时，实际上是调用了\\_\\_proto\\_\\_()方法，这个方法可以在内部访问对象的[[prototype]]属性在外部展示。\n\n#### JS 函数的 prototype 属性\n\n```javascript\nfunction Foo() {}\nFoo.prototype; //{}\nconst test = new Foo();\ntypeof test; //object\nObject.getPrototypeof(test) === Foo.prototype; //true\n```\n\n所有的函数默认都会有一个名为 prototype 的公有且不可枚举的属性，对于普通函数来说，该属性基本无用。但是，对于构造函数来说，生成实例的时候，该属性会自动成为实例对象的原型。  \n原型对象的作用，就是定义所有实例对象共享的属性和方法。这也是它被称为原型对象的原因，而实例对象可以视作从原型对象衍生出来的子对象。\n\n#### constructor 属性\n\n```javascript\nObject.prototype.constructor === Object; //true\nconst obj = {};\nobj instanceof Object; //true\n```\n\nprototype 对象有一个 constructor 属性，默认指向 prototype 对象所在的构造函数。  \ninstanceof 检测对象是否为某个构造函数的实例。\n\n---\n\n- [cnBlog-JS 中的 prototype、\\_\\_proto\\_\\_与 constructor](https://www.cnblogs.com/jing-tian/p/11459716.html)\n- [MDN-对象原型](https://developer.mozilla.org/zh-CN/docs/Learn/JavaScript/Objects/Object_prototypes)\n- [对象的继承](https://wangdoc.com/javascript/oop/prototype.html)\n","tags":["JavaScript"],"categories":["program"]},{"title":"浏览器引擎以及渲染原理","url":"/posts/a624da3a.html","content":"\n一个典型的浏览器有一个渲染引擎和一个独立的 JavaScript 引擎，因此浏览器内核可以分成两个部分，渲染引擎和 JS 引擎。但后来 JS 引擎越来越独立，内核就倾向于单指渲染引擎。而同一个网页在不同浏览器之间的差异就是不同浏览器使用的不同内核造成的。\n\n<!--more-->\n\n#### 浏览器引擎\n\n排版引擎（layout engine），也称为浏览器引擎（browser engine）、页面渲染引擎（rendering engine）或样版引擎，它是一种软件组件，负责获取标记式内容（如 HTML、XML 及图像文件等等）、整理信息（如 CSS 及 XSL 等），并将排版后的内容输出至显示器或打印机。所有网页浏览器、电子邮件客户端、电子阅读器以及其它需要根据表示性的标记语言（Presentational markup）来显示内容的应用程序都需要排版引擎。\n\n著名引擎:\n\n- Mozilla 开放源代码项目的网页浏览器引擎 Gecko，被 Mozilla 代码库中的各种产品所使用，其中包括 Firefox 网页浏览器、Thunderbird 电子邮件客户端和 SeaMonkey 网络包。Goanna 是 Gecko 的一个分支。\n- KDE 的开放源代码 KHTML 引擎在 KDE 的 Konqueror 网页浏览器使用，后来成为 WebKit 的基础，WebKit 是 Apple Safari 和早期 Google Chrome 网页浏览器的引擎。\n- Google 最初使用 WebKit 用于 Chrome 浏览器，但最终将其分支为自行建构的 Blink 引擎。所有以 Chromium 为基础的浏览器都使用 Blink，使用 CEF（英语：Chromium Embedded Framework），Electron 或任何其他 Chromium 嵌入式框架构建的应用程序也是如此。\n- Internet Explorer 的网页浏览器引擎 Trident，被 Microsoft Windows 平台的许多应用程序如 Outlook Express、某些版本的 Microsoft Outlook 和 Winamp、RealPlayer 中的迷你浏览器所使用。Trident 已经被 EdgeHTML 所取代，2019 年 EdgeHTML 被 Blink 取代。\n- Opera 软件公司的专有的 Presto 引擎被授权给其他许多软件供应商，也在 Opera 浏览器所使用，直到 2013 年被 Blink 取代。\n\n#### JavaScript 引擎\n\nJavaScript 引擎是一个专门处理 JavaScript 脚本的虚拟机，一般会附带在网页浏览器之中。\n\n著名引擎:\n\n- Rhino，由 Mozilla 基金会管理，开放源代码，完全以 Java 编写。\n- SpiderMonkey，第一款 JavaScript 引擎，早期用于 Netscape Navigator，现时用于 Mozilla Firefox。\n- V8，开放源代码，由 Google 丹麦开发，是 Google Chrome 的一部分。\n- JavaScriptCore，开放源代码，用于 Safari。\n- Chakra (JScript 引擎)，用于 Internet Explorer。\n- Chakra (JavaScript 引擎)，用于 Microsoft Edge。\n\n#### 浏览器引擎前缀\n\n浏览器厂商们有时会给实验性的或者非标准的 CSS 属性和 JavaScript API 添加前缀，这样开发者就可以用这些新的特性进行试验，同时（理论上）防止他们的试验代码被依赖，从而在标准化过程中破坏 web 开发者的代码。开发者应该等到浏览器行为标准化之后再使用未加前缀的属性\n\n主流浏览器引擎前缀:\n\n- -webkit- （谷歌，Safari，新版 Opera 浏览器，以及几乎所有 iOS 系统中的浏览器（包括 iOS 系统中的火狐浏览器）；基本上所有基于 WebKit 内核的浏览器）\n- -moz- （火狐浏览器）\n- -o- （旧版 Opera 浏览器）\n- -ms- （IE 浏览器 和 Edge 浏览器）\n\n#### 浏览器渲染原理\n\nWeb 页面运行在各种各样的浏览器当中，浏览器载入、渲染页面的速度直接影响着用户体验，而页面渲染就是浏览器将 html 代码根据 CSS 定义的规则显示在浏览器窗口中的这个过程。\n\n- HTML 代码转化成 DOM\n- CSS 代码转化成 CSSOM（CSS Object Model）\n- 结合 DOM 和 CSSOM，生成一棵渲染树（包含每个节点的视觉信息）\n- 生成布局（flow），即将所有渲染树的所有节点进行平面合成\n- 将布局绘制（paint）在屏幕上\n\n\"生成布局\"（flow）和\"绘制\"（paint）相对更加耗时，合称为\"渲染\"（render）。\n\n**重排和重绘**\n\n网页生成的时候，至少会渲染一次。用户访问的过程中，还会不断重新渲染。\n以下三种情况，会导致网页重新渲染。\n\n- 修改 DOM\n- 修改样式表\n- 用户事件（比如鼠标悬停、页面滚动、输入框键入文字、改变窗口大小等等）\n\n重新渲染，就需要**重新生成布局**和**重新绘制**。前者叫做\"重排\"（reflow），后者叫做\"重绘\"（repaint）。  \n需要注意的是，\"重绘\"不一定需要\"重排\"，比如改变某个网页元素的颜色，就只会触发\"重绘\"，不会触发\"重排\"，因为布局没有改变。但是，\"重排\"必然导致\"重绘\"，比如改变一个网页元素的位置，就会同时触发\"重排\"和\"重绘\"，因为布局改变了。\n\n**网页渲染效率**\n\n重排和重绘会不断触发，这是不可避免的。但是，它们非常耗费资源，是导致网页性能低下的根本原因。\n提高网页性能，就是要降低\"重排\"和\"重绘\"的频率和成本，尽量少触发重新渲染\n\n#### CSS\n\n- 避免使用 table 布局。\n- 尽可能在 DOM 树的最末端改变 class。\n- 避免设置多层内联样式。\n- 将动画效果应用到 position 属性为 absolute 或 fixed 的元素上。\n- 避免使用 CSS 表达式（例如：calc()）。\n\n#### JavaScript\n\n- 避免频繁操作样式，最好一次性重写 style 属性，或者将样式列表定义为 class 并一次性更改 class 属性。\n- 避免频繁操作 DOM，创建一个 documentFragment，在它上面应用所有 DOM 操作，最后再把它添加到文档中。\n- 也可以先为元素设置 display: none，操作结束后再把它显示出来。因为在 display 属性为 none 的元素上进行的 DOM 操作不会引发回流和重绘。\n- 避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。\n- 对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。\n\n---\n\n参考链接:\n\n- [掘金-腰花](https://juejin.cn/post/6844903569087266823)\n- [阮一峰-网页性能管理详解](https://www.ruanyifeng.com/blog/2015/09/web-page-performance-in-depth.html)\n- [浏览器前缀](https://developer.mozilla.org/zh-CN/docs/Glossary/Vendor_Prefix)\n","tags":["杂识"],"categories":["program"]},{"title":"JavaScript对象","url":"/posts/17d9136e.html","content":"\nJavaScript 有七种主要类型，string、number、boolean、null、undefined、object、symbol(es6)。  \n除对象外，其他统称为简单基本类型，string、number、boolean、null、undefined、symbol，它们本身并不是对象。尽管 typeof null 会返回 object，但这是语言 bug(null 二进制表示是全 0，而前三位为 0 就被 js 判为对象)。\n\n<!--more-->\n\nJavaScript 有许多特殊的对象子类型，称之为复杂基本类型。其中函数和数组就是对象的一种类型。\n\n```javascript\ntypeof 123; //'number'\ntypeof 'motherfucker'; //string\ntypeof [1, 2, 3, 4]; //object\ntypeof function a() {}; //function\n```\n\nJavaScript 中还有一些对象子类型，String、Number、Boolean、Object、Function、Array、Date、RegExp、Error，通常被称为内置对象，尽管有些内置对象的名字和简单基本类型相似。  \n这些内置对象实质上是一些内置函数，它们可以当作构造函数(即由 new 产生的函数调用)来使用，从而可以构造一个对应子类型的新对象。\n\n```javascript\n//文字形式\nconst str = 'hello motherfucker';\ntypeof str; //'string'\nstr instanceof String; //false\n\n//构造形式\nconst strObject = new String('hello motherfucker');\ntypeof strObject; //'object'\ntypeof String; //'function'\nstrObject instanceof String; //true\nstrObject instanceof Object; //true\n```\n\n一般而言，const str='hello motherfucker' str 只是一个字面量，并且是一个不可变的值，如果要在这个字面量上执行一些操作，比如获取字符串长度等就需要先将它转换成 String 对象。而我们平时可以直接访问属性和方法是因为 JavaScript 引擎会自动把自变量转换成 String 对象。\n\n对于字符串、布尔和数值，它们的文字形式声明是一个字面量，而构造声明类型是对象。null 和 undefined 没有构造形式只有文字形式，Date 只有构造没有文字。而对于数组、函数、对象、正则表达式，它们的文字和构造声明都是对象。  \nError 对象一般是在抛出异常时被自动创建，也可以使用 new Error()主动创建。\n\n---\n\n#### 对象的内容\n\n对象的内容是由一些存储在特定命名位置的任意类型值组成，即属性。所谓特定命名位置是指这些值并未存储在对象内部，只有属性的名称被存储到了对象容器内部，它们引用了这些值真正的存储位置。\n\n```javascript\nconst myObj = {\n  a: 'hello motherfucker',\n};\nmyObj.a; //属性访问\nmyObj['a']; //键访问\n```\n\n属性访问要求属性名满足标识符的命名规范，而键访问可以接受任意字符串作为属性名。  \n在对象中，属性名永远都是字符串，如果使用字符串以外的其它类型作为属性名，会被转换成字符串。\n\n#### 复制对象\n\n浅拷贝和深拷贝的区别，浅拷贝会复制原对象里定义的属性，而引用原对象里的引用；深拷贝则会复制原对象里的属性并且复制原对象里的引用。也就是说浅拷贝对象的引用和原对象里的引用是同一个源，而深拷贝则会引用一个新复制的源。\n\nJSON 安全的对象：可以被序列化成一个 JSON 字符串并且可以根据这个字符串解析出一个结构和值完全一样的对象。它只适应于一般的拷贝(数组或者对象)，会丢失对象里的 function 和 undefined，以及其他一些问题。\n\n```javascript\nconst newObj = JSON.parse(JSON.stringify(oldObj));\n```\n\nES6 Object.assign()浅拷贝，第一个参数是目标对象，之后还可以跟一个或多个源对象。它会遍历一个或多个源对象的所有可枚举的自有键并把它们复制到目标对象。\n\n#### 属性描述符\n\n```javascript\nconst myObj = {\n  a: 2,\n};\nObject.getOwnPropertyDescriptor(myObj, 'a');\n/*\n{\n    value:2,\n    writable:true,\n    enumerable:true,\n    configureble:true\n}\n*/\n```\n\n```javascript\nconst myObj = {};\nObject.defineProperty(myObj, 'a', {\n  value: 2,\n  writable: true,\n  configurable: true,\n  enumerable: true,\n});\n```\n\n- writable 决定是否可以修改属性的值\n- configurable 只要属性是可配置的，就可以使用 defineProperty()方法来修改属性描述符\n  即使属性是 configurable:false 还是可以将 writable 的状态由 true 改为 false，但是无法由 false 改为 true\n  除了无法修改，还会禁止删除这个属性\n- enumerable 控制属性是否会出现在对象的属性枚举中。\n  如果设置成 false，属性就不会出现在枚举中，但是仍可以正常访问\n\n#### 不变性\n\n1. 对象常量  \n   设置 writable:false 和 configurable:false 就可以创建一个常量属性(不可修改、重定义或者删除)\n2. 禁止扩展 Object.preventExtensions()\n   禁止对象添加新属性\n3. 密封 Object.seal()\n   密封之后不能添加新属性，也不能重新配置或者删除任何现有属性，但是可以修该属性的值  \n   方法实际上会在现有对象上调用 Object.preventExtensions()并把所有现有属性标记为 configurable:false\n4. 冻结 Object.freeze()\n   禁止对于对象本身及其任意直接属性的修改  \n   方法实际上会在现有对象上调用 Object.seal()并把 writable 标记为 false\n\n#### [[GET]] 和 [[PUT]]\n\n对象默认的[[GET]]和[[PUT]]操作分别可以控制属性值的设置和获取\n\n1. [[GET]]\n   myObj.a 在 myObj 上实际是实现了[[GET]]操作，对象默认的内置[[GET]]操作首先在对象中查找是否有名称相同的属性，如果找到就返回这个属性的值。  \n   然而，如果没有找到名称相同的属性，按照[[GET]]算法的定义会遍历可能存在的[[prototype]]链。  \n   如果都没有找到名称相同的属性，那[[GET]]操作会返回 undefined  \n   (这种方法和返回变量时是不一样的，引用一个当前词法作用域不存在的变量，并不会像对象属性返回 undefined，而是会抛出 ReferenceError 异常)\n\n   ```javascript\n   myObj.c;\n   //undefined\n   a;\n   //Uncaught ReferenceError: a is not defined\n   ```\n\n2. [[PUT]]\n   给对象的属性赋值时会触发[[PUT]]，[[PUT]]算法会检查以下内容\n   - 对象中是否已经存在这个属性\n   - 属性是否是访问描述符，如果是并且存在 setter 就调用 setter\n   - 属性的数据描述符中 writable 是否是 false，是静默失败或者抛出异常\n   - 如果都不是，将该值设置为属性的值\n\n#### Getter 和 Setter\n\ngetter 和 setter 是隐藏函数，getter 会在获取属性值时调用，setter 会在设置属性值时被调用  \n当给属性定义 getter、setter 时，这个属性会被定义为‘访问描述符’(和‘数据描述符’相对)。对于访问描述符来说，JavaScript 会忽略它们的 value 和 wirtable 特性，取而代之的是关心 set 和 get 特性\n\n```javascript\nconst myObj = {\n  get a() {\n    return 2;\n  },\n};\nmyObj.a = 3;\nmyObj.a; //2\n```\n\n由于只定义了 a 的 getter，所以对 a 的值进行设置时 set 操作会忽略赋值操作，不会抛出错误。\n\n```javascript\nconst myObj = {\n  get a() {\n    return this._a_;\n  },\n  set a(val) {\n    this._a_ = val * 2;\n  },\n};\nmyObj.a = 2;\nmyObj.a; //4\n```\n\n#### 存在性\n\n```javascript\nconst myObj = {\n  a: 2,\n};\n'a' in myObj; //true\n'b' in myObj; //false\nmyObj.hasOwnProperty('a'); //true\nmyObj.hasOwnProperty('b'); //false\n```\n\nin 操作符会检查属性是否在对象及其[[prototype]]原型链中。(检查的是属性名是否存在)  \nhasOwnProperty 只会检查属性是否在 myObj 对象中，不检查原型链\n\n- 枚举\n\n  ```javascript\n  const myObj = {\n    a: 1,\n    b: 2,\n  };\n  Object.defineProperty(myObj, 'b', {\n    enumerable: false,\n  });\n  for (let i in myObj) {\n    console.log(i);\n  }\n  //'a'\n  ```\n\n  可枚举就相当于可以出现在对象属性的遍历中 for...in..\n\n  另外一种区别可枚举的方式 propertyIsEnumerable()\n\n  ```javascript\n  const myObj = {\n    a: 1,\n    b: 2,\n  };\n  Object.defineProperty(myObj, 'b', {\n    enumerable: false,\n  });\n  myObj.propertyIsEnumerable('a'); //true\n  myObj.propertyIsEnumerable('b'); //false\n\n  Object.keys(myObj); //['a']\n  Object.getOwnPropertyNames(myObj); //['a','b']\n  ```\n\n  propertyIsEnumerable()会检查给定的属性名是否直接存在于对象之中(而不是原型链)，并且满足 enumerable:true。\n\n  Object.keys()会返回一个数组，包含所有的可枚举属性。Object.getOwnPropertyNames()会返回一个数组，包含所有属性，无论它们是否可枚举。  \n  两个方法都只会查找对象直接包含的属性而不再查找原型链。\n","tags":["JavaScript"],"categories":["program"]},{"title":"Bakgorund属性","url":"/posts/c85f1380.html","content":"\nBackground 简写依次以下面的顺序\n\n- background-color\n- background-image\n- background-repeat\n- background-attachment\n- background-position\n\nbackground-attachment 设置背景图像是否固定 fixed 或者随着页面滚动 scroll\n","tags":["CSS"],"categories":["program"]},{"title":"网页加载进度条","url":"/posts/767cdd93.html","content":"\ndocument.readyState 属性描述了文档的加载状态，发生变化时，会在 document 对象上触发 readyStateChange 事件。  \ndocument.readyState 有三种状态，loading、interactive、complete\n\n- loading document 仍在加载\n- interactive 文档已被解析，\"正在加载\"状态结束，但是诸如图像，样式表和框架之类的子资源仍在加载。\n- complete 文档和所有子资源已完成加载。表示 load 状态的事件即将被触发。\n\n<!-- more -->\n\nDOMContentLoaded 与 load 事件:\n\n> The load event is fired when the whole page has loaded, including all dependent resources such as stylesheets and images. This is in contrast to DOMContentLoaded, which is fired as soon as the page DOM has been loaded, without waiting for resources to finish loading.\n\n```javascript\nwindow.addEventListener('load', (event) => {\n  console.log('load');\n});\n\ndocument.addEventListener('readystatechange', (event) => {\n  console.log(document.readyState);\n});\n\ndocument.addEventListener('DOMContentLoaded', (event) => {\n  console.log('COMContentLoaded');\n});\n```\n\n运行结果:\ninteractive COMContentLoaded complete load\n\n于是可以根据文档的加载属性 document.readyState 捕捉到不同的加载状态来设置加载动画。\n\n```javascript\ndocument.onreadystatechange = () => {\n  const headBar = document.querySelector('.header-bar');\n  headBar.style.background = 'lightblue';\n  if (document.readyState == 'interactive') {\n    headBar.style.transition = 'width 1.4s ease-in-out';\n    headBar.style.width = '67%';\n  }\n  if (document.readyState == 'complete') {\n    headBar.style.transition = 'width 0.3s ease-in-out';\n    headBar.style.width = '100%';\n    setTimeout(() => {\n      headBar.setAttribute('style', \"transition:width 0s;width:0;background:''\");\n    }, 500);\n  }\n};\n```\n","tags":["JavaScript"],"categories":["program"]},{"title":"页面阅读进度","url":"/posts/a37770e5.html","content":"\n获取当前页面的阅读进度\n\n```javascript\nwindow.addEventListener('scroll', () => {\n  //页面总高度\n  const totalHeight = document.body.clientHeight || document.documentElement.scrollHeight;\n  //当前视窗所占高度\n  const viewHeight = document.documentElement.clientHeight || window.innerHeight;\n  //总体可供滚动的高度\n  const scrollLength = totalHeight - viewHeight;\n  //当前已滚动的高度\n  const scrolledHeight = document.documentElement.scrollTop || document.body.scrollTop;\n  //滚动比例\n  const currentProcess = scrolledHeight / scrollLength;\n  console.log(currentProcess);\n});\n```\n","tags":["JavaScript"],"categories":["program"]},{"title":"关于JavaScript里的this","url":"/posts/9315014e.html","content":"\n#### this 的两个误解\n\n- this 指向函数自身?\n\n```javascript\nfunction test() {\n  var count = 0;\n  console.log(this.count);\n}\nvar count = 1;\ntest(); // 1\n```\n\n- this 指向函数的作用域?\n\n```javascript\nfunction foo() {\n  var a = 2;\n  bar(); //bar()处于foo()的作用域中\n}\nfunction bar() {\n  console.log(a); //2\n  console.log(this.a); //undefined\n}\nfoo();\n```\n\n<!-- more -->\n\n> this 是在运行时绑定的，并不是在编写时绑定的，它的上下文取决于函数调用时的各种条件，this 的绑定和函数声明的位置没有任何关系，只取决于函数的调用方式。  \n> 当一个函数被调用时，会创建一个活动记录(执行上下文)。这个记录会包含函数在哪里被调用(调用栈)、函数的调用方式、传入的参数等信息，this 就是这个记录的一个属性，会在函数执行的过程中用到。\n\n#### this 的绑定规则\n\n- **默认绑定**\n  \n  无法应用其他规则时的默认规则\n\n```javascript\nfunction foo() {\n  console.log(this.a);\n}\nvar a = 2;\nfoo(); //2\n```\n\n上面的例子中，this 指向的是全局对象，而 a 是声明在全局作用域中的变量，于是 this.a 即打印了变量 a 的值。当 foo()运行在严格模式下时，默认绑定不能绑定全局对象，打印结果会是 undefined\n\n- **隐式绑定**\n  \n  调用位置是否有上下文对象，或者是否被某个对象'拥有'或者'包含'。\n\n```javascript\nfunction foo() {\n  console.log(this.a);\n}\nvar obj = {\n  a: 2,\n  foo: foo,\n};\nobj.foo(); //2\n```\n\n上例中调用位置使用 obj 上下文来引用函数，可以看成函数被调用时它就属于了 obj 对象。当函数引用有上下文对象时，隐式绑定规则会把函数调用中的 this 绑定到这个上下文对象。\n\n_隐式丢失_\n\n```javascript\n//隐式丢失\nfunction foo() {\n  console.log(this.a);\n}\nvar obj = {\n  a: 2,\n  foo: foo,\n};\nvar bar = obj.foo;\n//bar实际上引用的是foo函数本身，此时的bar()是一个不带任何修饰的函数调用\nvar a = 'wuhu';\nbar(); //wuhu\n```\n\n同样，在将函数作为参数传递时也会发生赋值，只不过这是一种隐式赋值。\n\n```javascript\n//隐式丢失\nfunction foo() {\n  console.log(this.a);\n}\nfunction doFoo(fn) {\n  fn(); //传递的函数实际的调用位置，js引擎应用默认调用规则\n}\nvar obj = {\n  a: 2,\n  foo: foo,\n};\nvar a = 'wuhu';\ndoFoo(obj.foo); //wuhu\n```\n\n- **显示绑定**\n  \n  不在对象内部包含函数引用，而是在某个对象上强制调用函数，函数的 call()和 apply()方法,bind()方法\n\ncall()和 apply()的第一个参数是用来绑定 this 的，可以直接指定 this 的绑定对象。如果传入的是一个非对象类型，比如字符串或者数字，会被转化成它的对象形式(new String()、new Number())。\n\n```javascript\nfunction foo() {\n  console.log(this.a);\n}\nvar obj = {\n  a: 2,\n};\n//把foo的this强行绑定到obj上\nfoo.call(obj); //2\n```\n\napply()和 call()作用完全一样，只是接受参数的方式不一样\n\n```javascript\nfunc.call(this, arg1, arg2);\nfunc.apply(this, [arg1, arg2]);\n```\n\n_硬绑定_\n\n```javascript\nfunction foo(something) {\n  console.log(this.a, something);\n  return this.a + somethig;\n}\nvar obj = {\n  a: 2,\n};\nvar bar = function () {\n  return foo.apply(obj, arguments);\n  /*arguments 是一个函数的局部变量。\n  它可以被用作被调用对象的所有未指定的参数。\n  这样，你在使用apply函数的时候就不需要知道被调用对象的所有参数。\n  你可以使用arguments来把所有的参数传递给被调用对象\n  被调用对象接下来就负责处理这些参数。*/\n};\nvar b = bar(3); //2 3\nconsole.log(b); //5\n```\n\n在上面的例子里，无论如何调用 bar 函数，它都会永远会返回 foo 被绑定后的结果，这种显示的强制绑定为硬绑定。\n\nbind()函数就是为了方便硬绑定而出现的函数\n\n```javascript\nfunction foo(something) {\n  console.log(this.a, something);\n  return this.a + something;\n}\nvar obj = {\n  a: 2,\n};\nvar bar = foo.bind(obj);\nvar b = bar(3); //2 3\nconsole.log(bar); // 5\n```\n\nbind()会返回一个硬编码的新函数--它会把你指定的参数设置为 this 的上下文并调用原始函数\n\n_API 调用的'上下文'_\n\n第三方库的一些函数，JavaScript 语言和宿主环境中许多新的内置函数都提供一个可选的参数，通常被称为上下文(context),其作用和 bind()一样，确保调用函数使用指定的 this\n\n```javascript\nfunction foo(el) {\n  console.log(el, this.id);\n}\nvar obj = {\n  id: 'hello motherfucker',\n};\n[1, 2, 3].forEach(foo, obj);\n//1 hello... 2 hello... 3 hello...\n```\n\nforEach 的第二个参数，绑定回调时函数的 this 值\n\n- **new 绑定**\n\nJavaScript 里的构造函数:\n\n> 构造函数只是一些使用 new 操作符时被调用的函数。它们并不会属于某个类，也不会实例化一个类。实际上，它们甚至都不能说是一种特殊的函数类型，它们只是被 new 操作符调用的普通函数而已，这种函数调用被称为构造函数调用。\n\n> 实际上并不存在所谓的‘构造函数’，只有对于函数的‘构造调用’\n\n使用 new 来调用函数会自动执行下面的操作:\n\n1. 创建一个全新的对象\n2. 这个新对象会被执行[Prototype]连接\n3. 这个新对象会绑定到函数调用的 this\n4. 如果函数没有返回其他对象，那么 new 表达式中的函数调用会自动返回这个新对象\n\n```javascript\nfunction foo(a) {\n  this.a = a;\n}\nvar bar = new foo(2);\nconsole.log(bar.a); //2\nconsole.log(bar); // foo {a:2}\n```\n","tags":["JavaScript"],"categories":["program"]},{"title":"回到顶部与页面滚动设置","url":"/posts/c62cf7f9.html","content":"\n设置一个回到顶部的按钮\n\n```javascript\ndocument.querySelector('.get-top').addEventListener('click', () => {\n  window.scrollTo({\n    top: 0,\n    behavior: 'smooth',\n  });\n});\n\nwindow.addEventListener('scroll', () => {\n  if (window.scrollY !== 0) {\n    document.querySelector('.get-top').style.opacity = '1';\n  } else {\n    document.querySelector('.get-top').style.opacity = '0';\n  }\n});\n```\n\n<!-- more -->\n\n也可以直接在 html 或者 body 里设置滚动的 css\n\n```css\nbody,\nhtml {\n  scroll-behavior: smooth;\n}\n```\n\n(发现 safari 还不兼容 scroll-behavior，其他浏览器都能兼容，那能有什么办法，绝不能惯它，就主动等它兼容)\n\n顺便补充一些我一直混乱的地方:\n\n- window 视图属性\n\n  - innerHeight 表示获取窗体的内部高度,不包括用户界面元素\n  - outerHeight 表示整个浏览器窗体的大小,包括任务栏等\n  - pageYOffset 表示整个页面滚动的像素值\n  - screenY 浏览器窗口在显示器中的位置\n\n- screen 视图属性\n  - availHeight 显示器可用高度,不计算例如底部的固定任务栏\n  - height 显示器屏幕的真实高度\n- 元素视图属性\n\n  - clientTop 表示内容区域的左上角相对于整个元素左上角的位置（包括边框）\n  - clientHeight 表示内容区域的高度和宽度，包括 padding 大小，但是不包括边框和滚动条。\n  - offsetTop 表示相对于最近的祖先定位元素（CSS position 属性被设置为 relative、absolute 或 fixed 的元素）的左右偏移值。\n  - offsetHeight 整个元素的尺寸（包括边框）\n  - scrollTop 表示元素滚动的像素大小。可读可写。\n  - scrollHeight 表示整个内容区域的宽高，包括隐藏的部分。如果元素没有隐藏的部分，则相关的值应该等用于 clientWidth 和 clientHeight。当你向下滚动滚动条的时候，scrollHeight 应该等用于 scrollTop + clientHeight。\n\n- 鼠标位置\n  - clientX clientY 相对于 window，为鼠标相对于 window 的偏移。\n  - pageX pageY 为鼠标相对于 document 的坐标\n  - screenX screenY 鼠标相对于显示器屏幕的偏移坐标。\n\n参考来源:[张鑫旭-CSSOM 视图模式(CSSOM View Module)相关整理](http://www.zhangxinxu.com/wordpress/?p=1907)\n","tags":["JavaScript"],"categories":["program"]},{"title":"关于GitHub403 timeout的设置","url":"/posts/11d52230.html","content":"\n最近这段时间 Github 体验极差,不知道是我的问题还是怎样,每次推送文章\\提交分支都在频繁 403,烦得我半夜猛砸键盘,以至于去厕所吃了坨屎才冷静下来.\n\n使用代理软件的话,可以去看一下软件的代理端口,然后设置一下 git 的 http 代理\n\n```cmd\ngit config --global http.proxy 127.0.0.1:8087\n```\n\n取消代理\n\n```cmd\ngit config --global --unset http.proxy\n```\n\n**更新：403 原因**\n![微博截图](/blog_images/github403_block.png)\n","tags":["Github"],"categories":["program"]},{"title":"设置文字只显示一行","url":"/posts/15761b84.html","content":"\nCSS 设置文字只显示一行,超出部分用省略号代替\n\n```html\n<div class=\"info\">\n  <a> doloribus minima. Voluptate repellat autem delectus recu</a>\n</div>\n```\n\n<!-- more -->\n\n```css\ndiv {\n  width: 300px; /*设置宽度*/\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap; /*规定段落中的文本不进行换行*/\n}\n\ndiv a {\n  color: blue;\n}\n```\n\n如上设置 a 链接的 ellipsis 属性,会发现 a 链接后面的省略号颜色仍是黑色,而不是 a 链接文本的 blue. 因为 text-overflow 只对块级元素溢出的内容有效,所以此处的省略号跟随的是 div 元素,颜色是 div 元素设定的颜色.\n\n```css\ndiv a{\n  width: 300px; /*设置宽度*/\n  display:block\n  overflow: hidden;\n  text-overflow: ellipsis;\n  color:blue\n  white-space: nowrap; /*规定段落中的文本不进行换行*/\n}\n\n```\n\n如上,将 a 元素的设置为块级元素可以达到相同效果.\n","tags":["CSS"],"categories":["program"]},{"title":"js闭包的集大成者-模块","url":"/posts/8a8f5cdd.html","content":"\n```javascript\nfunction module() {\n  var something = 'cool';\n  var another = [1, 2, 3];\n  function doSomething() {\n    console.log(something);\n  }\n  function doAnother() {\n    console.log(another.join('!'));\n  }\n  return {\n    doSomething: doSomething,\n    doAnother: doAnother,\n  };\n}\n\nvar foo = module();\nfoo.doSomething();\nfoo.doAnother();\n```\n\n<!-- more -->\n\ndoSomething()和 doAnother()函数具有涵盖模块实例内部作用域的闭包，当这两个函数被传递到词法作用域外部时，依然可以访问和修改私有作用域。\n\n---\n\nES6 的包机制\n\n- export {app} 或者 export default app\n- import {app} from '' 或者 import app from ''  \n  在浏览器里测试的时候\n\n```html\n<script src=\"./bar.js\" type=\"module\"></script>\n```\n\nNode 的包机制\n\n- module.exports={app} 或者 module.exports=app\n- const {app}=require('') 或者 const app=require('')\n","tags":["JavaScript"],"categories":["program"]},{"title":"循环和闭包","url":"/posts/79426e1b.html","content":"\n```javascript\nfor (var i = 1; i <= 5; i++) {\n  setTimeout(function timer() {\n    console.log(i);\n  }, i * 1000);\n}\n```\n\n如果代码的初衷每隔一秒地打印*1 2 3 4 5*，上面的代码却只能每隔一秒地打印*6 6 6 6 6*。\n\n<!-- more -->\n\n因为 setTimeout 是异步事件，当 js 遇到异步事件时会把异步事件放到执行队列里，于是每一次 for 循环遇到的 setTimeout 都被放到了执行队列等待执行，但是因为 for 循环的阻塞机制，在执行队列里的所有 setTimeout 将不得不等到 for 循环结束才能回到主线程里。\n\n而等到 for 循环结束，i 的值已经变成了 6.尽管每次循环都定义了一个 setTimeout，但是它们都被 for 循环封闭在了一个共享的全局作用域中，它们实际上摸到的 i 值其实都是一个 i，所以打印出来的都是 6.\n\n---\n\n将代码改写\n\n```javascript\nfor (var i = 1; i <= 5; i++) {\n  (function (i) {\n    setTimeout(function timer() {\n      console.log(i);\n    }, i * 1000);\n  })(i);\n}\n```\n\n这个时候代码终于如愿以偿地实现了人类无聊的初衷，每隔一秒地打印*1 2 3 4 5*\n\n上面把每一次 for 循环的执行操作写成了立即执行函数，在循环过程中每个迭代都生成了一个闭包作用域，于是 setTimeout 的每一次回调都可以看成一个闭包，它可以一直访问它所在作用域里的变量。\n\n---\n\n随着时代的发展，代码可以是这个样子\n\n```javascript\nfor (let i = 1; i <= 5; i++) {\n  setTimeout(function timer() {\n    console.log(i);\n  }, i * 1000);\n}\n```\n\nlet 可以用来劫持块作用域并且在这个块作用域中声明一个变量。\n\nfor 循环头部的 let 声明还会有一个特殊的行为，这个行为指出变量在循环过程中不止被声明一次，每次迭代都会声明。随后的每个迭代都会使用上一个迭代结束时的值来初始化这个变量。\n\n> 当函数可以记住并访问所在的词法作用域时，就产生了闭包，即使函数是在当前词法作用域之外执行。\n","tags":["JavaScript"],"categories":["program"]},{"title":"完颜萍为什么会铁掌门的铁掌功","url":"/posts/f108c748.html","content":"\n在看倚天屠龙记的时候讲到，郭襄从武修文的妻子完颜萍那里学得几招铁掌功，在与无色大师练手的时候糊弄了一把。我突然想不到为什么完颜萍会铁掌门的铁掌功，在前几部里关于铁掌门都不过是裘千仞和裘千尺两个人的事情，于是在网络上搜索了一下。\n\n<!--more-->\n\n> 耶律齐冷笑道：“我武功高于你，那不错，可这又有什么希罕？只因我曾得明师指点，并非我自己真有什么过人之处。你所学的铁掌功夫，原是一门了不起的武功，不过教你的那位师父所学未精，你练的时日又浅，暂且不及旁人，原是理所当然……”新修版《神雕侠侣·第十回》\n\n> 完颜萍心想：“这一招是我铁掌功的十八擒拿手之一，又何用你教了？但不知他怎会使我铁掌门的掌法？”……铁掌门的拿手功夫一是轻功，二是掌法，十八擒拿手尤其厉害……连载版《神雕侠侣.第二十七回》……古墓派玉女心经向以轻功擅长，称得上天下第一，那是不必多说了。完颜萍是铁掌帮门的弟子，当年铁掌帮的帮主裘千仞号称“铁掌水上飘”，既然称得上“水上飘”三字，自是一等一的轻功。岂知那青衣女子，不疾不徐的跟在完颜萍身后。连载版《神雕侠侣·第二十八章》\n\n另外，完颜萍是金国皇族，金国灭了辽国，于是作为辽国皇族的耶律楚材为了报仇，辅助铁木真灭了金国，因此完颜萍才要刺杀耶律楚材。\n","tags":["读书"],"categories":["记录"]},{"title":"关于自杀","url":"/posts/6f6e473e.html","content":"\n前段时间在想，当一个人执意死亡，那么死亡于他就是解脱或者快乐，但我们却不喜欢看到自杀，因为死亡这件事情尽管于死者可能是快乐，但往往带给生者痛苦，我们阻拦自杀是不是从某一种角度上讲只是在保护自己。\n\n<!--more-->\n\n所谓**人生来自由却又无所不在枷锁之中**，从某一种程度上讲，你的命并不完全属于你，或者说你的生命不断地在被赋予一些责任，在这个过程中你已经身不由己。\n\n有一个动画片叫寻梦环游记，它讲一个人的死亡分三个阶段，最后一个阶段就是被所有人忘记。我看到的时候有很感动，但现在想来又不过是生者对死亡的矫揉造作。  \n当一个人非自然地死去，这对他也许并不如自杀那样情愿地离开这个世界，可终究不得不，从社会主义无神论来讲，生物的死亡就如此了断了，对死者而言一切皆空。但人类不是理性的，我们赋予死者的责任被落空，我们长久寄托的情感没有了意义，我们只好不停的回忆和缅怀来缓冲这些失去，直到我们终于可以接受这些损失，不再记忆，终于将它冠冕堂皇地称之为第三次死亡。\n\n忘记了哪里看到的话，**飞蛾扑火时，它一定是极快乐的**，所以我愿意相信每一个执意自杀的人，那一刻都是极快乐的。于我们生者而言，死者如果没有欠你钱的话，还是要多一分理解和早一些释怀。\n\n更新一下\n\n始终记得那个那股血腥，在我最近几个睡不着的晚上重复记忆。那是在瓷砖板上凝固出的血液配合瓷板砖潮湿的气味所带来的血腥，我分不清楚这血腥所带来的恶心是记忆里的恶心还是记忆带给现在的生理反应。在气味强烈的冲击下，随之而来的是一丝悲哀，会是怎样的决心才会用迟钝的刀片一下又一下地割出这片血腥，决绝地让现世的人难过，像是被抛弃。  \n从此我对自杀保持开放，并毫不抗拒地想象。\n\n> 这回到费立鹏提出的一个经典结论，“在中国，自杀不是一个医学问题，而是一个社会问题”。现代社会趋向于让人的痛苦社会化，制度也试图把人的痛苦放在纳入自己的管理范畴，比如在一场灾难里，人的痛苦是社会性的，可以通过预防、报道、救灾和哀悼这个流程来解决。随着经济的发展，农村人口的流动，以及自杀用品（农药）的控制，中国的总自杀率尤其是农村女性的自杀率开始下降。\n> 但在美国人类学家凯文博看来，人身体和心灵的苦痛一定都包含着巨大的不确定性。灾难是无法预测的，人的感受和体验也是不确定的，种种痛苦都是崭新、敏锐又不确定的，他将自杀理解为一种反抗行为。灾难可能完全来自命运。在法律、政治、医学甚至农业之外，人类是否还有别的选择。\n> _2021-10-18_\n","tags":["随想"],"categories":["记录"]}]